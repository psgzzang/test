<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SPMCommon</name>
    </assembly>
    <members>
        <member name="T:SPM.Configuration.AboutData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Configuration.AboutData.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.DeviceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.ManufacturerName">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.FirmwareVersion">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.ModelNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.SerialNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AboutData.CustomData">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Configuration.AboutData.ToString">
            <summary>
            Returns the properties of the class as a single line of text.
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Configuration.AttachedDevices">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.AttachedDevices.Instance">
            <summary>
             The single instance of the AttachedDevices
            </summary>
        </member>
        <member name="F:SPM.Configuration.AttachedDevices.RootDataFolder">
            <summary>
            </summary>
        </member>
        <member name="F:SPM.Configuration.AttachedDevices.SettingsFileName">
            <summary>
            </summary>
        </member>
        <member name="F:SPM.Configuration.AttachedDevices.SPMDataFolder">
            <summary>
            </summary>
        </member>
        <member name="F:SPM.Configuration.AttachedDevices.SettingsFileFullpath">
            <summary>
            </summary>
        </member>
        <member name="F:SPM.Configuration.AttachedDevices.LogfileFolder">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Configuration.AttachedDevices.List">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.AttachedDevices.ContainsDeviceType(SPM.Utilities.DeviceTypes)">
            <summary>
            Returns if there is a device in the list with the appropriate device type
            </summary>
            <param name="deviceType"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Configuration.AttachedDevices.DeleteDeviceType(SPM.Utilities.DeviceTypes)">
            <summary>
            Removes any devices in the list with the given device type
            </summary>
            <param name="deviceType"></param>
        </member>
        <member name="M:SPM.Configuration.AttachedDevices.Save">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.AttachedDevices.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.AttachedDevices.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Configuration.CommonSettings">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.Instance">
            <summary>
             The single instance of the CommonSettings
            </summary>
        </member>
        <member name="E:SPM.Configuration.CommonSettings.SettingsChanged">
            <summary>
             Event raised when one or more of the settings have been changed through rereading the settings file.
            </summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.RootDataFolder">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SettingsFileName">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SPMDataFolder">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SettingsFileFullpath">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.LogfileFolder">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SBIServicePublisherAddress">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SBIServiceSubscriberAddress">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.CommonSettings.SBIServiceSubscriberTCPAddress">
            <summary></summary>
        </member>
        <member name="M:SPM.Configuration.CommonSettings.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.POSSoftware">
            <summary>
            Gets/Sets the POS Software currently using the SPM
            </summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.LoggingLevel">
            <summary>Gets/Sets the LoggingLevel</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.StoreNumber">
            <summary>Gets/Sets the Store Number</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.SatelliteNumber">
            <summary>Gets/Sets the Satellite Number</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.TerminalID">
            <summary>Gets/Sets the Terminal ID</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.SBIMaxStringContentLength">
            <summary>Gets/Sets the maximum size of the SBI content string.</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.SmartPOSClientCheckInterval">
            <summary>Gets/Sets the SmartPOSClientCheckInterval of the SBI content string.</summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.SBIMachineAddress">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.UseCustomHostSettings">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.EscalationEndDate">
            <summary>
            Gets or sets the escalation end date.
            </summary>
            <value>The escalation end date.</value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.EscalateLogging">
            <summary>
            Gets or sets the escalate logging.
            </summary>
            <value>The escalate logging.</value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.EscalationMaxDuration">
            <summary>
            Gets or sets the duration of the escalation max.
            </summary>
            <value>The duration of the escalation max.</value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.EscalationMinDuration">
            <summary>
            Gets or sets the duration of the escalation min.
            </summary>
            <value>The duration of the escalation min.</value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Configuration.CommonSettings.SecurityMeasure">
            <summary>Information used to track security of the SPM</summary>
        </member>
        <member name="M:SPM.Configuration.CommonSettings.Save">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.CommonSettings.SPMDirectory">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Configuration.CommonSettings.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.CommonSettings.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="M:SPM.Configuration.DefaultSPMProfiles.AddLoyaltyProcessorUrls(SPM.Objects.SPMProfileDS)">
            <summary>
            Populates the "LoyaltyProcessorUrl" table in the XML Schema Database with the default rows required for SPM.
            </summary>
            <param name="ds">The XML Schema Database to populate</param>
        </member>
        <member name="M:SPM.Configuration.DefaultSPMProfiles.AddAUTCardTypeDevices(SPM.Objects.SPMProfileDS,System.Int16)">
             <summary>
             Add the default Devices for each supported Card type in the Austria region.
            
             Card Type Examples: Credit, Reward
             Device Type Examples: IPP350, Honeywell Scanner
             </summary>
             <param name="ds"></param>
             <param name="countryID"></param>
        </member>
        <member name="M:SPM.Configuration.DefaultSPMProfiles.AddLoyaltyProcessorUrls(SPM.Objects.SPMProfileDS,System.Int16)">
            <summary>
            Adds the supported loyalty endpoints for the selected countryID.
            
            Note: Currently, the only country which supports loyalty endpoints is Snaplogic. There is currently no handling for scenarios like
                  multiple Loyalty gateways per country, OR specialized endpoints for a particular loyalty gateway based on selected country.
                  
            We are keeping the logic identical to the way it is currently handled for VP3 card processing endpoints.
            </summary>
            <param name="ds">The SPM XML Schema Definition.</param>
            <param name="countryID">The numerical country id for the country.</param>
        </member>
        <member name="T:SPM.Configuration.FTPSettings">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Instance">
            <summary>
             The single instance of the CommonSettings
            </summary>
        </member>
        <member name="F:SPM.Configuration.FTPSettings.SettingsFileName">
            <summary></summary>
        </member>
        <member name="F:SPM.Configuration.FTPSettings.SettingsFileFullpath">
            <summary></summary>
        </member>
        <member name="M:SPM.Configuration.FTPSettings.#ctor">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Server">
            <summary></summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Username">
            <summary></summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Password">
            <summary></summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Timeout">
            <summary></summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.FTPPort">
            <summary></summary>
        </member>
        <member name="P:SPM.Configuration.FTPSettings.Revision">
            <summary></summary>
        </member>
        <member name="M:SPM.Configuration.FTPSettings.Save">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.FTPSettings.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.FTPSettings.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Configuration.PaymentManagerSettings">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.Instance">
            <summary>
             The single instance of the PaymentManagerSettings
            </summary>
        </member>
        <member name="E:SPM.Configuration.PaymentManagerSettings.SettingsChanged">
            <summary>
             Event raised when one or more of the settings have been changed through rereading the settings file.
            </summary>
        </member>
        <member name="F:SPM.Configuration.PaymentManagerSettings.SettingsFileName">
            <summary>
            The name of the Payment Manager settings file.
            </summary>
        </member>
        <member name="F:SPM.Configuration.PaymentManagerSettings.SettingsFileFullpath">
            <summary>
             The full path to the Payment Manager settings file.
            </summary>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.#ctor">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.UserAgent">
            <summary>
            Gets the user agent.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitTransactionCount">
            <summary>
            The number of debit transactions performed by the terminal.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitPINKeyIndex">
            <summary>
            The index of the PIN key currently used for Debit.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitTPK">
            <summary>
            The encrypted Terminal PIN Key currently used for Debit.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitTAK">
            <summary>
            The encrypted Terminal Authentication Key currently used for Debit.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitLastUpdate">
            <summary>
            Records the date/time the fields required for Canadian Debit were last updated.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DebitMAC">
            <summary>
            The base MAC format string to be used for Debit transactions.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.EMVupdateNeeded">
            <summary>
            Whether or not an update of the EMV parameters is needed at the next maintenance window.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PMSuccess">
            <summary>
            Whether or not Request.PerformMaintenace() was successful last time.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PINKeyUpdateNeeded">
            <summary>
            Whether or not a PIN Key update is needed.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ShowTipPrompt">
            <summary>
            Gets or sets whether it will show tip prompt on the pinpad device.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PerformDialBackup">
            <summary>
            Gets or sets whether to make the request using the modem, if the broadband connection fails.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.UKPrinterName">
            <summary>
            Gets or sets the name of the printer to output IPP350 receipt data on.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.EnableRemoveCardPOSBeep">
            <summary>
            Indicates whether the POS machine should beep during the "Remove Card" phase of a Vx820 transaction.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.BeepSoundPath">
            <summary>
            Gets or sets the path of the sound file to play as a system beep.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.VxAttemptUpdateRepair">
            <summary>
            Whether or not SPMConfigurationManager should attempt Vx820 Driver updates &amp; repair processes.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantPartnerID">
            <summary>
            Gets or sets the PartnerID for this merchant (eg. FWH) at the Mobile payment servers.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantGatewayURL">
            <summary>
            Gets or sets the URL of the Mobile payment servers.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantCredentialURL">
            <summary>
            Gets or sets the URL of the Mobile payment credential servers.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantUseManual">
            <summary>
            Gets or sets whether or not to us the manual (config file) credentials for Mobile payment.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantMerchantID">
            <summary>
            Gets or sets the ID for this merchant (store) for Mobile payment.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantMerchantKey">
            <summary>
            Gets or sets the password for this merchant (store) for Mobile payment.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PaydiantStoreLocationID">
            <summary>
            Gets or sets the location ID for this merchant (store) for Mobile payment.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.SnapLogicGatewayEncryptedBearerToken">
            <summary>
            Gets or sets the encrypted Bearer Token to be used with the SnapLogic gateway.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.SignatureAlways">
            <summary>
            Gets or sets whether the SPM should always require a signature for credit cards or rely on the setting from the gateway.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ManualImprintLines">
            <summary>
            Gets or sets the number of blank receipt text lines to leave for manual entry signature.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.IsStandalone">
            <summary>
            Gets whether the terminal supported in this country is standalone (communicates with payment processor directly).
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.LoyaltyGateway">
            <summary>
            Gets which LoyaltyGateway is supported in a current envrionment
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.Password">
            <summary>
            Gets or sets the password.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkAppKeyEnc">
            <summary>
            Get or Set Thorlink APP Key Encrypted
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkSiteNoEnc">
            <summary>
            Gets or sets the encrypted Thorlink site number
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkMerchantCodeEnc">
            <summary>
            Gets or sets the encrypted Thorlink merchant code
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkDeviceCodeEnc">
            <summary>
            Gets or sets the encrypted Thorlink device code
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkDeviceCode">
            <summary>
            Get or Set Thorlink DeviceCode
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkMerchantCode">
            <summary>
            Get or Set Thorlink MerchantCode
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ThorlinkSiteNo">
            <summary>
            Get or Set Thorlink SiteNo
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DecryptedPassword">
            <summary>
            Gets or sets the password in the clear. Must have administrative privileges to use this feature.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.LastEMVFileApplied">
            <summary>
            Gets or sets the last emv file configurations that were applied.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.CashOnlyTimeout">
            <summary>
            Gets or sets the Cash Only Timeout value.
            </summary>
            <remarks>
            The timeout value determines the length of time, in seconds
            the SPM should wait for a response from the host before returning a
            pseudo response when the transaction is a Cash Only transaction.
            </remarks>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.RequireStoreNumberMatch">
            <summary>
            Gets/Sets whether the POS store must match the SPM store number to perform transactions
            </summary>
            <remarks>
            When TestMode is true transactions will be allowed regardless of this setting.
            </remarks>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.MaxRequestSize">
            <summary>
            Gets or sets the max number of bytes a request can be.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ICT250ManualPort">
            <summary>
            Gets or sets whether or not to use the COM port specified manually for the ICT250.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ICT250CommPort">
            <summary>
            The COM port to use with the ICT250 if ICT250ManualPort is true.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.Saturn6500ManualPort">
            <summary>
            Gets or sets whether or not to use the COM port specified manually for the Saturn6500.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.Saturn6500CommPort">
            <summary>
            The COM port to use with the Saturn6500 if Saturn6500ManualPort is true.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.UseDialPrefix">
            <summary>
            Gets or sets whether a prefix should be used prior to the dialing sequence
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DialPrefix">
            <summary>
            Gets or sets the prefix to use prior to dialing a modem.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.PromoBarcode">
            <summary>
            Gets or sets the comm port used for the modem.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.CommPort">
            <summary>
            Gets or sets the comm port used for the modem.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.UseContactless">
            <summary>
            Gets or sets whether or not this store supports Contactless (tap to pay).
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.UseMobile">
            <summary>
            Gets or sets whether or not this store supports Mobile payment.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.TestStorePrefix">
            <summary>
            Gets the Prefix to use for test stores.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ModemCommands">
            <summary>
            Gets or sets the Modem Commands, which initialize the modem prior to dialing.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ModemSettings">
            <summary>
            Gets or sets the modem settings (i.e. baud rate, parity, data bits, stop bits)
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.ModemTimeout">
            <summary>
            Gets or sets the modem timeout.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.BaudRate">
            <summary>
            Gets the baud rate to use for the modem.
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.Parity">
            <summary>
            Gets the parity used in modem connection
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.DataBits">
            <summary>
            Gets the DataBits used for the modem connection
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.StopBit">
            <summary>
            Gets the StopBit used for the modem
            </summary>
        </member>
        <member name="P:SPM.Configuration.PaymentManagerSettings.BarcodeURL">
            <summary>
            Gets or sets the URL to be printed on the receipt as part of the barcode
            </summary>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.Save">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.GetDefaultSnapLogicBearerTokens(SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlRow)">
            <summary>
            Returns the default encrypted SnapLogic bearer token string for a particular Loyalty URL.
            </summary>
            <param name="loyaltyUrlRow">The SnapLogic loyalty endpoint to get a bearer token string for.</param>
            <returns>The bearer token string for the endpoint.</returns>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.GetThorlinkAppKeyDec(System.String)">
            <summary>
            Gets the Thorlink app key as a decrypted string
            </summary>
            <param name="key">The key to decrypt</param>
            <returns>The decrypted string</returns>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.PaymentManagerSettings.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Configuration.SettingsChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Configuration.SettingsChangedEventArgs.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="P:SPM.Configuration.SettingsChangedEventArgs.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Configuration.SPMProfiles">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.ClearGenericSwipeDeviceHack(System.Data.DataSet)">
             <summary>
             Clears Generic Card Swipe as a valid card device from all unsupported countries.
            
             This method is necessary to prevent Generic Card Swipe from showing up as a device when
             a country which was previously unsupported is upgraded to a version where it is officially supported.
             </summary>
             <param name="ds">The dataset to clear the row entries from.</param>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.MigrateAustriaProfile">
            <summary>
            Migrates settings from legacy SPM versions to proper updated settings for Austrian SPM.
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.MigrateGermanyProfile">
            <summary>
            Migrates settings from legacy SPM versions to proper updated settings for German SPM.
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.SetThorlinkDefaultProfile">
             <summary>
             Determines if the store requires a default setup of Thorlink, and sets up defaults if needed.
            
             Situation occurs when a location was previously unsupported with Thorlink, and is newly upgraded to a supported version of SPM.
             If configuration values are empty -- Indicates that this is probably a fresh install or an upgrade from a version of SPM with no Thorlink
             </summary>
             <returns>
             True:  If default Thorlink settings applied.
             False: If Thorlink was previously set up already.
             </returns>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.ProfilesDatasetFilename">
             <summary>
            
             </summary>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.ProfilesDatasetFileFullpath">
             <summary>
            
             </summary>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.DEFAULT_MOBILE_PROD_GATEWAY_URL">
            <summary>
            The default production gateway url for Paydiant mobile.
            </summary>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.DEFAULT_MOBILE_PROD_CREDENTIAL_URL">
            <summary>
            The default production credential url for Paydiant mobile.
            </summary>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.DEFAULT_MOBILE_TEST_GATEWAY_URL">
            <summary>
            The default test gateway url for Paydiant mobile.
            </summary>
        </member>
        <member name="F:SPM.Configuration.SPMProfiles.DEFAULT_MOBILE_TEST_CREDENTIAL_URL">
            <summary>
            The default test credential url for Paydiant mobile.
            </summary>
        </member>
        <member name="P:SPM.Configuration.SPMProfiles.IsLocked">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.SPMProfiles.Data">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.SPMProfiles.ActiveProfile">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Configuration.SPMProfiles.ActiveCardTypeDevices">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.ForceReload">
            <summary>
            Reads the dataset from the disk again.
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.Save">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.MigrateProfiles(System.Boolean)">
            <summary>
            Update defaults for older versions of SPM to match current standards, especially for USA.
            </summary>
            <param name="Vx820Attached">If a Vx820 device is attached, it will be set as the default for all US/CA payment types.</param>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Configuration.SPMProfiles.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Controls.DataGridViewPercentageColumn">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Controls.DataGridViewPercentageColumn.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Controls.DataGridViewPercentageColumn.CellTemplate">
            <summary>
            Gets or sets the template used to create new cells.
            </summary>
            <returns>
            A <see cref="T:System.Windows.Forms.DataGridViewCell"/> that all other cells in the column are modeled after. The default is null.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:SPM.Controls.DataGridViewPercentageCell">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Controls.DataGridViewPercentageCell.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Controls.DataGridViewPercentageCell.EditType">
            <summary>
            Gets the type of the cell's hosted editing control. 
            </summary>
            <returns>
            A <see cref="T:System.Type"/> representing the <see cref="T:System.Windows.Forms.DataGridViewTextBoxEditingControl"/> type.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:SPM.Controls.DataGridViewPercentageCell.Paint(System.Drawing.Graphics,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Int32,System.Windows.Forms.DataGridViewElementStates,System.Object,System.Object,System.String,System.Windows.Forms.DataGridViewCellStyle,System.Windows.Forms.DataGridViewAdvancedBorderStyle,System.Windows.Forms.DataGridViewPaintParts)">
            <param name="graphics">The <see cref="T:System.Drawing.Graphics"/> used to paint the <see cref="T:System.Windows.Forms.DataGridViewCell"/>.</param><param name="clipBounds">A <see cref="T:System.Drawing.Rectangle"/> that represents the area of the <see cref="T:System.Windows.Forms.DataGridView"/> that needs to be repainted.</param><param name="cellBounds">A <see cref="T:System.Drawing.Rectangle"/> that contains the bounds of the <see cref="T:System.Windows.Forms.DataGridViewCell"/> that is being painted.</param><param name="rowIndex">The row index of the cell that is being painted.</param><param name="cellState">A bitwise combination of <see cref="T:System.Windows.Forms.DataGridViewElementStates"/> values that specifies the state of the cell.</param><param name="value">The data of the <see cref="T:System.Windows.Forms.DataGridViewCell"/> that is being painted.</param><param name="formattedValue">The formatted data of the <see cref="T:System.Windows.Forms.DataGridViewCell"/> that is being painted.</param><param name="errorText">An error message that is associated with the cell.</param><param name="cellStyle">A <see cref="T:System.Windows.Forms.DataGridViewCellStyle"/> that contains formatting and style information about the cell.</param><param name="advancedBorderStyle">A <see cref="T:System.Windows.Forms.DataGridViewAdvancedBorderStyle"/> that contains border styles for the cell that is being painted.</param><param name="paintParts">A bitwise combination of the <see cref="T:System.Windows.Forms.DataGridViewPaintParts"/> values that specifies which parts of the cell need to be painted.</param>
        </member>
        <member name="T:SPM.Firmware.NamespaceDoc">
            <summary>
            The firmware update management components within the SPM.
            </summary>
        </member>
        <member name="T:SPM.Firmware.ExpiryInfo">
            <summary>
            Defines under which conditions a firmware update would expire and lock a terminal.
            </summary>
        </member>
        <member name="F:SPM.Firmware.ExpiryInfo.ExpiryDate">
            <summary>
            Defines a date after which the firmware is expired.
            </summary>
        </member>
        <member name="F:SPM.Firmware.ExpiryInfo.Required">
            <summary>
            Defines whether or not a firmware update is required.
            </summary>
        </member>
        <member name="F:SPM.Firmware.ExpiryInfo.NumTries">
            <summary>
            Defines the number of installation attempts so far.
            </summary>
        </member>
        <member name="F:SPM.Firmware.ExpiryInfo.MaxTries">
            <summary>
            Defines the maximum number of installation attempts allowed.
            </summary>
        </member>
        <member name="F:SPM.Firmware.ExpiryInfo.binariesID">
            <summary>
            The Software Updates binariesID for this firmware update.
            </summary>
        </member>
        <member name="T:SPM.Firmware.FirmwareManager">
            <summary>
            This class encapsulates the logic for firmware update management within the SPM.
            </summary>
        </member>
        <member name="M:SPM.Firmware.FirmwareManager.IsFirmware(System.String)">
            <summary>
            Check whether if the update file is a firmware update, then: ApplyFirmwareUpdate()
            </summary>
            <param name="fileName">Filename of the path to check.</param>
            <returns>True if it is a firmware update, otherwise false.</returns>
        </member>
        <member name="M:SPM.Firmware.FirmwareManager.IsDeviceLocked">
            <summary>
            Call this method to determine if the device should be locked. ie. cannot be used for transactions.
            </summary>
            <returns>True if locked, false otherwise.</returns>
        </member>
        <member name="M:SPM.Firmware.FirmwareManager.IsDateExpired(System.Nullable{System.Int64})">
            <summary>
            Call this method to find out if the expiry date has passed and the device should be locked.
            </summary>
            <param name="binariesID">ID of the update.</param>
            <returns>True if the data is expired, false otherwise.</returns>
        </member>
        <member name="M:SPM.Firmware.FirmwareManager.IsNumTriesMaxedOut(System.Nullable{System.Int64})">
            <summary>
            Call this method to find out if the number of tries has maxed out, and the device should be locked.
            </summary>
            <param name="binariesID">ID of the update.</param>
            <returns>True if the number of tries is maxed out, false otherwise.</returns>
        </member>
        <member name="M:SPM.Firmware.FirmwareManager.UpdateFWUConfigFile(System.String,System.Nullable{System.Int64})">
            <summary>
            Call this method to update the FWU config file.
            </summary>
            <param name="SavedFilename">Filename of the path to check.</param>
            <param name="binariesID">ID of the update.</param>
        </member>
        <member name="T:SPM.Objects.SPM2011Profile">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.SPM2011Profile.Key">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.SPM2011Profile.Name">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.SPM2011Profile.Country">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.SPM2011Profile.Language">
            <summary>
            </summary>
        </member>
        <member name="T:SPM.Objects.ModemInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Objects.ModemInfo.#ctor(System.String,System.String)">
            <summary>
            </summary>
            <param name="commPort"></param>
            <param name="manufacturerName"></param>
        </member>
        <member name="P:SPM.Objects.ModemInfo.CommPort">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.ModemInfo.ManufacturerName">
            <summary>
            </summary>
        </member>
        <member name="T:SPM.Objects.SecurityMeasure">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS">
             <summary>
            Represents a strongly typed in-memory cache of data.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLoyaltyProcessorUrlsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlDataTable.GetCustomLoyaltyUrlRow">
            <summary>
            Returns the Custom loyalty endpoint row.
            </summary>
            <returns>Returns the Custom loyalty endpoint.</returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlDataTable.GetUnknownLoyaltyUrlRow">
            <summary>
            Returns the Unknown loyalty endpoint row for the environment.
            </summary>
            <returns>The production "Unknown" endpoint, if in production mode, or the test "Unknown" endpoint if in test mode.</returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.DisplayLogoDelegate">
             <summary>
            
             </summary>
             <param name="filename"></param>
             <param name="slot"></param>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveProfileDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveProfileRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.DisplayLogo(SPM.Objects.SPMProfileDS.DisplayLogoDelegate)">
             <summary>
            
             </summary>
             <param name="displayMessage"></param>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.StoreBrand">
            <summary>
            Returns the current StoreBrand
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.Continent">
            <summary>
            Returns the current Continent
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.Country">
            <summary>
            Returns the current Country
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.ProfileCulture">
            <summary>
            Returns the CultureInfo object associated with the ActiveProfile Language and Country properties.
            Returns null if "[language]-[country]" and "[language]" are both invalid. 
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.Language">
            <summary>
            Returns the current Language
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.CardProcessorUrl">
            <summary>
            Returns the current Card Processor URL
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.CardProcessorPhone">
            <summary>
            Returns the current Card processor phone
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.LoyaltyProcessorURL">
            <summary>
            Returns the current Loyalty Processor URL
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveProfileRow.ValidCardTypes">
            <summary>
            The list of acceptable card types for the chosen country
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.ValidURLs">
            <summary>
            The list of URLs that are valid for the current country
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.ValidPhones">
            <summary>
            The list of Phone numbers that are valid for the current country
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.GetLoyaltyURLs">
            <summary>
            Returns an enumerable collection of valid loyalty URLs based on the active profile's current country.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.ValidCardReaderDevicesPerCardType(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.CanEditCardType(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="E:SPM.Objects.SPMProfileDS.ActiveProfileRow.PropertyChanged">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveProfileRow.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
             <summary>
            
             </summary>
             <param name="e"></param>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.ActiveCardTypes">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.ActiveDevices">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.ActiveDevicesPerCardType(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.ActiveDeviceTypes">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.ToJSON">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceDataTable.CheckForCardSecurity(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceRow.CardType">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceRow.CardReaderDevice">
             <summary>
            
             </summary>
        </member>
        <member name="E:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceRow.PropertyChanged">
             <summary>
            
             </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardTypeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorUrlDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorUrlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ContinentDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ContinentRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ContinentRow.Countries">
            <summary>
            Returns all countries for this continent
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryDataTable.FindByCode(System.String)">
             <summary>
            
             </summary>
             <param name="code"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryDataTable.AddCountryCardProcessorUrlsRows(System.Int16)">
            <summary>
            Adds Urls by IDs to all countries
            </summary>
            <param name="urlID">Url ID to add to countries</param>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.StoreBrands">
            <summary>
            Returns the Store Brands for which this country can select
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.Languages">
            <summary>
            Returns languages for this Country
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.CardProcessorUrls(System.Boolean)">
            <summary>
            returns all of the Card processing Urls
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.CardProcessorPhones(System.Boolean)">
            <summary>
            returns all of the Card processing Urls
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.ProductionURLs">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.TestingURLs">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.ProductionPhones">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.TestingPhones">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.CardReaderDevicesPerCardType(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.CountryRow.ValidCardTypes">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.CanEditCardType(SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryRow.SupportsElectronicPayments">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceDataTable.DevicesPerCardType(System.Int16,SPM.Utilities.CardTypeConstants)">
             <summary>
            
             </summary>
             <param name="countryID"></param>
             <param name="cardTypeID"></param>
             <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceRow.CardType">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceRow.CardReaderDevice">
             <summary>
            
             </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardReaderDeviceRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CardReaderDeviceRow.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.CardReaderDeviceRow.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="P:SPM.Objects.SPMProfileDS.StoreBrandDataTable.AllStoreBrands">
             <summary>
            
             </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.StoreBrandRow.Continents">
            <summary>
            Returns all continents for this store brand
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.StoreBrandRow.Countries(SPM.Utilities.ContinentConstants)">
            <summary>
            Returns all countries for this store brand, with the chosen contenant
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.AllowSmartPOSDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.AllowSmartPOSDataTable.Contains(System.Int16)">
             <summary>
            
             </summary>
             <param name="countryID"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileDS.ToArray">
             <summary>
            
             </summary>
             <returns></returns>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LanguageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLanguageDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorPhoneDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardReaderDeviceDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandContinentDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardProcessorUrlsDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryPhoneDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandCountryDataTable">
             <summary>
            Represents the strongly named DataTable class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LanguageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLanguageRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorPhoneRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandContinentRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardTypeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardProcessorUrlsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryPhoneRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.AllowSmartPOSRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandCountryRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLoyaltyProcessorUrlsRow">
             <summary>
            Represents strongly named DataRow class.
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ContinentRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LanguageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLanguageRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorUrlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardProcessorPhoneRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardReaderDeviceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandContinentRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveProfileRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CardTypeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeDeviceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.ActiveCardTypeDeviceRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardProcessorUrlsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryPhoneRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryCardTypeRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.AllowSmartPOSRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.StoreBrandCountryRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.LoyaltyProcessorUrlRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileDS.CountryLoyaltyProcessorUrlsRowChangeEvent">
             <summary>
            Row event argument class
            </summary>
        </member>
        <member name="T:SPM.Objects.SPMProfileExtension">
            <summary>
            A static class for extensions to Profile classes
            </summary>
        </member>
        <member name="M:SPM.Objects.SPMProfileExtension.LogMe(System.Collections.Generic.List{SPM.Objects.SPMProfileDS.CardReaderDeviceRow})">
            <summary>
            Log the Card Reader Devices in the list
            </summary>
            <param name="list"></param>
        </member>
        <member name="M:SPM.Objects.SPMProfileExtension.LogMe(System.Collections.Generic.List{SPM.Objects.SPMProfileDS.CardReaderDeviceRow},System.String)">
            <summary>
            Log the Card Reader Devices in the list, with the title given
            </summary>
            <param name="list"></param>
            <param name="title"></param>
        </member>
        <member name="M:SPM.Objects.SPMProfileExtension.Contains(System.Collections.Generic.List{SPM.Objects.SPMProfileDS.CardReaderDeviceRow},SPM.Utilities.DeviceTypes)">
            <summary>
            Looks up if a particular DeviceType is in the list of Card Readers
            </summary>
            <param name="list"></param>
            <param name="deviceID"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.SPMProfileExtension.Contains(System.Collections.Generic.IEnumerable{SPM.Objects.SPMProfileDS.CardTypeRow},SPM.Utilities.CardTypeConstants)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="cardTypeID"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Objects.StoreBrand">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Objects.StoreBrand.Subway">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Objects.StoreBrand.TacoDelMar">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Objects.StoreBrand.DisplayLogoDelegate">
            <summary>
            
            </summary>
            <param name="filename"></param>
            <param name="slot"></param>
        </member>
        <member name="M:SPM.Objects.StoreBrand.#ctor(System.Int32,System.String,System.String,System.Byte,System.String)">
            <summary>
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="description"></param>
            <param name="imageSlot"> </param>
            <param name="imageFilename"> </param>
        </member>
        <member name="P:SPM.Objects.StoreBrand.ID">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.Name">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.Description">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.ImageSlot">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.ImageFilename">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.Index">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Objects.StoreBrand.List">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Objects.StoreBrand.GetItem(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.StoreBrand.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:SPM.Objects.StoreBrand.DisplayLogo(SPM.Objects.StoreBrand.DisplayLogoDelegate)">
            <summary>
            
            </summary>
            <param name="displayMessage"></param>
        </member>
        <member name="M:SPM.Objects.StoreBrand.op_Equality(SPM.Objects.StoreBrand,SPM.Objects.StoreBrand)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.StoreBrand.op_Inequality(SPM.Objects.StoreBrand,SPM.Objects.StoreBrand)">
            <summary>
            
            </summary>
            <param name="lhs"></param>
            <param name="rhs"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.StoreBrand.CompareTo(System.Object)">
            <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
            <returns>
            A value that indicates the relative order of the objects being compared. The return value has these meanings: Value Meaning Less than zero This instance is less than <paramref name="obj"/>. Zero This instance is equal to <paramref name="obj"/>. Greater than zero This instance is greater than <paramref name="obj"/>. 
            </returns>
            <param name="obj">An object to compare with this instance. </param><exception cref="T:System.ArgumentException"><paramref name="obj"/> is not the same type as this instance. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:SPM.Objects.StoreBrand.Equals(SPM.Objects.StoreBrand)">
            <summary>
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Objects.StoreBrand.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:SPM.Objects.StoreBrand.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:SPM.Licensing.RegistrationAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Licensing.RegistrationAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Licensing.RegistrationAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="P:SPM.Licensing.RegistrationAttribute.RegistrationKey">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Licensing.SPMRegistration">
            <summary> </summary>
        </member>
        <member name="P:SPM.Licensing.SPMRegistration.Instance">
            <summary> </summary>
        </member>
        <member name="M:SPM.Licensing.SPMRegistration.Register(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="P:SPM.Licensing.SPMRegistration.IsRegistered">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Licensing.SPMRegistration.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Licensing.SPMRegistration.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Resources.Strings">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AccountStatus_Status_Active">
            <summary>
              Looks up a localized string similar to ACTIVE.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AccountStatus_Status_Closed">
            <summary>
              Looks up a localized string similar to CLOSED.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AccountStatus_Status_Frozen">
            <summary>
              Looks up a localized string similar to FROZEN.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AccountStatus_Status_New">
            <summary>
              Looks up a localized string similar to NEW.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AccountStatus_Status_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValue_Error_AmtNotReady">
            <summary>
              Looks up a localized string similar to The Amount is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValue_Error_NoCard">
            <summary>
              Looks up a localized string similar to There isn&apos;t a card associated with this item..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValue_Error_NotReady">
            <summary>
              Looks up a localized string similar to Information for Add Value [{0}:{1}] is not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValue_Error_NotReadyMissing">
            <summary>
              Looks up a localized string similar to Missing items for add value:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValues_Error_ExistingAddValue">
            <summary>
              Looks up a localized string similar to An &apos;Add Value&apos; with an ID of {0} already exists..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AddValues_Error_IDBad">
            <summary>
              Looks up a localized string similar to The ID must be between 0 and Max(integer). The value of [{0}] was submitted. Please change value and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AnytimeScanEventNotifier_Error_DuringScanningCard">
            <summary>
              Looks up a localized string similar to Error during scanning a card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.AnytimeScanEventNotifier_Error_InvalidCouponScanned">
            <summary>
              Looks up a localized string similar to Invalid coupon scanned..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Approved">
            <summary>
              Looks up a localized string similar to Approved.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ApprovedRemoveCard">
            <summary>
              Looks up a localized string similar to Approved Remove Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceReferral_Error_ServerDownPleaseRestart">
            <summary>
              Looks up a localized string similar to Server Down: Please restart your Point-Of-Sale Software and then try again....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_Label_AuthorizationCode">
            <summary>
              Looks up a localized string similar to Authorization Code:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_Label_Call">
            <summary>
              Looks up a localized string similar to Call: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_Label_MID">
            <summary>
              Looks up a localized string similar to MID: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_LabelReferralMessage">
            <summary>
              Looks up a localized string similar to Referral Message: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_PleaseCallAuthCentre">
            <summary>
              Looks up a localized string similar to Please Call Auth Centre.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_PleaseCallAuthCentreMessage">
            <summary>
              Looks up a localized string similar to Please call the Auth Centre for Voice Authroization of this transaction and enter the Authorization code in the field below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.BarclaycardVoiceRefWindow_VoiceReferralRequired">
            <summary>
              Looks up a localized string similar to Voice Referral Required.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Accept">
            <summary>
              Looks up a localized string similar to Accept.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Backspace">
            <summary>
              Looks up a localized string similar to Backspace.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Cancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Clear">
            <summary>
              Looks up a localized string similar to Clear.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Close">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Continue">
            <summary>
              Looks up a localized string similar to Continue.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Decline">
            <summary>
              Looks up a localized string similar to Decline.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_DisplayKeyboard">
            <summary>
              Looks up a localized string similar to Display Keyboard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Enter">
            <summary>
              Looks up a localized string similar to Enter.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_ManualEntry">
            <summary>
              Looks up a localized string similar to Manual Entry.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_ManualEntryVoiceAuth">
            <summary>
              Looks up a localized string similar to Manual Entry with Voice Auth.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_No">
            <summary>
              Looks up a localized string similar to No.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_OK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Button_Yes">
            <summary>
              Looks up a localized string similar to Yes.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_ContactEMV">
            <summary>
              Looks up a localized string similar to Contact_EMV.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Contactless">
            <summary>
              Looks up a localized string similar to Contactless.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_ContactlessEMV">
            <summary>
              Looks up a localized string similar to Contactless_EMV.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Manual">
            <summary>
              Looks up a localized string similar to Manual.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Mobile">
            <summary>
              Looks up a localized string similar to SUBWAY App.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_NFCMSD">
            <summary>
              Looks up a localized string similar to NFC MSD.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Scan">
            <summary>
              Looks up a localized string similar to Scan.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Standalone">
            <summary>
              Looks up a localized string similar to Standalone.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AcquireMethod_Swipe">
            <summary>
              Looks up a localized string similar to Swipe.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_AlternateID">
            <summary>
              Looks up a localized string similar to Alt. ID - .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_AccountIDMissing">
            <summary>
              Looks up a localized string similar to The AccountID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CancelCardSwipe">
            <summary>
              Looks up a localized string similar to The user cancelled swiping the card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CardNumberMissing">
            <summary>
              Looks up a localized string similar to The Card Number is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CardPurposeNotSet">
            <summary>
              Looks up a localized string similar to The request failed because the CardPurpose has not been set..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CardRetrievalFromHostFail">
            <summary>
              Looks up a localized string similar to Error processing in retrieval of card info from the host.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CardTypeNotConfigured">
            <summary>
              Looks up a localized string similar to Card type not configured. Please start Configuration Manager and run Device Setup..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CollectionDeviceNotSecure">
            <summary>
              Looks up a localized string similar to Card collection device is not secure!.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_CurrencyWrong">
            <summary>
              Looks up a localized string similar to The currency provide does not match the SPM Country profile. Please correct and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_ExpirationDateMissing">
            <summary>
              Looks up a localized string similar to The Expiration Date is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_InvalidQRCode">
            <summary>
              Looks up a localized string similar to Invalid QR Code was scanned, please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_InvalidScanType">
            <summary>
              Looks up a localized string similar to Invalid Scan Type was detected: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_InvalidTransactionType">
            <summary>
              Looks up a localized string similar to An invalid transaction type of ({0}) was given..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_LoyaltyServerNotReadyToProcess">
            <summary>
              Looks up a localized string similar to Loyalty Server is not ready to process reward.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_MagTekBadSwipe">
            <summary>
              Looks up a localized string similar to It appears that the card swipe was not valid. Please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_MultipleAltID">
            <summary>
              Looks up a localized string similar to Only one Alternate ID can be used per transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_NoConfiguredDevices">
            <summary>
              Looks up a localized string similar to There aren&apos;t any devices configured for use in this profile. Please configure your devices..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_ObtainingCardInformationFailed">
            <summary>
              Looks up a localized string similar to Obtaining the card information failed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_PaymentCardCVVMissing">
            <summary>
              Looks up a localized string similar to The CVV is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_PaymentCardInfoNotReady">
            <summary>
              Looks up a localized string similar to Information for the card is not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_PleaseConfigureCard">
            <summary>
              Looks up a localized string similar to The requested card type of [{0}] is not configured to be used.
               Please use SPM Configuration Manager to configure its use, if appropriate..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_PreBalanceInquiryProcessingError">
            <summary>
              Looks up a localized string similar to Error processing in Pre-BalanceInquiry..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_Track1DataMissing">
            <summary>
              Looks up a localized string similar to The Track1 Data is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Error_Track2DataMissing">
            <summary>
              Looks up a localized string similar to The Track2 Data is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_IsRegistered_FalseNo">
            <summary>
              Looks up a localized string similar to False.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_IsRegistered_TrueYes">
            <summary>
              Looks up a localized string similar to True.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Label_IsRegistered">
            <summary>
              Looks up a localized string similar to Is Registered: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_MessageBoxTitle_InsecureCardCollection">
            <summary>
              Looks up a localized string similar to Insecure Card Collection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_AccountNo">
            <summary>
              Looks up a localized string similar to       Account No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_AccountType">
            <summary>
              Looks up a localized string similar to     Account Type: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Acquired">
            <summary>
              Looks up a localized string similar to         Acquired: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_AID">
            <summary>
              Looks up a localized string similar to              AID: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_AlternateID">
            <summary>
              Looks up a localized string similar to Alternate ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Amount">
            <summary>
              Looks up a localized string similar to           Amount: {0:c}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Application">
            <summary>
              Looks up a localized string similar to      Application: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_ApprovalNo">
            <summary>
              Looks up a localized string similar to      Approval No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardIssuer">
            <summary>
              Looks up a localized string similar to      Card Issuer: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardLabel">
            <summary>
              Looks up a localized string similar to Card {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardStateLabel">
            <summary>
              Looks up a localized string similar to Card State: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardStatus_Activated">
            <summary>
              Looks up a localized string similar to Card Activated.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardStatus_Active">
            <summary>
              Looks up a localized string similar to Active.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardStatus_CardDeactivated">
            <summary>
              Looks up a localized string similar to Card Deactivated.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CardStatus_Closed">
            <summary>
              Looks up a localized string similar to Closed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_CustomerCopy">
            <summary>
              Looks up a localized string similar to              CUSTOMER COPY.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_DateTime">
            <summary>
              Looks up a localized string similar to        Date/Time: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Declined">
            <summary>
              Looks up a localized string similar to              DECLINED.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_ExpiryDate">
            <summary>
              Looks up a localized string similar to      Expiry Date: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_ImprintRequired">
            <summary>
              Looks up a localized string similar to Imprint card below.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_LoyaltyCouponHeader">
            <summary>
              Looks up a localized string similar to e-Voucher(s) Available:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_MerchantCopy">
            <summary>
              Looks up a localized string similar to              MERCHANT COPY.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_MID">
            <summary>
              Looks up a localized string similar to              MID: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_PINEnteredText">
             <summary>
               Looks up a localized string similar to By entering a verified PIN, cardholder
            agrees to pay issuer such total in
            accordance with issuer&apos;s agreement with
            cardholder..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_ReferenceNo">
            <summary>
              Looks up a localized string similar to     Reference No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Signature">
            <summary>
              Looks up a localized string similar to 
            x___________________________________
                       Signature                .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_SignatureAgreeToPay">
             <summary>
               Looks up a localized string similar to 
             Signature: 
             
             
             x___________________________________ 
             I agree to pay above total amount 
            according to the Card Issuer Agreement..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_Subcard">
            <summary>
              Looks up a localized string similar to SUBCARD®.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_SubcardOfflinePointsAdded">
            <summary>
              Looks up a localized string similar to Oops – we cannot connect to the SUBCARD® system, but don’t worry! Your points will be added automatically once it comes back online..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_SubwayCard">
            <summary>
              Looks up a localized string similar to SUBWAY Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_SubwayGiftCard">
            <summary>
              Looks up a localized string similar to Subway Gift Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_TID">
            <summary>
              Looks up a localized string similar to              TID: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_TraceNo">
            <summary>
              Looks up a localized string similar to         Trace No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_TransactionNo">
            <summary>
              Looks up a localized string similar to   Transaction No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_TSI">
            <summary>
              Looks up a localized string similar to              TSI: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_TVR">
            <summary>
              Looks up a localized string similar to              TVR: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_VoidApproved">
            <summary>
              Looks up a localized string similar to           Amount: {0:c} (VOID Approved).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Receipt_VoidFailed">
            <summary>
              Looks up a localized string similar to           Amount: {0:c} (VOID Failed).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_ReceiptTextSubway_TransactionNo">
            <summary>
              Looks up a localized string similar to TransactionNo: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Card_Warning_DeviceNotSecureDoYouWantToContinue">
            <summary>
              Looks up a localized string similar to Continuing to collect card information may result in compromising the card data.
               Do you still want to continue?
               Click &apos;Yes&apos; to continue processing. Click &apos;No&apos; to stop collecting the card information..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CardFrozen">
            <summary>
              Looks up a localized string similar to Frozen.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CardNew">
            <summary>
              Looks up a localized string similar to New.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CardUseTransferFrom">
            <summary>
              Looks up a localized string similar to Transfer From.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CardUseTransferTo">
            <summary>
              Looks up a localized string similar to Transfer To.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CardUseUnused">
            <summary>
              Looks up a localized string similar to Unused.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Certificate_Error_CertificateNumberMissing">
            <summary>
              Looks up a localized string similar to The Certificate number has not been presented to process order.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Company">
            <summary>
              Looks up a localized string similar to Franchise World Headquarters, LLC..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_AboutMyPOSLabel">
            <summary>
              Looks up a localized string similar to About My Point-of-Sale (POS).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_AdministrationPortalLabel">
            <summary>
              Looks up a localized string similar to Administration Portal.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_AllowGenericCardSwipeCheckBox">
            <summary>
              Looks up a localized string similar to I also want to allow the Generic Card Swipe for Gift Cards.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ApplicationTitle">
            <summary>
              Looks up a localized string similar to SPM Configuration Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_AttemptToLoadConfigurationManager">
            <summary>
              Looks up a localized string similar to Please attempt to load the Configuration Manager using the Start --&gt; Menu Item. If you continue to experience difficulties please call the Franchisee Support at (877) 472-4270..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Authenticating">
            <summary>
              Looks up a localized string similar to Authenticating....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_AvailInitializationLabel">
            <summary>
              Looks up a localized string similar to Available Initialization Strings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnApply">
            <summary>
              Looks up a localized string similar to Apply.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnCancel">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnCheckLoyalty">
            <summary>
              Looks up a localized string similar to Check Connection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnOK">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnPrintEMVOfflineDeclineRpt">
            <summary>
              Looks up a localized string similar to Print EMV Offline Declined Trans..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnPrintEMVParamsRpt">
            <summary>
              Looks up a localized string similar to Print EMV Parameters Report.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnPrintEMVPublicKeyRpt">
            <summary>
              Looks up a localized string similar to Print EMV Public Key Load Report.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_btnPrintEMVStatsRpt">
            <summary>
              Looks up a localized string similar to Print EMV Statistics Report.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_BuildDateColumn">
            <summary>
              Looks up a localized string similar to Build Date.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ButtonHelp">
            <summary>
              Looks up a localized string similar to Help.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ButtonNext">
            <summary>
              Looks up a localized string similar to Next.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Catering1MinRadioButton">
            <summary>
              Looks up a localized string similar to 1 min.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Catering30SecRadioButton">
            <summary>
              Looks up a localized string similar to 30 sec.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Catering5MinRadioButton">
            <summary>
              Looks up a localized string similar to 5 min.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringAcceptingOrdersLabel">
            <summary>
              Looks up a localized string similar to I&apos;m currently accepting Catering orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringAlertVolumeLabel">
            <summary>
              Looks up a localized string similar to Alert Volume.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringEmailLabel">
            <summary>
              Looks up a localized string similar to Receive in my Email.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringIntervalLabel">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringNotificationLabel">
            <summary>
              Looks up a localized string similar to Notification Settings for Catering Orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringOrderViewLabel">
            <summary>
              Looks up a localized string similar to Print-out View.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringPOSLabel">
            <summary>
              Looks up a localized string similar to Receive on my POS.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringPrinterLabel">
            <summary>
              Looks up a localized string similar to Printer.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringPrinterSettingsLabel">
            <summary>
              Looks up a localized string similar to Printer Settings for Catering Orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringScheduleLabel">
            <summary>
              Looks up a localized string similar to Catering Schedule.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringSnoozeLimitLabel">
            <summary>
              Looks up a localized string similar to Snooze Limit.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringSnoozeSettingsLabel">
            <summary>
              Looks up a localized string similar to Snooze Settings for Catering Orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringStatusLabel">
            <summary>
              Looks up a localized string similar to Catering.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringTestPrintButton">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CateringTestVolumeButton">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeContinent">
            <summary>
              Looks up a localized string similar to Change Continent.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeContinentMessage">
             <summary>
               Looks up a localized string similar to Changing the &apos;Continent&apos; may also change the following settings:
            
              - Country
              - Language
              - Printer
              - Electronic Tender Types
              - Devices
              - Processing Web Address
              - Processing Dial Number
            
            WOULD YOU LIKE TO CONTINUE?
            
            Click &apos;Yes&apos; to continue, click &apos;No&apos; to cancel the change..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeCountry">
            <summary>
              Looks up a localized string similar to Change Country.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeCountryMessage">
             <summary>
               Looks up a localized string similar to Changing the &apos;Country&apos; may also change the following settings:
            
              - Language
              - Printer
              - Electronic Tender Types
              - Devices
              - Processing Web Address
              - Processing Dial Number
            
            WOULD YOU LIKE TO CONTINUE?
            
            Click &apos;Yes&apos; to continue, click &apos;No&apos; to cancel the change..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeMerchant">
            <summary>
              Looks up a localized string similar to Change Merchant.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ChangeMerchantMessage">
             <summary>
               Looks up a localized string similar to Changing the &apos;Merchant&apos; may also change the following settings:
            
              - Continent
              - Country
              - Language
              - Printer
              - Electronic Tender Types
              - Processing Web Address
              - Processing Dial Number
            
            WOULD YOU LIKE TO CONTINUE?
            
            Click &apos;Yes&apos; to continue, click &apos;No&apos; to cancel the change..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_chkTipPrompt">
            <summary>
              Looks up a localized string similar to I want to prompt for Tips when Credit Cards are used.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ClientNotRunning">
             <summary>
               Looks up a localized string similar to The SmartPOS Client isn&apos;t currently running. 
            Click the Refresh button below to start SmartPOS Client and refresh transaction history..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CloseURLButton">
            <summary>
              Looks up a localized string similar to Close.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CommPortLabel">
            <summary>
              Looks up a localized string similar to Comm Port.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfigurationManager">
            <summary>
              Looks up a localized string similar to Configuration Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfigurationManagerOpenInRegularMode">
            <summary>
              Looks up a localized string similar to The SPM Configuration Manager will open in regular mode, please make all of the necessary settings..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfigurationManagerSplashHeading">
            <summary>
              Looks up a localized string similar to Configuration Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfigurationWizard">
            <summary>
              Looks up a localized string similar to Configuration Wizard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfirmStopClient">
            <summary>
              Looks up a localized string similar to Confirm Stop SPM Update Client.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfirmStopUpdate">
            <summary>
              Looks up a localized string similar to Setting the &apos;Automatically Check for Updates&apos; to &apos;Never&apos; requires the Software Update client to be stopped.  Confirm that you would like to STOP the Software Update client now..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfirmStoreNumberCheckBox">
            <summary>
              Looks up a localized string similar to Always confirm that the store number above matches the &quot;POS store number&quot;..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ConfirmStoreNumberLabel">
            <summary>
              Looks up a localized string similar to Store Number Validation.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Connectivity">
            <summary>
              Looks up a localized string similar to Connectivity.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Copyright">
            <summary>
              Looks up a localized string similar to Copyright © 2006-2017 Franchise World Headquarters, LLC.  All Rights Reserved..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CountryLabel">
            <summary>
              Looks up a localized string similar to Country.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CreditCardCheckBox">
            <summary>
              Looks up a localized string similar to Credit Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CreditCardDeviceSetupButton">
            <summary>
              Looks up a localized string similar to Setup ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CreditCardSignatureLabel">
            <summary>
              Looks up a localized string similar to Credit Card Signature Requirements.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CustomStringCheck">
            <summary>
              Looks up a localized string similar to I want to specify my own initialization string..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_CustomWebAddress">
            <summary>
              Looks up a localized string similar to Custom Web Address.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_FirmwareFailConnected">
            <summary>
              Looks up a localized string similar to The firmware update failed. Please see below for reason and steps to follow..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_FirmwareFailDisconnected">
            <summary>
              Looks up a localized string similar to The device appears to not be connected. Please follow the steps below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_FirmwareSuccessConnected">
            <summary>
              Looks up a localized string similar to The device is connected and ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_FirmwareSuccessDisconnect">
            <summary>
              Looks up a localized string similar to The device appears to not be connected. Please follow the steps below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_InitConnected">
            <summary>
              Looks up a localized string similar to The device is connected and ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_InitConnectedAvail">
            <summary>
              Looks up a localized string similar to The firmware on your device needs to be updated. Please click the &apos;Firmware Update&apos; button below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_InitConnectedNotAvail">
            <summary>
              Looks up a localized string similar to The device is connected and ready to be used. To see if an update is available for the firmware on the device, click the &apos;Firmware Update&apos; button below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_InitDisconnected">
            <summary>
              Looks up a localized string similar to The device appears to be disconnected. Please follow the steps below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_InitGeneral">
            <summary>
              Looks up a localized string similar to Follow the instruction below to verify that this device is connected to the POS and is ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_SetupTitle">
            <summary>
              Looks up a localized string similar to Device Setup for {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_TroubleShootingSteps">
             <summary>
               Looks up a localized string similar to Troubleshooting steps:
            1. Plug in the {0} to a working USB port.
            2. Close any application that is currently using the device.
            3. Press the Verify button..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_VerifyConnected">
            <summary>
              Looks up a localized string similar to The device has been found and verified and is ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_VerifyConnectedAvail">
            <summary>
              Looks up a localized string similar to The firmware on your device needs to be updated. Please click the &apos;Firmware Update&apos; button below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_VerifyConnectedNotAvail">
            <summary>
              Looks up a localized string similar to The device is connected and ready to be used. To see if an update is available for the firmware on the device, click the &apos;Firmware Update&apos; button below..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_VerifyDisconnected">
            <summary>
              Looks up a localized string similar to The device appears to still be disconnected. Please follow the steps below. If you continue to experience problems call the Helpdesk..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_Vx820DriverBroken">
            <summary>
              Looks up a localized string similar to Vx820 Driver Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_Vx820DriverTroubleshootingSteps">
             <summary>
               Looks up a localized string similar to An issue with the Vx820 driver has been detected.
            
            Please wait while SPM attempts to resolve the issue.
            
            Do not disconnect or power-off the Vx820..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_Vx820DriverUpdate">
            <summary>
              Looks up a localized string similar to Updating Vx820 Drivers.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_Vx820DriverUpdateTroubleshootingSteps">
             <summary>
               Looks up a localized string similar to SPM has detected that the newest Vx820 drivers need to
            be installed.
            
            Please wait while SPM attempts driver installation.
            
            Do not interrupt the driver setup; it will only take a minute..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Device_Vx820ResolvingDriverError">
            <summary>
              Looks up a localized string similar to Attempting to resolve Vx820 driver errors.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DeviceSetup">
            <summary>
              Looks up a localized string similar to Device Setup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DeviceSetupLabel">
            <summary>
              Looks up a localized string similar to Electronic Tender Type and Device Setup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DeviceSetupSubtitleLabel">
            <summary>
              Looks up a localized string similar to Follow the instruction below to verify that this device is connected to the POS and is ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DeviceSetupTitleLabel">
            <summary>
              Looks up a localized string similar to Device Setup for Device Name.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DeviceVerificationDescription">
            <summary>
              Looks up a localized string similar to Follow the instruction below to verify that this device is connected to the POS and is ready to be used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DialBackupCheckBox">
            <summary>
              Looks up a localized string similar to Use a modem to connect as a &quot;backup&quot; to high-speed internet.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DialBackupLabel">
            <summary>
              Looks up a localized string similar to Use Dial Backup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_DialPrefixSettingLabel">
            <summary>
              Looks up a localized string similar to Dial Prefix Setting.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Down">
            <summary>
              Looks up a localized string similar to Down.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_EditInitStringsButton">
            <summary>
              Looks up a localized string similar to Edit ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_EmptyString">
            <summary>
              Looks up a localized string similar to .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ErrorLoadingConfigurationManager">
            <summary>
              Looks up a localized string similar to An error has occurred loading the SPM Configuration Manager..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ErrorLoadingWizard">
            <summary>
              Looks up a localized string similar to An error occurred loading the SPM Configuration Manager Wizard..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Express15SecRadioButton">
            <summary>
              Looks up a localized string similar to 15 sec.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Express1MinRadioButton">
            <summary>
              Looks up a localized string similar to 1 min.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Express30SecRadioButton">
            <summary>
              Looks up a localized string similar to 30 sec.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressAcceptingOrdersLabel">
            <summary>
              Looks up a localized string similar to I&apos;m currently accepting Express orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressDescriptionTextBlock">
            <summary>
              Looks up a localized string similar to When a customer places an express order, a notification will be displayed on your SmartPOS terminal. You will then have the number of seconds specified by the &quot;Interval&quot; setting above to Accept, Reject or Snooze the order. The number of Snoozes allowed are specified by the &quot;Snooze Limit&quot; setting above..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressIntervalLabel">
            <summary>
              Looks up a localized string similar to Interval.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressPrinterLabel">
            <summary>
              Looks up a localized string similar to Printer.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressPrinterSettingsLabel">
            <summary>
              Looks up a localized string similar to Printer Settings for Express Orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressSchedulingLabel">
            <summary>
              Looks up a localized string similar to Express Schedule.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressSnoozeLimitLabel">
            <summary>
              Looks up a localized string similar to Snooze Limit.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressSnoozeSettingsLabel">
            <summary>
              Looks up a localized string similar to Snooze Settings for Express Orders.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressStatusLabel">
            <summary>
              Looks up a localized string similar to Express.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ExpressTestPrintButton">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FirmwareUpdateButton">
            <summary>
              Looks up a localized string similar to Firmware Update.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FirstNameColumn">
            <summary>
              Looks up a localized string similar to First Name.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_frmRestartWindowLabelText">
            <summary>
              Looks up a localized string similar to You must restart your system for the configuration changes made to SPM to take effect..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPPasswordLabel">
            <summary>
              Looks up a localized string similar to Password:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPPortLabel">
            <summary>
              Looks up a localized string similar to FTP Port:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPProgressLabel">
            <summary>
              Looks up a localized string similar to FTP Progress.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPRevisionLabel">
            <summary>
              Looks up a localized string similar to Revision:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPServerLabel">
            <summary>
              Looks up a localized string similar to Server:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPSettingsButton">
            <summary>
              Looks up a localized string similar to Configure FTP Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPSettingsLabel">
            <summary>
              Looks up a localized string similar to FTP Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPSettingsTitle">
            <summary>
              Looks up a localized string similar to LOCAL &gt; FTP SETTINGS.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPTimeoutLabel">
            <summary>
              Looks up a localized string similar to Timeout:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_FTPUsernameLabel">
            <summary>
              Looks up a localized string similar to Username:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GeneralAboutTabItem">
            <summary>
              Looks up a localized string similar to About.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GeneralMerchantTabItem">
            <summary>
              Looks up a localized string similar to Merchant.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GeneralSettingsLabel">
            <summary>
              Looks up a localized string similar to General Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GeneralSettingsTabItem">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GeneralSettingsTabLabel">
            <summary>
              Looks up a localized string similar to General Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GiftCardCheckBox">
            <summary>
              Looks up a localized string similar to Gift Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_GiftCardDeviceSetupButton">
            <summary>
              Looks up a localized string similar to Setup ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_HelpFileNotFound">
            <summary>
              Looks up a localized string similar to The help file &apos;{0}&apos; could not be found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_HistoryRefreshButton">
            <summary>
              Looks up a localized string similar to Refresh.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_HostProcessorSettingsLabel">
            <summary>
              Looks up a localized string similar to Host Processor Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_HostPromoCheckBox">
            <summary>
              Looks up a localized string similar to I want Host barcode promotions printed on Customer receipts.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_HostPromoLabel">
            <summary>
              Looks up a localized string similar to Host Promotions.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_IfSettingsCorrectNext">
            <summary>
              Looks up a localized string similar to If these settings are correct press &apos;Next&apos;..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_IfSettingsIncorrectEdit">
            <summary>
              Looks up a localized string similar to If these settings are not correct, please press &apos;Edit&apos;..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_IncorrectAddressFormat">
            <summary>
              Looks up a localized string similar to The custom web address was not added as web addresses must begin with &apos;http://&apos; or &apos;https://&apos;.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_InitializationStringSettingsTitle">
            <summary>
              Looks up a localized string similar to LOCAL &gt; INITIALIZATION STRING SETTINGS.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_InstalledModemsLabel">
            <summary>
              Looks up a localized string similar to Installed Modems.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_InvalidInput">
            <summary>
              Looks up a localized string similar to Invalid input!.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Label_ConfirmPassword">
            <summary>
              Looks up a localized string similar to Confirm Password.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Label_Country">
            <summary>
              Looks up a localized string similar to Country.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Label_Version">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelContinent">
            <summary>
              Looks up a localized string similar to Continent.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelCopyright">
            <summary>
              Looks up a localized string similar to &lt;Copyright&gt;.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelLocationInformation">
            <summary>
              Looks up a localized string similar to Location Information.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelMerchant">
            <summary>
              Looks up a localized string similar to Merchant.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelPassword">
            <summary>
              Looks up a localized string similar to Password.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LabelStoreNumber">
            <summary>
              Looks up a localized string similar to Store Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LanguageLabel">
            <summary>
              Looks up a localized string similar to Language.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LastNameColumn">
            <summary>
              Looks up a localized string similar to Last Name.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LaunchAdminPortalButton">
            <summary>
              Looks up a localized string similar to Launch.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LaunchSmartPOSClient">
            <summary>
              Looks up a localized string similar to Launch SmartPOS Client.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_lblCanadaEMVReports">
            <summary>
              Looks up a localized string similar to EMV reports.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_lblContentTitleConfirm">
            <summary>
              Looks up a localized string similar to Please confirm the following settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_lblDeviceVerificationSubTitle">
            <summary>
              Looks up a localized string similar to Device Verification for {device name}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_lblStoreNumber">
            <summary>
              Looks up a localized string similar to Store Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Loading">
            <summary>
              Looks up a localized string similar to Loading....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_LoginButton">
            <summary>
              Looks up a localized string similar to Login.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_MerchantInformationLabel">
            <summary>
              Looks up a localized string similar to Merchant Information.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_MissingHelpFile">
            <summary>
              Looks up a localized string similar to Missing Help file.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_MobileAppCheckBox">
            <summary>
              Looks up a localized string similar to Subway® App.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_MobileAppComboBoxToolTip">
            <summary>
              Looks up a localized string similar to Subway® App transactions use the same scanning device as Scanned Offers..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_MobileAppDeviceSetupButton">
            <summary>
              Looks up a localized string similar to Setup ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ModemConfigurationFailed">
            <summary>
              Looks up a localized string similar to The Installation Wizard was not able to correctly configure your modem. To manually configure your modem, please use the SPM Configuration Manager following this installation..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ModemNotEnabled">
            <summary>
              Looks up a localized string similar to Modem Not Enabled.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ModemNotEnabledMessage">
            <summary>
              Looks up a localized string similar to If you wish to use this modem as &quot;&quot;backup&quot;&quot; to your high speed connection, don&apos;t forget to also enable the &quot;&quot;Dial Backup&quot;&quot; option in the General Settings tab..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ModemSettingsLabel">
            <summary>
              Looks up a localized string similar to Modem Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NextDeviceButton">
            <summary>
              Looks up a localized string similar to Next Device &gt;&gt;.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NoElectronicPayments">
             <summary>
               Looks up a localized string similar to {0} does not support Electronic Payments at this time.
            
             WOULD YOU LIKE TO CONTINUE?
            
            Click &apos;Yes&apos; to continue, click &apos;No&apos; to cancel the change.
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NoModemAttached">
            <summary>
              Looks up a localized string similar to A valid modem is not attached to the Comm Port specified ({0}). Please try another Comm Port and check that your modem is plugged in to your POS. If you don&apos;t know the Comm Port, press the &quot;&quot;Find Modems&quot;&quot; button..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NoModemsFound">
            <summary>
              Looks up a localized string similar to No modems found.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NotAcceptingRO">
            <summary>
              Looks up a localized string similar to The store is currently not accepting remote orders, therefore the history is not available..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_NumberItemsColumn">
            <summary>
              Looks up a localized string similar to # Items.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_OrderAlertVolumeLabel">
            <summary>
              Looks up a localized string similar to Alert Volume.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_OrderNumberColumn">
            <summary>
              Looks up a localized string similar to Order #.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PasswordBlank">
             <summary>
               Looks up a localized string similar to Your password cannot be blank.
            Please enter the appropriate password in both the Password and Confirm Password text boxes on the Payment Settings tab..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PasswordMismatch">
             <summary>
               Looks up a localized string similar to The passwords entered on the Subway Payment Manager tab do not match.
            Please type the same password in both the Password and Confirm Password text boxes..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PaymentIdentificationSettingsLabel">
            <summary>
              Looks up a localized string similar to Payment Identification.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PaymentManagerLabel">
            <summary>
              Looks up a localized string similar to Payment Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PaymentManagerLogDetailLabel">
            <summary>
              Looks up a localized string similar to Select the amount of logging detail.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PaymentManagerLogSettingsLabel">
            <summary>
              Looks up a localized string similar to Log Settings for the Payment Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PaymentManagerTabLabel">
            <summary>
              Looks up a localized string similar to Payment Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PermissionsError">
            <summary>
              Looks up a localized string similar to Permissions Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PermissionsErrorMessage">
            <summary>
              Looks up a localized string similar to Cannot access configuration files, please run with Administrative access..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PickupDateColumn">
            <summary>
              Looks up a localized string similar to Pickup Date.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PleaseConnectIPP350">
            <summary>
              Looks up a localized string similar to Please Connect IPP350.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_POSInformationLabel">
            <summary>
              Looks up a localized string similar to Point-of-Sale Information.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_POSTerminalIDLabel">
            <summary>
              Looks up a localized string similar to POS Terminal ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_PrinterLabel">
            <summary>
              Looks up a localized string similar to Printer.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ProcessingInitStringsLabel">
            <summary>
              Looks up a localized string similar to Processing Initialization Strings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ProcessingURLChanged">
            <summary>
              Looks up a localized string similar to Changing this value may cause problems with processing of Credit Cards, Cash Cards, and/or Rewards Cards. Please do so only with the direction/assistance of a Help Desk professional..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ProductTitle">
            <summary>
              Looks up a localized string similar to Configuration Manager.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ProductTitleColumn">
            <summary>
              Looks up a localized string similar to Product Title.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ReadyStateAuthFail">
             <summary>
               Looks up a localized string similar to The authorization at the SmartPOS failed. 
            Please check your username and password and try again..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ReadyStateCannotConnect">
            <summary>
              Looks up a localized string similar to The connection to the SmartPOS Client could not be made..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ReadyStateHostFail">
            <summary>
              Looks up a localized string similar to The connection to the SmartPOS host failed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Reminder">
            <summary>
              Looks up a localized string similar to Reminder.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ReminderNotification">
             <summary>
               Looks up a localized string similar to Please make sure that your
            POS Software is closed prior to making any changes in the
            SPM Configuration Manager.
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderHoursTabItem">
            <summary>
              Looks up a localized string similar to Hours of Operation.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingCateringTabItem">
            <summary>
              Looks up a localized string similar to Catering.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingExpressTabItem">
            <summary>
              Looks up a localized string similar to Express.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingGeneralTabItem">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingHistoryTabItem">
            <summary>
              Looks up a localized string similar to History.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingLabel">
            <summary>
              Looks up a localized string similar to Remote Ordering.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoteOrderingTabLabel">
            <summary>
              Looks up a localized string similar to Remote Ordering.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoveCardBeepCheckBox">
            <summary>
              Looks up a localized string similar to Remove-Card Beep.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoveCardBeepSoundFileBrowserTitle">
            <summary>
              Looks up a localized string similar to Select Beep Sound (.wav only).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RemoveCardBeepSoundPathTooltip">
            <summary>
              Looks up a localized string similar to During the Vx820 Pinpad&apos;s &quot;Remove Card&quot; phase, the specified sound file will play on the POS machine..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RequireSignatureRadioButton">
            <summary>
              Looks up a localized string similar to Require Signature for All Credit Card Transactions.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ResetTestsButton">
            <summary>
              Looks up a localized string similar to Reset Tests.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RewardCardCheckBox">
            <summary>
              Looks up a localized string similar to Reward Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_RewardCardDeviceSetupButton">
            <summary>
              Looks up a localized string similar to Setup ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ROHistoryStoreNumberLabel">
            <summary>
              Looks up a localized string similar to Store #.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SatelliteNumber">
            <summary>
              Looks up a localized string similar to Satellite Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SatelliteNumberLabel">
            <summary>
              Looks up a localized string similar to Satellite Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ScannedOfferCheckBox">
            <summary>
              Looks up a localized string similar to Scanned Offer.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ScannedOfferDeviceSetupButton">
            <summary>
              Looks up a localized string similar to Setup ....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SecureSettingsMode">
            <summary>
              Looks up a localized string similar to Secure Settings Mode.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SelectPrinterLabel">
            <summary>
              Looks up a localized string similar to Select Printer.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SendLogFilesButton">
            <summary>
              Looks up a localized string similar to Send Log Files.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SendLogsDescription">
            <summary>
              Looks up a localized string similar to Use this feature in the event that IT Support requests the contents of your SPM log files. Pressing the button below will package and transfer your SPM log files to the IPC File Server from which IT Support will be able to access them and further assist you..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SendLogsLabel">
            <summary>
              Looks up a localized string similar to Send Logs to IT Support.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ServiceAvailabilityLabel">
            <summary>
              Looks up a localized string similar to Service Availability.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ServiceShortcutLabel">
            <summary>
              Looks up a localized string similar to Remote Ordering Shortcuts.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ServiceStatusLabel">
            <summary>
              Looks up a localized string similar to Service Connection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_ConfigurationWizardLabel">
            <summary>
              Looks up a localized string similar to Configuration Wizard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_InstallingFilesLabel">
            <summary>
              Looks up a localized string similar to Installing Files.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_IntroductionLabel">
            <summary>
              Looks up a localized string similar to Introduction.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_LicenceAgreementLabel">
            <summary>
              Looks up a localized string similar to License Agreement.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_ReadyToUseLabel">
            <summary>
              Looks up a localized string similar to Ready To Use.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_SystemVerificationLabel">
            <summary>
              Looks up a localized string similar to System Verification.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SetupWizard_Title">
            <summary>
              Looks up a localized string similar to Configuration Manager: Setup Wizard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ShowCustomURLButton">
            <summary>
              Looks up a localized string similar to Edit Custom Address.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SmartPOSDashboardLabel">
            <summary>
              Looks up a localized string similar to SmartPOS Dashboard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SmartPOSDashboardLaunchButton">
            <summary>
              Looks up a localized string similar to Launch.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SmartPOSNotRunning">
            <summary>
              Looks up a localized string similar to The SmartPOS client is not currently running. Would you like to start it?.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMHostProcessorTabItem">
            <summary>
              Looks up a localized string similar to Host Processor.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMLocalSettingsTabItem">
            <summary>
              Looks up a localized string similar to Devices.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMLoggingDescriptionTextBlock">
            <summary>
              Looks up a localized string similar to Setting the level to &quot;Error&quot; is the minimum logging permitted for payment applications.  Use &quot;Debug&quot; for detailed logs.  Please note, &quot;Debug&quot; logging will use up additional disk space..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMLoggingSettingsTabItem">
            <summary>
              Looks up a localized string similar to Logging.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMLoyaltyLabel">
            <summary>
              Looks up a localized string similar to Loyalty Web Address.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMModemSettingsTabItem">
            <summary>
              Looks up a localized string similar to Modem.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMPaymentSettingsTabItem">
            <summary>
              Looks up a localized string similar to Payment Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMPhoneNumberLabel">
            <summary>
              Looks up a localized string similar to Processing Dial Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_SPMWebAddressLabel">
            <summary>
              Looks up a localized string similar to Processing Web Address.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_StatusColumn">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Stop">
            <summary>
              Looks up a localized string similar to Stop.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_StoreNumber">
            <summary>
              Looks up a localized string similar to Store Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_StoreNumberBlank">
             <summary>
               Looks up a localized string similar to Your Store Number cannot be blank.
            Please enter the appropriate Store Number in the Store Number text box before proceeding..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_StoreNumberPasswordMismatch">
            <summary>
              Looks up a localized string similar to The Store Number and Password do not match..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TerminalIDLabel">
            <summary>
              Looks up a localized string similar to Terminal ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TestAllButton">
            <summary>
              Looks up a localized string similar to Test All.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TestButton">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TestSelectedButton">
            <summary>
              Looks up a localized string similar to Test Selected.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TestThorLinkConnection">
            <summary>
              Looks up a localized string similar to Test Thorlink Server Connection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TestVolumeButton">
            <summary>
              Looks up a localized string similar to Test.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Thorlink_Reactivate">
            <summary>
              Looks up a localized string similar to Re-Activate.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkDeviceCodeLabel">
            <summary>
              Looks up a localized string similar to Device Code.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkHostProcessorLabel">
            <summary>
              Looks up a localized string similar to Host Processor.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkMerchantCodeLabel">
            <summary>
              Looks up a localized string similar to Merchant Code.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkMerchantLabel">
            <summary>
              Looks up a localized string similar to Merchant.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkSiteNoLabel">
            <summary>
              Looks up a localized string similar to Site No..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkTabLabel">
            <summary>
              Looks up a localized string similar to Thorlink Loyalty.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkTabTitleLabel">
            <summary>
              Looks up a localized string similar to Thorlink.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ThorlinkTransactionSettingsHeader">
            <summary>
              Looks up a localized string similar to Transaction Settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TotalColumn">
            <summary>
              Looks up a localized string similar to Total.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TransactionHistoryLabel">
            <summary>
              Looks up a localized string similar to Transaction History.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_TroubleshootIPAD">
             <summary>
               Looks up a localized string similar to Troubleshooting steps:
            1. Plug in the MagTek IPAD device to a working USB port.
            2. Close any application that is currently using the device.
            3. Press &apos;Previous&apos; button and then &apos;Next&apos; button..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UnableToInsertAddress">
            <summary>
              Looks up a localized string similar to Unable to insert the Web Address specified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UnlockButtonMessage">
             <summary>
               Looks up a localized string similar to The SPM Configuration Manager must restart to enter Secure Settings Mode. 
            You will lose any unsaved changes if you proceed. 
            Press &apos;OK&apos; to proceed or press &apos;Cancel&apos; to return to the Default mode..
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_Up">
            <summary>
              Looks up a localized string similar to Up.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UpdateCustomURLButton">
            <summary>
              Looks up a localized string similar to Update Address.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UpdateSmartPOSHistory">
            <summary>
              Looks up a localized string similar to Looking up the history. Please wait....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UseContactlessCheckBox">
            <summary>
              Looks up a localized string similar to I want to accept Contactless Payments.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UseDialBackup">
            <summary>
              Looks up a localized string similar to Use Dial Backup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UseDialPrefixCheckBox">
            <summary>
              Looks up a localized string similar to I want to specify a Dial Prefix.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UseHostSettingsCheckBox">
            <summary>
              Looks up a localized string similar to I want to specify my own &quot;advanced&quot; processor settings.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_UseProcessorSignatureRadioButton">
            <summary>
              Looks up a localized string similar to Use Credit Card Processor Signature Settings (Recommended).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_ValidationError">
            <summary>
              Looks up a localized string similar to The Store Number does not match the SPM Store Number..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifoneVx820OptionsLabel">
            <summary>
              Looks up a localized string similar to Verifone Vx820 Options.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyButton">
            <summary>
              Looks up a localized string similar to Verify.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyingLoyaltyServer">
            <summary>
              Looks up a localized string similar to Verifying server connection... please wait..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyingModemLabel">
            <summary>
              Looks up a localized string similar to Finding Modems.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyingPleaseWait">
            <summary>
              Looks up a localized string similar to Verifying...please wait..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyLoyaltyGateway">
            <summary>
              Looks up a localized string similar to Verify Loyalty Gateway.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VerifyModemButton">
            <summary>
              Looks up a localized string similar to Find Modems.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ConfigManager_VersionColumn">
            <summary>
              Looks up a localized string similar to Version.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Continent">
            <summary>
              Looks up a localized string similar to Continent.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Coupon_Error_CouponAlreadyProcessed">
            <summary>
              Looks up a localized string similar to This coupon has already been redeemed, and cannot be used again. Coupon Code :   .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Coupon_Error_CouponCodeMissing">
            <summary>
              Looks up a localized string similar to The Coupon Code is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Coupon_Error_CouponDataNotReady">
            <summary>
              Looks up a localized string similar to Coupon Data is not ready to process.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Coupon_Label_CouponDetails">
            <summary>
              Looks up a localized string similar to Coupon Details:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Coupon_Label_CouponExpirationDate">
            <summary>
              Looks up a localized string similar to Expiration Date:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CouponHeader">
            <summary>
              Looks up a localized string similar to A coupon was collected electronically. Please follow the instructions below to process the discount:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.CouponProcessingInstructions">
            <summary>
              Looks up a localized string similar to Processing Instructions:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_AliasInvalidPleaseReenter">
            <summary>
              Looks up a localized string similar to The Alias is invalid, it must be 10 digits. Please reenter and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_AlreadySwipedAddTender">
            <summary>
              Looks up a localized string similar to You&apos;ve swiped card [{0}] already, do you mean to add an additional {1}?.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_AlreadySwipedCard">
            <summary>
              Looks up a localized string similar to You&apos;ve swiped card [{0}] already, do you mean to add an additional {1}?.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_CardNumberNotEnteredCorrectly">
            <summary>
              Looks up a localized string similar to It appears that the card number was not entered correctly. Please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_CheckingChipVerification">
            <summary>
              Looks up a localized string similar to Checking Chip Verification.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_ChipVerificationProcess">
            <summary>
              Looks up a localized string similar to Chip Verification Process.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_InvalidAltID">
            <summary>
              Looks up a localized string similar to The alternate ID entered is not valid. It must be 10 digits only..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_InvalidNumber">
            <summary>
              Looks up a localized string similar to The number you entered is not a valid card number. Please reenter and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_InvalidSubwayCardFormat">
            <summary>
              Looks up a localized string similar to Invalid Subway Card format received.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_InvalidVoiceAuthentication">
            <summary>
              Looks up a localized string similar to Invalid Voice Authentication Code. Please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_MagTekIPADDetached">
            <summary>
              Looks up a localized string similar to The MagTek IPAD device has been detached, please reattach the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_ManualEntryIncomplete">
            <summary>
              Looks up a localized string similar to The information you entered is incomplete, please correct the issues noted below:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_NoAltID">
            <summary>
              Looks up a localized string similar to You must enter a valid Alternate ID before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_NotSwiped">
            <summary>
              Looks up a localized string similar to The information is not considered swiped. Please swipe again.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_NotSwipedOrScanned">
            <summary>
              Looks up a localized string similar to The information is considered not scanned or swiped.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_ScannedSameCode">
            <summary>
              Looks up a localized string similar to You&apos;ve scanned same code already!.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Error_VX820DetachedPleaseReattach">
            <summary>
              Looks up a localized string similar to The Verifone VX820 device has been detached, please reattach the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_FailedDeviceSetup">
            <summary>
              Looks up a localized string similar to Failed! Please restart device and try again.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Label_DeviceInUse">
            <summary>
              Looks up a localized string similar to Device In Use:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_MergeFromSubwayCard">
            <summary>
              Looks up a localized string similar to “From” Subway Card 
            Swipe Card or Enter Card Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_MergeToSubwayCard">
             <summary>
               Looks up a localized string similar to “To” Subway Card 
            Swipe Card to transfer Balance to this Card.
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Message_PleasePresentCard">
            <summary>
              Looks up a localized string similar to Please insert, tap, or swipe Credit / Debit Card for {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_NoActiveDevices">
            <summary>
              Looks up a localized string similar to There aren&apos;t any active devices.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_ObtainAlternateID">
            <summary>
              Looks up a localized string similar to Obtain the Alternate ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_CheckingSignature">
            <summary>
              Looks up a localized string similar to Checking Signature.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_DeviceOffline">
            <summary>
              Looks up a localized string similar to Device Offline.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_PINEntry">
            <summary>
              Looks up a localized string similar to PIN Entry.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_Processing">
            <summary>
              Looks up a localized string similar to Processing....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_RemoveCard">
            <summary>
              Looks up a localized string similar to Remove Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_TransactionApproved">
            <summary>
              Looks up a localized string similar to Transaction Approved.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_TransactionDeclined">
            <summary>
              Looks up a localized string similar to Transaction Declined.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PCEFTPOSStatus_WaitingForCard">
            <summary>
              Looks up a localized string similar to Waiting For Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PerformingDeviceSetup">
            <summary>
              Looks up a localized string similar to Performing Device Setup...Please Wait.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PerformingMaintenance">
            <summary>
              Looks up a localized string similar to Performing Maintenance... Please Wait.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PleaseScanEnterCreditDebitCard">
            <summary>
              Looks up a localized string similar to Please scan/enter the card ending in ****.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_PleaseScanEnterGiftRewardsCard">
            <summary>
              Looks up a localized string similar to Please scan/enter the Subway gift / rewards card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_RewardsCardSwipePurchase">
            <summary>
              Looks up a localized string similar to Swipe Subway Rewards Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_RewardsPointsAddingPoints">
            <summary>
              Looks up a localized string similar to To add Points, Swipe Subway Card or Key in “Alias”.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_RewardsPointsAddingPointsWithScanner">
            <summary>
              Looks up a localized string similar to To add Points, Scan Subway Card or Key in Card Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_RewardsPointsVoidingPoints">
            <summary>
              Looks up a localized string similar to Swipe Subway Card or Key in &quot;Alias&quot;.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SameCard">
            <summary>
              Looks up a localized string similar to This Card has already been presented during this transaction. It cannot be scanned twice..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_ScanBarcodeWithPhone">
            <summary>
              Looks up a localized string similar to Scan barcode displayed on Mobile phone.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_Status_ProcessingTransactionVoid">
            <summary>
              Looks up a localized string similar to Processing transaction void....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SwipeCreditCardManualEntry">
            <summary>
              Looks up a localized string similar to Swipe or manually enter Credit Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SwipeDebitCardManualEntry">
            <summary>
              Looks up a localized string similar to Swipe or manually enter Debit Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SwipeGiftCardPurchase">
            <summary>
              Looks up a localized string similar to Swipe Subway Cash Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SwipeNextSubwayCard">
            <summary>
              Looks up a localized string similar to Please swipe the next Subway Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_SwipeSubwayCard">
            <summary>
              Looks up a localized string similar to Swipe Subway Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextBlockCVV">
            <summary>
              Looks up a localized string similar to CVV2:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextBlockEnterVoiceAuthCode">
            <summary>
              Looks up a localized string similar to Please enter Voice Authentication code.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextBlockExpDate">
            <summary>
              Looks up a localized string similar to Exp date (MM/YY):.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextBlockPhoneAuth">
            <summary>
              Looks up a localized string similar to Phone Auth:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextBlockVoiceAuth">
            <summary>
              Looks up a localized string similar to Voice Authorization Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextColumnLastFour">
            <summary>
              Looks up a localized string similar to Last Four.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextColumnStatus">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TextColumnValue">
            <summary>
              Looks up a localized string similar to Value.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_TitleDataEntryView">
            <summary>
              Looks up a localized string similar to Collect Card Information.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_UnrecognizedTransactionType">
            <summary>
              Looks up a localized string similar to Unrecognized transaction type.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_UpdatingPinkey">
            <summary>
              Looks up a localized string similar to Updating Device ... Please Wait.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_WaitingForCardNumber">
            <summary>
              Looks up a localized string similar to Waiting for Card Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_WarningDeviceDesynced">
            <summary>
              Looks up a localized string similar to Warning: Your device became de-synced. You will need to restart POS software and then try again....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_WarningDeviceFrozen">
            <summary>
              Looks up a localized string similar to Device Frozen Warning.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_WarningPINPadDisconnected">
            <summary>
              Looks up a localized string similar to Pinpad disconnected during the transaction, Please re-connect it to finish the transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DataEntryView_WarningPINPadOfflineCheckConnectivity">
            <summary>
              Looks up a localized string similar to Pin Pad Offline, Please check your device connectivity..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Declined">
            <summary>
              Looks up a localized string similar to Declined.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeclinedRemoveCard">
            <summary>
              Looks up a localized string similar to Declined Remove Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceFrozenRestartSubShop">
            <summary>
              Looks up a localized string similar to Warning: Your device seems to be frozen. Restart POS Software, and press both the Yellow &quot;&quot;CLEAR&quot;&quot; and &quot;&quot;.&quot;&quot; buttons to reboot the iPP350 Pin pad.&quot;.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateAuthorizing">
            <summary>
              Looks up a localized string similar to Authorizing.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateBusy">
            <summary>
              Looks up a localized string similar to Busy.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateCancelled">
            <summary>
              Looks up a localized string similar to Cancelled.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateError">
            <summary>
              Looks up a localized string similar to Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateIdle">
            <summary>
              Looks up a localized string similar to Idle.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateRemoveCard">
            <summary>
              Looks up a localized string similar to RemoveCard.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateSignature">
            <summary>
              Looks up a localized string similar to Signature.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateTimeOut">
            <summary>
              Looks up a localized string similar to Timed Out.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateUnknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateVerifyingPIN">
            <summary>
              Looks up a localized string similar to Verifying PIN.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DeviceStateWaitingForCard">
            <summary>
              Looks up a localized string similar to Waiting For Card.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingBlacklisted">
            <summary>
              Looks up a localized string similar to Number dialed is blacklisted..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingBusy">
            <summary>
              Looks up a localized string similar to Number dialed is busy..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingDelayed">
            <summary>
              Looks up a localized string similar to Call is delayed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingNoAnswer">
            <summary>
              Looks up a localized string similar to No Answer..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingNoCarrier">
            <summary>
              Looks up a localized string similar to A NO CARRIER message received during dialing..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DialingNoDialtone">
            <summary>
              Looks up a localized string similar to No dialtone received..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_DuringStateTemplate">
            <summary>
              Looks up a localized string similar to The dialer was in the {0} state..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_HTTP">
            <summary>
              Looks up a localized string similar to An HTTP error occured: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_InitPortClosed">
            <summary>
              Looks up a localized string similar to An attempt to initialize the modem was made when the port was closed. Please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_InitPortGeneric">
            <summary>
              Looks up a localized string similar to An error occurred while attempting to initialize the modem. Please fix the issue and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Dialer_Error_Timeout">
            <summary>
              Looks up a localized string similar to A timeout occured during {0}..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.DialerException_Error_Generic">
            <summary>
              Looks up a localized string similar to An error occured while using the dialer..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_GenericCreditDebit">
            <summary>
              Looks up a localized string similar to A problem has occurred processing the Credit Card or Debit Card request.  We are not able to determine the exact cause of the problem. Please contact Customer Service for assistance..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_GenericGeneric">
            <summary>
              Looks up a localized string similar to A problem has occurred processing your request.  We are not able to determine the exact cause of the problem.  Please contact Customer Service for assistance..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_GenericSPM">
            <summary>
              Looks up a localized string similar to A problem has occurred within the Subway Payment Manager.  We are not able to determine the exact cause of the problem.  Please contact Customer Service for assistance..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_GenericUnknown">
            <summary>
              Looks up a localized string similar to An unknown error occurred..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_GenericWindows">
            <summary>
              Looks up a localized string similar to A problem has occurred within the Windows operating system.  We are not able to determine the exact cause of the problem.  Please consult with your information systems specialist to determine the cause of the problem..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_Host">
            <summary>
              Looks up a localized string similar to Host.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_NoCardAssociated">
            <summary>
              Looks up a localized string similar to There isn&apos;t a card associated with this item..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_SPMHeatlh_AdditionalSetupRequired">
            <summary>
              Looks up a localized string similar to Additional Device Setup Required..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Error_UserCancelledCardDataCollection">
            <summary>
              Looks up a localized string similar to User cancelled card data collection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorAccountIDNotSet">
            <summary>
              Looks up a localized string similar to Account ID Not Set.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadAccount">
            <summary>
              Looks up a localized string similar to The account number is missing..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadClientCertificate">
            <summary>
              Looks up a localized string similar to Unable to load client certificate..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadCommPort">
            <summary>
              Looks up a localized string similar to Comm Port value of {0} is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadDataBits">
            <summary>
              Looks up a localized string similar to Databits value of {0} is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadOrderLineNumber">
            <summary>
              Looks up a localized string similar to Order line number is not numeric..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadStopBit">
            <summary>
              Looks up a localized string similar to Stopbit value of {0} is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorBadTimeout">
            <summary>
              Looks up a localized string similar to Timeout value of {0}ms is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorCannotProcess">
            <summary>
              Looks up a localized string similar to Cannot Process Transaction.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorCantProcessMobileWithOtherOLTPTender">
            <summary>
              Looks up a localized string similar to Cannot process Mobile payment with other OLTP tender types.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorChangeCountryNew">
            <summary>
              Looks up a localized string similar to Changing to a Profile with the country code for a new country code was made..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorChangeCountryNone">
            <summary>
              Looks up a localized string similar to Changing to a Profile with the country code of &apos;None&apos; is not valid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorChangeCountryUnknown">
            <summary>
              Looks up a localized string similar to Changing to a Profile with the country code of &apos;Unknown&apos; is not valid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorConvertingAccountStatus">
            <summary>
              Looks up a localized string similar to Error converting account status.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorCustomerRemovedCardPOS">
            <summary>
              Looks up a localized string similar to Card was removed. Restart the transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorCustomerRemovedCardVX820">
             <summary>
               Looks up a localized string similar to **ABORTED**
            CARD REMOVED
            BEFORE END OF
            TRANSACTION.
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorCVV2TooShort">
            <summary>
              Looks up a localized string similar to There aren&apos;t enough digits. The CVV2 must be 3 or 4 characters..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorDuplicatePayment">
            <summary>
              Looks up a localized string similar to The payment is attempting to use a card that was already used for payment, which is not allowed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorFailedPinpadInit">
            <summary>
              Looks up a localized string similar to PinPad failed to initialize..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorGenericNone">
            <summary>
              Looks up a localized string similar to No Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorInappropriateAltID">
            <summary>
              Looks up a localized string similar to The order contains a Subway Card using an Alternate ID and another Subway Card, which is not allowed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorInvalidDebitOperation">
            <summary>
              Looks up a localized string similar to A debit card can not be used with the current device type selected. Please select another payment type or change the device type for debit cards to an appropriate value..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorInvalidDialPrefix">
            <summary>
              Looks up a localized string similar to The DialPrefix can only be 5 characters in length and comprise of numbers and comma only. The value of [{0}] does not meet this criteria..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorInvalidExpDate">
            <summary>
              Looks up a localized string similar to The expiration date you entered is in the past, please reenter and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorMagTekNotConnected">
            <summary>
              Looks up a localized string similar to A MagTek IPAD device is not detected. Please attach a device and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorManualNotSwipe">
            <summary>
              Looks up a localized string similar to It appears that the information was entered manually instead of swiping the card. Please swipe a card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoContactless">
            <summary>
              Looks up a localized string similar to The MagTek Contactless device does not appear to be connected..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoCVV2">
            <summary>
              Looks up a localized string similar to You must enter the CVV2 on the back of the card before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoExpMonth">
            <summary>
              Looks up a localized string similar to You must select an expiration month before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoExpYear">
            <summary>
              Looks up a localized string similar to You must select an expiration year before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoNameOnCard">
            <summary>
              Looks up a localized string similar to You must enter the name on the card before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNone">
            <summary>
              Looks up a localized string similar to None.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoNumber">
            <summary>
              Looks up a localized string similar to You must enter a card number before proceeding..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNoSwipe">
            <summary>
              Looks up a localized string similar to You must swipe a card before clicking the Close button..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotAuthorizedAccess">
            <summary>
              Looks up a localized string similar to You are not authorized to access the folder {0}..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotImplemented">
            <summary>
              Looks up a localized string similar to This feature is not yet implemented.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyAddValueCurrency">
            <summary>
              Looks up a localized string similar to The currency has not been set for an add value..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyMissingInfo">
            <summary>
              Looks up a localized string similar to A required value is missing.  Each of the values below requires at least one character..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyOrderID">
            <summary>
              Looks up a localized string similar to The OrderID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyPaymentCardName">
            <summary>
              Looks up a localized string similar to The Name on Card is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyPaymentCardNoKey">
            <summary>
              Looks up a localized string similar to The Key Serial Number is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyPaymentCardNoPIN">
            <summary>
              Looks up a localized string similar to The PIN is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotReadyProfileID">
            <summary>
              Looks up a localized string similar to The ProfileID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorNotRecognized">
            <summary>
              Looks up a localized string similar to An unrecognizable response was returned from the host.  Please contact Customer Service for assistance..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorParseMagData">
            <summary>
              Looks up a localized string similar to ErrorParseMagData.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorPathInvalid">
            <summary>
              Looks up a localized string similar to The specified path {0} is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorPathTooLong">
            <summary>
              Looks up a localized string similar to The path specified is too long: {0}..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorProcessor">
            <summary>
              Looks up a localized string similar to Processor.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorRequestProcessing">
            <summary>
              Looks up a localized string similar to Error processing the request.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorRequestTransmitting">
            <summary>
              Looks up a localized string similar to Error transmitting the request.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorResponseParsing">
            <summary>
              Looks up a localized string similar to Error parsing the response.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorResponseResponse">
            <summary>
              Looks up a localized string similar to Error parsing the response.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorSPM">
            <summary>
              Looks up a localized string similar to SPM Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorSwipingCard">
            <summary>
              Looks up a localized string similar to An error occurred while swiping the card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorTooManyCharacters">
            <summary>
              Looks up a localized string similar to The maximum number of characters, of {0}, as already been reached..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorTotalIncorrect">
            <summary>
              Looks up a localized string similar to The total of payments for the adjusted order must match the total for the original order..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorUnknown">
            <summary>
              Looks up a localized string similar to An unknown error has occured..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ErrorWindows">
            <summary>
              Looks up a localized string similar to Windows Error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FilesCompressedComplete">
            <summary>
              Looks up a localized string similar to Compression Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FilesCompressedProgress">
            <summary>
              Looks up a localized string similar to Compressing Files.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FileTransferComplete">
            <summary>
              Looks up a localized string similar to File Transfer Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FileTransferProgress">
            <summary>
              Looks up a localized string similar to File Transfer Progress.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FTPClient_EmptyName">
            <summary>
              Looks up a localized string similar to Empty name.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FTPClient_FileDoesntExist">
            <summary>
              Looks up a localized string similar to File doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.FTPClient_FilePathEmpty">
            <summary>
              Looks up a localized string similar to File path empty..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.GenericCardSwipeControl_Description">
            <summary>
              Looks up a localized string similar to Be sure the textbox below has focus and then swipe a card through the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.GenericCardSwipeControl_Title">
            <summary>
              Looks up a localized string similar to Generic Card Swipe.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.HostDialerTransmit_Error_Modem">
            <summary>
              Looks up a localized string similar to An error occurred while dialing the host.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_SpecifyCOMPort">
            <summary>
              Looks up a localized string similar to Manually specifiy COM port.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TitleNotReady">
            <summary>
              Looks up a localized string similar to Europay ICT250 is NOT ready for use..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TitleReady">
            <summary>
              Looks up a localized string similar to Europay ICT250 Verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TroubleshootingTips_1">
            <summary>
              Looks up a localized string similar to 1. Unplug the ICT250&apos;s USB connector and then plug it back into your POS..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TroubleshootingTips_2">
            <summary>
              Looks up a localized string similar to 2. Close any application that is currently using the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TroubleshootingTips_3">
            <summary>
              Looks up a localized string similar to 3. Repeat process to verify device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_DeviceControl_TroubleshootingTips_Label">
            <summary>
              Looks up a localized string similar to Troubleshooting steps:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_Error_CommunicationError">
            <summary>
              Looks up a localized string similar to Error communicating with ICT250..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_Error_PaymentProcessError">
            <summary>
              Looks up a localized string similar to Error processing payment with ICT250..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_Error_TransactionStatusAbort">
            <summary>
              Looks up a localized string similar to Transaction aborted via time-out or abort-key..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250_Error_TransactionStatusDeclined">
            <summary>
              Looks up a localized string similar to Transaction was declined..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250VerificationControl_Label_Application">
            <summary>
              Looks up a localized string similar to Application:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250VerificationControl_Label_Firmware">
            <summary>
              Looks up a localized string similar to Firmware:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ICT250VerificationControl_Title">
            <summary>
              Looks up a localized string similar to Ingenico ICT250 has been verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IncorrectCardNumberEntered">
            <summary>
              Looks up a localized string similar to It appears that the card number was not entered correctly. Please try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.InstallingFiles">
            <summary>
              Looks up a localized string similar to Installing Files.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Introduction">
            <summary>
              Looks up a localized string similar to Introduction.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_AccountNumber">
            <summary>
              Looks up a localized string similar to     Account No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_AcquirerID">
            <summary>
              Looks up a localized string similar to    Acquirer ID: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_AIDNumber">
            <summary>
              Looks up a localized string similar to         AID No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_Amount">
            <summary>
              Looks up a localized string similar to         Amount: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_AuthCode">
            <summary>
              Looks up a localized string similar to  Authorization: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_CardScheme">
            <summary>
              Looks up a localized string similar to    Card Scheme: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350_Receipt_ReceiptNumber">
            <summary>
              Looks up a localized string similar to     Receipt No: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.IPP350VerificationControl_Title">
            <summary>
              Looks up a localized string similar to Ingenico IPP350 has been verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.KbdBarcodeScanner_Description_BarcodeScannerControl">
            <summary>
              Looks up a localized string similar to Be sure the textbox below has focus and then scan a card with the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.KbdBarcodeScanner_TitleBarcodeScannerControl">
            <summary>
              Looks up a localized string similar to Barcode Card Scanner.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Firmware">
            <summary>
              Looks up a localized string similar to Firmware:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Manufacturer">
            <summary>
              Looks up a localized string similar to Manufacturer:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Model">
            <summary>
              Looks up a localized string similar to Model:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_PleaseGatherSignature">
            <summary>
              Looks up a localized string similar to Please Gather Signature.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_PleaseGatherSignatureMessage">
            <summary>
              Looks up a localized string similar to Please gather the Customer&apos;s signature. Does the signature match the back of the card?.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Product">
            <summary>
              Looks up a localized string similar to Product:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Serial">
            <summary>
              Looks up a localized string similar to Serial:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Label_Status">
            <summary>
              Looks up a localized string similar to Status:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LanguageArabic">
            <summary>
              Looks up a localized string similar to العربية.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LanguageEnglish">
            <summary>
              Looks up a localized string similar to English.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LanguageFrench">
            <summary>
              Looks up a localized string similar to Français.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LanguageGerman">
            <summary>
              Looks up a localized string similar to Deutsch.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LanguageSpanish">
            <summary>
              Looks up a localized string similar to Español.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LicenseAgreement">
            <summary>
              Looks up a localized string similar to License Agreement.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_AmountNotReady">
            <summary>
              Looks up a localized string similar to The Amount is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_CurrencyNotReady">
            <summary>
              Looks up a localized string similar to The currency has not been set for a line item..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_ExistingLineItem">
            <summary>
              Looks up a localized string similar to A line item with an ID of {0} already exists..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_IDBad">
            <summary>
              Looks up a localized string similar to The ID must be between 0 and Max(integer). The value of [{0}] was submitted. Please change value and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_MissingPLU">
            <summary>
              Looks up a localized string similar to The PLU is required but not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_MissingQty">
            <summary>
              Looks up a localized string similar to The Quantity is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_NotReady">
            <summary>
              Looks up a localized string similar to Information for Line Item [{0}:{1}] is not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LineItem_Error_NotReadyMissing">
            <summary>
              Looks up a localized string similar to Missing items for line item:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoggingHelper_ClientUploadCancelled">
            <summary>
              Looks up a localized string similar to Transfer Cancelled.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoggingHelper_ClientUploadComplete">
            <summary>
              Looks up a localized string similar to Transfer Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoggingHelper_ClientUploadStarted">
            <summary>
              Looks up a localized string similar to Transferring file {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoggingHelper_LogFileFromStore">
            <summary>
              Looks up a localized string similar to Log file from Store [{0}].
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoggingHelper_ZipCreated">
            <summary>
              Looks up a localized string similar to {0} zipped log file created..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoyaltyGatewayVerificationControl_Label_lblActivation">
            <summary>
              Looks up a localized string similar to Activation:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoyaltyGatewayVerificationControl_Label_lblAppVersion">
            <summary>
              Looks up a localized string similar to App Version:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoyaltyGatewayVerificationControl_Label_LoyaltyProvider">
            <summary>
              Looks up a localized string similar to Loyalty Provider:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoyaltyGatewayVerificationControl_Title">
            <summary>
              Looks up a localized string similar to Verifying Loyalty Server Connection.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.LoyaltyGatewayVerificationControl_txtActivated">
            <summary>
              Looks up a localized string similar to Activated.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.MagTekVerificationControl_Label_lblBuildDate">
            <summary>
              Looks up a localized string similar to Build Date:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.MagTekVerificationControl_Title">
            <summary>
              Looks up a localized string similar to MagTek IPAD has been verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.MobileProcessor_Error_InvalidPaydiantCredentials">
            <summary>
              Looks up a localized string similar to Invalid Paydiant Credentials are used, Please contact the help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.MobileProcessor_Error_ProcessingOrderError">
            <summary>
              Looks up a localized string similar to Error occurred during processing order..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.MobileProcessor_Error_SelectedCountryNotSupported">
            <summary>
              Looks up a localized string similar to Currently selected country not supported..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_ScannerVerificationFailure">
            <summary>
              Looks up a localized string similar to Scanner Verification Failure.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_TroubleshootingSteps_Attached_1">
            <summary>
              Looks up a localized string similar to 1. Make sure device is attached to the POS Machine..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_TroubleshootingSteps_Attached_2">
            <summary>
              Looks up a localized string similar to 2. Repeat process to verify device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_TroubleshootingSteps_Drivers_1">
            <summary>
              Looks up a localized string similar to 1. Try manually installing OPOS driver..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_TroubleshootingSteps_Drivers_2">
            <summary>
              Looks up a localized string similar to 2. Repeat process to verify device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.OposBarcodeScanner_DeviceControl_TroubleshootingSteps_Label">
            <summary>
              Looks up a localized string similar to Troubleshooting steps:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_ClaimNumberLabel">
            <summary>
              Looks up a localized string similar to Claim Number: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_MissingOrderDate">
            <summary>
              Looks up a localized string similar to The OrderDate is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_MissingPath">
            <summary>
              Looks up a localized string similar to The requested path doesn&apos;t exist..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_NoItemsInOrder">
            <summary>
              Looks up a localized string similar to There aren&apos;t any items in the Order to process..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_NotReady">
            <summary>
              Looks up a localized string similar to A request has been made but not all required items have been set..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_SaveReceiptBarcodeMissingOrderID">
            <summary>
              Looks up a localized string similar to Incorrect use of SaveReceiptBarcode. The OrderID must be present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Error_TransNbrMissing">
            <summary>
              Looks up a localized string similar to The TransactionNumber is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Label_HostOrderID">
            <summary>
              Looks up a localized string similar to Host Order ID: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Receipt_CouponReturned">
            <summary>
              Looks up a localized string similar to Coupon Returned.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Receipt_CouponTitle">
            <summary>
              Looks up a localized string similar to Coupon Title:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Receipt_CouponUsed">
            <summary>
              Looks up a localized string similar to Coupon Used: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Order_Receipt_POSOrderNumberLabel">
            <summary>
              Looks up a localized string similar to POS Order Number: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaydiantVerificationControl_Failed">
            <summary>
              Looks up a localized string similar to Failed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaydiantVerificationControl_Title">
            <summary>
              Looks up a localized string similar to Verifying Paydiant Credentials.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_AdjustPayAmount">
            <summary>
              Looks up a localized string similar to This payment was adjusted from previous request. Adjusting its amount is not supported..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_MobilePaymentTokenMissing">
            <summary>
              Looks up a localized string similar to No payment was selected by the customer. Please select a payment method in the mobile app and re-scan the QR code..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_NewCertificateDuringAdjustOrder">
            <summary>
              Looks up a localized string similar to Using a new certificate during an adjuster order is not allowed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_NewCouponDuringAdjustOrder">
            <summary>
              Looks up a localized string similar to Using a new coupon during an adjusted order is not allowed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_NoCertificatePresented">
            <summary>
              Looks up a localized string similar to No certificate was presented..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_NoCouponPresented">
            <summary>
              Looks up a localized string similar to No Coupon was presented..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_NotReady">
            <summary>
              Looks up a localized string similar to Information for Payment [{0}] is not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payment_Error_PaymentMissing">
            <summary>
              Looks up a localized string similar to Missing information for Payment:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_InvalidLogin">
            <summary>
              Looks up a localized string similar to The store number and password combination is invalid. Please re-enter your login credentials..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_NoPaste">
            <summary>
              Looks up a localized string similar to You are not able to paste into this text box.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_NotAllowed">
            <summary>
              Looks up a localized string similar to Not Allowed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_NotEnoughFreeMemory">
            <summary>
              Looks up a localized string similar to Your system does not have enough free memory to process this transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_OnlyNumbersAllowed">
            <summary>
              Looks up a localized string similar to You can only type a number here..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_PasswordValidation">
            <summary>
              Looks up a localized string similar to The contents of the password and confirm password fields did not match..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_TransactionTimeout">
            <summary>
              Looks up a localized string similar to Transaction Timed Out.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PaymentManager_Error_UnacceptableCharacter">
            <summary>
              Looks up a localized string similar to Unacceptable Character.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payments_Error_ExistingPayment">
            <summary>
              Looks up a localized string similar to A payment with an ID of {0} already exists..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Payments_Error_IDBad">
            <summary>
              Looks up a localized string similar to The ID must be between 0 and Max(integer). The value of [{0}] was submitted. Please change value and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PCEFTPOSNotInstalled">
            <summary>
              Looks up a localized string similar to PC-EFTPOS Software Not Installed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PCEFTPOSVerificationControl_Label_lblAppPath">
            <summary>
              Looks up a localized string similar to App Path:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PCEFTPOSVerificationControl_Label_Version">
            <summary>
              Looks up a localized string similar to PCEFTPOS Ver:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PCEFTPOSVerificationControl_Title">
            <summary>
              Looks up a localized string similar to PC-EFTPOS has been installed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseConfirmAmount">
            <summary>
              Looks up a localized string similar to Please Confirm Amount....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseConfirmSettings">
            <summary>
              Looks up a localized string similar to Please confirm the following settings..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseEnterManualInfo">
            <summary>
              Looks up a localized string similar to Please Enter Manual Information....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseEnterPIN">
            <summary>
              Looks up a localized string similar to Please enter PIN....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseEnterVoiceAuth">
            <summary>
              Looks up a localized string similar to Please enter Voice Authentication code..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PleaseSwipeCard">
            <summary>
              Looks up a localized string similar to Please Swipe Card....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.POSTerminalID">
            <summary>
              Looks up a localized string similar to POS Terminal ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.PressCancelButton">
            <summary>
              Looks up a localized string similar to Please press the red &quot;&quot;CANCEL&quot;&quot; button on the terminal to cancel the sale in progress.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders">
            <summary>
              Looks up a localized string similar to The following tender(s) could not be voided.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_Coupon">
            <summary>
              Looks up a localized string similar to Coupon: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_CreditCard">
            <summary>
              Looks up a localized string similar to Credit Card: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_GiftCard">
            <summary>
              Looks up a localized string similar to Gift Card: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_RewardCard">
            <summary>
              Looks up a localized string similar to Reward Card: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_SubwayGiftCard">
            <summary>
              Looks up a localized string similar to Subway Gift Card: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_CouldNotVoidTenders_Unknown">
            <summary>
              Looks up a localized string similar to Unknown Card Type: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_CancelAltID">
            <summary>
              Looks up a localized string similar to The user cancelled entering the Alternate ID.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_CancelNewCardSwipe">
            <summary>
              Looks up a localized string similar to The user cancelled during the swiping of the &apos;TO&apos; card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_CancelOldCardSwipe">
            <summary>
              Looks up a localized string similar to The user cancelled during swiping of the &apos;FROM&apos; card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_CannotMergeSameCard">
            <summary>
              Looks up a localized string similar to The FROM and the TO card cannot be the same.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_CommunicatingWithCredentialHost">
            <summary>
              Looks up a localized string similar to Miscellaneous Error communicating with Credential Host.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_IncorrectPassword">
            <summary>
              Looks up a localized string similar to Incorrect password specified..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_MismatchedStoreNumber">
            <summary>
              Looks up a localized string similar to Error: Store number mismatch.  Please verify that the store number in the POS software exactly matches the store number in the SPM Configuration Manager..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_NoCoupon">
            <summary>
              Looks up a localized string similar to Error No Coupon.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_NotReadyClerkID">
            <summary>
              Looks up a localized string similar to The Clerk ID is required but not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_NoValidTransactionsToProcess">
            <summary>
              Looks up a localized string similar to No valid transactions found to process..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_OrderItemsNotReady">
            <summary>
              Looks up a localized string similar to Items in the order are not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_OrderMissing">
            <summary>
              Looks up a localized string similar to The Order is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_PasswordExpired">
            <summary>
              Looks up a localized string similar to Your password has expired..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_PasswordMissing">
            <summary>
              Looks up a localized string similar to The Password is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_POSVersionMissing">
            <summary>
              Looks up a localized string similar to A POS Version must be set in order to continue..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_ProcessingPayment">
            <summary>
              Looks up a localized string similar to There was an error processing the Payment..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_RequestIDMissing">
            <summary>
              Looks up a localized string similar to The RequestID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_RetryAdjustedOrder">
            <summary>
              Looks up a localized string similar to This order has been adjusted so it can not be retried. If a retry is necessary, please void the order and reenter the appropriate amounts..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_SPMSettingsDirectoryNotFound">
            <summary>
              Looks up a localized string similar to SPM Settings directory not found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_SPMSettingsFileNotFound">
            <summary>
              Looks up a localized string similar to SPM Settings file not found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_StoreIDMissing">
            <summary>
              Looks up a localized string similar to The StoreID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_TerminalIDMissing">
            <summary>
              Looks up a localized string similar to The TerminalID is required but is not present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_TransferNoNewCard">
            <summary>
              Looks up a localized string similar to A second card is requried for this transaction but was not found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_TransferNoOldCard">
            <summary>
              Looks up a localized string similar to A card is required for this transaction but was not found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_UserAccountDisabled">
            <summary>
              Looks up a localized string similar to User account is disabled.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_UserAccountExpired">
            <summary>
              Looks up a localized string similar to User account has expired.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_UserAccountInvalid">
            <summary>
              Looks up a localized string similar to User account is invalid.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_UserAccountLocked">
            <summary>
              Looks up a localized string similar to User account is locked.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_Error_VoidAdjustOrder">
            <summary>
              Looks up a localized string similar to The current order does not appear to have been adjusted and therefore can&apos;t be voided with this method. Please use VoidOrder instead..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Request_UserCancelledOperation">
            <summary>
              Looks up a localized string similar to The user cancelled the operation.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ResponseCode">
            <summary>
              Looks up a localized string similar to Response Code: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Rewards">
            <summary>
              Looks up a localized string similar to Rewards.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500_Label_DeviceSetup">
            <summary>
              Looks up a localized string similar to Device Setup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Disconnected">
            <summary>
              Looks up a localized string similar to Saturn 6500 Disconnected.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_CallHelpDesk">
            <summary>
              Looks up a localized string similar to Saturn 6500 error, Please call help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_InvalidTerminalIDCallHelpDesk">
            <summary>
              Looks up a localized string similar to Invalid terminal ID, Please call help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_NetworkError">
            <summary>
              Looks up a localized string similar to Network error, Please call help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_RetrievalFailedCallHelpDesk">
            <summary>
              Looks up a localized string similar to Retrieval failed, Please call help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_RetrievePINFailed">
            <summary>
              Looks up a localized string similar to Retrieve PIN key failed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Error_SetupErrorCallHelpDesk">
            <summary>
              Looks up a localized string similar to Setup error, Please call help desk.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_SetupComplete">
            <summary>
              Looks up a localized string similar to Saturn 6500 Setup Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_Title">
            <summary>
              Looks up a localized string similar to OTI Saturn 6500 has been verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Saturn6500VerificationControl_txtDevSetupStep">
            <summary>
              Looks up a localized string similar to Status.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SignatureWindow_SignatureRequired">
            <summary>
              Looks up a localized string similar to Signature Required.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_BalanceInquiryFail">
            <summary>
              Looks up a localized string similar to SnapLogic Balance Inquiry Failed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_CannotRedeemMultipleRewardAccounts">
            <summary>
              Looks up a localized string similar to Cannot redeem points from multiple Loyalty Cards in one transaction. Please select only one Loyalty Card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_CardDataError">
            <summary>
              Looks up a localized string similar to Card data error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_CertificateMismatch">
            <summary>
              Looks up a localized string similar to Certificate Mismatch.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_CouponDataError">
            <summary>
              Looks up a localized string similar to Coupon data error.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_EmptyCardNumber">
            <summary>
              Looks up a localized string similar to Unable to determine the Number of a card presented in this transaction. Please try the transaction again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_EmptyLineItems">
            <summary>
              Looks up a localized string similar to Can&apos;t process an order with empty line items.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_EmptyResponse">
            <summary>
              Looks up a localized string similar to An empty response was received from the loyalty server during the transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_InvalidCards">
            <summary>
              Looks up a localized string similar to One or more cards in the payments are invalid. Please use another card or try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnaplogicProcessor_Error_InvalidCardUsed">
            <summary>
              Looks up a localized string similar to The Subway Card ({0}) is not valid (Card Status: {1}).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_InvalidRequestType">
            <summary>
              Looks up a localized string similar to Invalid request type was used for processing the order..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_LoyaltyServerOffline">
            <summary>
              Looks up a localized string similar to The Loyalty Server is unavailable or offline..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_MissingCouponCode">
            <summary>
              Looks up a localized string similar to One of the Coupons in this order is missing its Coupon Code, and is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_NoRewardsCardPresented">
            <summary>
              Looks up a localized string similar to No Loyalty card was presented during the transaction. Reward redemption cannot be processed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_PhoneNumberMismatch">
            <summary>
              Looks up a localized string similar to The phone numbers do not match.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_PhoneNumberMissing">
            <summary>
              Looks up a localized string similar to No phone number was provided for lookup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_TransactionPreparationFail">
            <summary>
              Looks up a localized string similar to Error occurred while preparing the loyalty transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_UnsupportedTender">
            <summary>
              Looks up a localized string similar to Unsupported Tender has been used: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicProcessor_Error_VoidMissingInformation">
            <summary>
              Looks up a localized string similar to Unable to process the void transaction with missing information..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicTokenCollection_Error_CannotDeserializeTokens">
            <summary>
              Looks up a localized string similar to Unable to properly deserialize encrypted bearer tokens..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SnapLogicTokenCollection_Error_CannotSetUpCredentials">
            <summary>
              Looks up a localized string similar to Unable to set up Loyalty processing credentials. Loyalty transactions are not possible. Please call help desk for assistance..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_AdditionalSetupFailed">
            <summary>
              Looks up a localized string similar to Additional Device Setup Failed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_AdditionalSetupHostFail">
            <summary>
              Looks up a localized string similar to Additional Device Setup failed due to Host Verification Failure..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DeviceCheckFailed">
            <summary>
              Looks up a localized string similar to Failed to check SPM devices.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DeviceCommunicationFailed">
            <summary>
              Looks up a localized string similar to Device communication is unsuccessful. Please restart / power cycle the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DeviceFirmwareNotLoaded">
            <summary>
              Looks up a localized string similar to Device Firmware is not loaded properly.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DeviceNotAttached">
            <summary>
              Looks up a localized string similar to Device is not attached.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DeviceNotConfigured">
            <summary>
              Looks up a localized string similar to Device is not configured properly..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DriverNotInstalledProperly">
            <summary>
              Looks up a localized string similar to Driver is not installed properly.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_DriverRepairFailed">
            <summary>
              Looks up a localized string similar to Failed to repair driver.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_InvalidCredentials">
            <summary>
              Looks up a localized string similar to Invalid Store ID or Password has been used..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_NoDevicesToCheck">
            <summary>
              Looks up a localized string similar to No devices found to check.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_NoDevicesToRepair">
            <summary>
              Looks up a localized string similar to No devices found to repair..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_NotOnline">
            <summary>
              Looks up a localized string similar to Internet or Host Processor is not online..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_PleaseConnectDevice">
            <summary>
              Looks up a localized string similar to Device is not attached. Please connect the device..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_VerifyHostFail">
            <summary>
              Looks up a localized string similar to Cannot verify the Card Processor Host..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMHealth_Error_VXDriverRepairFail">
            <summary>
              Looks up a localized string similar to Cannot repair the VX Driver..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMInternalError">
            <summary>
              Looks up a localized string similar to An internal SPM error has occurred.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMIPAD_Error_GenericMethod">
            <summary>
              Looks up a localized string similar to Error occurred in {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMIPAD_Error_NoIPAD">
            <summary>
              Looks up a localized string similar to IPAD device does not appear to be connected..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_ComputerUpToDate">
            <summary>
              Looks up a localized string similar to Your computer is up-to-date.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_DownloadCancel">
            <summary>
              Looks up a localized string similar to Download of file canceled.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_DownloadComplete">
            <summary>
              Looks up a localized string similar to Download Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_DownloadError">
            <summary>
              Looks up a localized string similar to Error in downloading file.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_Downloading">
            <summary>
              Looks up a localized string similar to Downloading....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_HostError">
            <summary>
              Looks up a localized string similar to An error occurred obtaining updates.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_HostNotRunning">
            <summary>
              Looks up a localized string similar to SPM Update Service Host is not running.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_InstallComplete">
            <summary>
              Looks up a localized string similar to Install Complete.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_Installing">
            <summary>
              Looks up a localized string similar to Installing....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_NoInstalls">
            <summary>
              Looks up a localized string similar to There aren&apos;t any installs available.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_NoInternet">
            <summary>
              Looks up a localized string similar to Internet connection not currently available.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_NoUpdatesAvail">
            <summary>
              Looks up a localized string similar to No updates available..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_PleaseWait">
            <summary>
              Looks up a localized string similar to Please wait while looking up downloads available....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SPMU_WebServiceError">
            <summary>
              Looks up a localized string similar to Error in calling Web Service..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.StoreNumberPasswordCombinationInvalid">
            <summary>
              Looks up a localized string similar to The store number and password combination is invalid.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.StoreNumberPasswordUpdated">
            <summary>
              Looks up a localized string similar to The store number and password have been updated.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.StoreNumbersAlreadyTheSame">
            <summary>
              Looks up a localized string similar to The value for SPM Store Number and POS Store Number are already the same.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SwipeCreditCard">
            <summary>
              Looks up a localized string similar to Swipe Credit Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SwipeCreditCardManualEntryVoid">
            <summary>
              Looks up a localized string similar to Swipe Credit Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SwipeDebitCard">
            <summary>
              Looks up a localized string similar to Swipe Debit Card for {0:F2}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.SwipeSubwayCardOrEnter">
            <summary>
              Looks up a localized string similar to Swipe Subway Card now or Enter Subway Card Number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TestMode_EnterAltID">
            <summary>
              Looks up a localized string similar to Please enter the desired Alternate ID....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TestModeOnlyOperation">
            <summary>
              Looks up a localized string similar to The operation attempted [{0}] can only be performed while in Test Mode. .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TestPaymentManager_BeginError">
            <summary>
              Looks up a localized string similar to *** BEGIN ERROR ***.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TestPaymentManager_Label_ErrorType">
            <summary>
              Looks up a localized string similar to Error Type:  {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CannotProcessEmptyLineItems">
            <summary>
              Looks up a localized string similar to Cannot process an order with empty line items..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CannotRedeemMultipleRewardAccounts">
            <summary>
              Looks up a localized string similar to Cannot redeem points from multiple Loyalty Cards in one transaction. Please select only one Loyalty Card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CantProcessWhenLoyaltyActivationFailed">
            <summary>
              Looks up a localized string similar to Can&apos;t process Loyalty and Credit card void transactions because ThorLink is incorrectly configured. Please run Configuration Manager and check your ThorLink settings..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CantProcessWhenServerOffline">
            <summary>
              Looks up a localized string similar to Can&apos;t process Loyalty and Credit card void when server offline.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CardDataError">
            <summary>
              Looks up a localized string similar to Card data error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CouponDoesNotMatchAccount">
            <summary>
              Looks up a localized string similar to A coupon used in this transaction does not match the primary Loyalty Card account being used in this transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_CreditCardDeviceNotFound">
            <summary>
              Looks up a localized string similar to Could not find active Credit Card device for processing loyalty void..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_EmptyCardNumber">
            <summary>
              Looks up a localized string similar to Unable to determine the Number of a card presented in this transaction. Please try the transaction again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_EmptyResponse">
            <summary>
              Looks up a localized string similar to An empty response was received from the loyalty server during the transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_InvalidCardInPayments">
            <summary>
              Looks up a localized string similar to One or more cards in the payments are invalid. Please use another card or try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_LoadingGiftCardWithGiftCard">
            <summary>
              Looks up a localized string similar to Cannot Load a Gift Card by paying with another Gift Card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_LoyaltyCardLoadBalance">
            <summary>
              Looks up a localized string similar to Cannot Load a Gift Card by paying with a Loyalty Card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_LoyaltyServerOffline">
            <summary>
              Looks up a localized string similar to The Loyalty Server is unavailable or offline..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_LoyaltyServerTimeOut">
            <summary>
              Looks up a localized string similar to A communication timeout has occured with the Loyalty Server..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_MissingCouponCode">
            <summary>
              Looks up a localized string similar to One of the Coupons in this order is missing its Coupon Code, and is invalid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_MultipleAccountCoupons">
            <summary>
              Looks up a localized string similar to Coupons from more than one loyalty card cannot be used in the same transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_MultipleGiftCardNotSupported">
            <summary>
              Looks up a localized string similar to More than one Gift Card was used to pay for the order. Only one Gift Card may be used per transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_NoRewardsCardPresented">
            <summary>
              Looks up a localized string similar to No Loyalty card was presented during the transaction. Reward redemption cannot be processed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_PinpadNotReadyToVoid">
            <summary>
              Looks up a localized string similar to The PINPad is not ready to process a void order. Please wait a moment and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_ResponseDescriptionAndCode">
            <summary>
              Looks up a localized string similar to {0}, Response Code: {1}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_RewardCardAsGiftCard">
            <summary>
              Looks up a localized string similar to A Loyalty Card can&apos;t be used as a Gift card and vice versa. .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_StandaloneAddValues">
            <summary>
              Looks up a localized string similar to An error occured while loading a Gift Card with cash..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_StandaloneGiftCard">
            <summary>
              Looks up a localized string similar to An error occured during processing the Gift Card payment..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_StandaloneProcessReward">
            <summary>
              Looks up a localized string similar to An error occured during processing the Loyalty Card..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_VoidIOUMissingVoidRefNum">
            <summary>
              Looks up a localized string similar to Can&apos;t process void for IOU transaction which is missing its void reference number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ThorlinkProcessor_Error_VoidReferenceNumberMissing">
            <summary>
              Looks up a localized string similar to Can&apos;t void a transaction which is missing its void reference number.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TransactorConfiguration_Title_ConnectionVerified">
            <summary>
              Looks up a localized string similar to Loyalty Server Connection Verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TransactorConfiguration_Title_ServerAuthenticationFailure">
            <summary>
              Looks up a localized string similar to Loyalty Server Authentication Failure.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.TransactorConfiguration_Title_ServerVerificationFailure">
            <summary>
              Looks up a localized string similar to Loyalty Server Verification Failure.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.UserCanceled">
            <summary>
              Looks up a localized string similar to The Cancel Button was pushed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Checking">
            <summary>
              Looks up a localized string similar to Checking.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Failed">
            <summary>
              Looks up a localized string similar to The device failed verification..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_NotYetVerified">
            <summary>
              Looks up a localized string similar to The device has not yet been verified..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Offline">
            <summary>
              Looks up a localized string similar to Offline.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Online">
            <summary>
              Looks up a localized string similar to Online.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_RemoteNameNotResolved">
            <summary>
              Looks up a localized string similar to The remote name could not be resolved.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Succeeded">
            <summary>
              Looks up a localized string similar to Succeeded.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Success">
            <summary>
              Looks up a localized string similar to The device has been successfully verified..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VerificationControl_Unknown">
            <summary>
              Looks up a localized string similar to Unknown.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VoidTest_ResultStateOrderSuccess">
            <summary>
              Looks up a localized string similar to Order success. Result State : .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VoidTest_ResultStateVoidSuccess">
            <summary>
              Looks up a localized string similar to Void success. Result State : .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Processor_Error_Declined">
            <summary>
              Looks up a localized string similar to Declined.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Processor_Error_ExceededMaxRequestSize">
            <summary>
              Looks up a localized string similar to There are too many items in the current transaction. Please split the transaction into at least two separate transactions and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Processor_Error_ModemNotAttachedToPort">
            <summary>
              Looks up a localized string similar to A modem does not appear to be attached to the configured port of [{0}].
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Request_Error_BuildUnknownXMLTypeRequest">
            <summary>
              Looks up a localized string similar to A request to build XML for an unknown request type [{0}] was made..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Response_Response_AccountNotFoundMultiple">
            <summary>
              Looks up a localized string similar to One or more of the Subway Cards (including Alternate IDs) used is not recognized. Please use a different card and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Response_Response_AltIDNotRecognized">
            <summary>
              Looks up a localized string similar to The Alternate ID used is not recognized.  Please use a different Alternate ID and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Response_Response_SubcardNotRecognized">
            <summary>
              Looks up a localized string similar to The Subway Card used is not recognized. Please use a different card and try again..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3Response_RewardsPaymentNotSupported">
            <summary>
              Looks up a localized string similar to Reward Redemption is not supported in your Store. Please item correct the reward discount..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VP3WebTransmit_Error_CantConnectHost">
            <summary>
              Looks up a localized string similar to Unable to connect to the &apos;server&apos; machine..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_CardRemovedRestartTxn">
            <summary>
              Looks up a localized string similar to Card was removed. Restart the transaction..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_Approved_UpperCase">
            <summary>
              Looks up a localized string similar to APPROVED.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_ChipRemoved">
             <summary>
               Looks up a localized string similar to **ABORTED**
            CARD REMOVED
            BEFORE END OF
            TRANSACTION.
             </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_Declined_UpperCase">
            <summary>
              Looks up a localized string similar to DECLINED.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_IdleScreen">
            <summary>
              Looks up a localized string similar to WELCOME.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_InsertTapSwipe">
            <summary>
              Looks up a localized string similar to Insert/Tap/Swipe.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_PinDeclined_UpperCase">
            <summary>
              Looks up a localized string similar to PIN DECLINED.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_Purchase">
            <summary>
              Looks up a localized string similar to Purchase....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_SwipeTap">
            <summary>
              Looks up a localized string similar to Swipe/Tap to Pay.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_Total">
            <summary>
              Looks up a localized string similar to Total:.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_UseSubwayApp">
            <summary>
              Looks up a localized string similar to Use Subway App!.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_Display_VoidPurchaseCorrection">
            <summary>
              Looks up a localized string similar to Purchase Corr....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_GettingMACData">
            <summary>
              Looks up a localized string similar to Getting Card MAC.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_NotReady">
            <summary>
              Looks up a localized string similar to Verifone VX820 is NOT ready for use.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_PinDeclined">
            <summary>
              Looks up a localized string similar to Customer PIN declined.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_RunDeviceSetup">
            <summary>
              Looks up a localized string similar to Please run Device Setup for your Vx820..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_CannotConnectVX820">
            <summary>
              Looks up a localized string similar to Cannot Connect to Vx820.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_CardDataReceived">
            <summary>
              Looks up a localized string similar to Card Data Received.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_ClosingVX820Comms">
            <summary>
              Looks up a localized string similar to Closing VX820 Comms.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_CommsOpen">
            <summary>
              Looks up a localized string similar to VX820 Comms Open.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_CompletingEMV">
            <summary>
              Looks up a localized string similar to Completing EMV Transaction.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_OpenVX820Comms">
            <summary>
              Looks up a localized string similar to Opening VX820 Comms.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_Processing">
            <summary>
              Looks up a localized string similar to Processing....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_ProcessingContactless">
            <summary>
              Looks up a localized string similar to Processing Contactless....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_VerifyingMAC">
            <summary>
              Looks up a localized string similar to Verifying MAC.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_WaitingForCardData">
            <summary>
              Looks up a localized string similar to Waiting for Card Swipe/Tap.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_WaitingForCustomerInput">
            <summary>
              Looks up a localized string similar to Waiting for Customer Input.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_WaitingForEMVCardData">
            <summary>
              Looks up a localized string similar to Waiting for Card Insert/Tap/Swipe.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_State_WaitingForManualCardData">
            <summary>
              Looks up a localized string similar to Waiting for Manual Card Entry.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820_SubwayCardRequiresSwipe">
            <summary>
              Looks up a localized string similar to Processing Subway Card requires Magstripe Swipe as acquire method..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820VerificationControl_BeginningVx820Setup">
            <summary>
              Looks up a localized string similar to Beginning Vx820 Setup.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820VerificationControl_Title">
            <summary>
              Looks up a localized string similar to Verifone VX820 has been verified.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.VX820VerificationControl_UpdatingYourVx820">
            <summary>
              Looks up a localized string similar to Updating your Vx820....
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_Bonus">
            <summary>
              Looks up a localized string similar to Bonus.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_BonusPoints">
            <summary>
              Looks up a localized string similar to Bonus Points.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_CardUse_Added">
            <summary>
              Looks up a localized string similar to Added.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_CardUse_Deducted">
            <summary>
              Looks up a localized string similar to Deducted.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_CardUseRedeemed">
            <summary>
              Looks up a localized string similar to Redeemed.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_CashCardBalanceLabel">
            <summary>
              Looks up a localized string similar to Cash Card Balance: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_Label_GiftCardBalance">
            <summary>
              Looks up a localized string similar to Gift Card Balance: .
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_Points">
            <summary>
              Looks up a localized string similar to Points.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.Wallet_RewardsBalance">
            <summary>
              Looks up a localized string similar to Rewards Balance: {0}.
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_00_NoError">
            <summary>
              Looks up a localized string similar to No error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_1_63_NetworkErrorCode">
            <summary>
              Looks up a localized string similar to Errorcodes from Network-operator system / Authorization system..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_64_CardNotReadable">
            <summary>
              Looks up a localized string similar to Card not readable. (LRC-/parity-error).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_65_MissingCardData">
            <summary>
              Looks up a localized string similar to Card data not present. (Neither track-data nor chip found).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_66_ProcessingError">
            <summary>
              Looks up a localized string similar to Processing-error. (Also for problems with card-reader mechanism).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_67_MaestroFunctionNotPermitted">
            <summary>
              Looks up a localized string similar to Function not permitted for ec- and Maestro-cards..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_68_CreditFunctionNotPermitted">
            <summary>
              Looks up a localized string similar to Function not permitted for credit- and tank-cards..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_6A_TurnoverFileFull">
            <summary>
              Looks up a localized string similar to Turnover-file full..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_6B_FunctionDeactivated">
            <summary>
              Looks up a localized string similar to Function deactivated. (PT not registered).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_6C_TimeoutAbort">
            <summary>
              Looks up a localized string similar to Abort via time-out or abort-key..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_6E_CardBlocked">
            <summary>
              Looks up a localized string similar to Card in blocked list. (Response to command 06 E4).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_6F_WrongCurrency">
            <summary>
              Looks up a localized string similar to Wrong currency..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_71_InsufficientCredit">
            <summary>
              Looks up a localized string similar to Credit not sufficient. (Chip-card).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_72_ChipError">
            <summary>
              Looks up a localized string similar to Chip error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_73_IncorrectCardData">
            <summary>
              Looks up a localized string similar to Card data incorrect. (e.g. country-key check, checksum-error).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_77_EODBatchFail">
            <summary>
              Looks up a localized string similar to End-of-day batch not possible..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_78_CardExpired">
            <summary>
              Looks up a localized string similar to Card expired..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_79_CardNotYetValid">
            <summary>
              Looks up a localized string similar to Card not yet valid..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_7A_CardUnknown">
            <summary>
              Looks up a localized string similar to Card unknown..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_7D_CommunicationError">
            <summary>
              Looks up a localized string similar to Communication error. (Communication module does not answer).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_83_FunctionNotPossible">
            <summary>
              Looks up a localized string similar to Function not possible..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_85_KeyMissing">
            <summary>
              Looks up a localized string similar to Key missing..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_89_PinpadDefective">
            <summary>
              Looks up a localized string similar to PIN-pad defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_9A_ProtocolError">
            <summary>
              Looks up a localized string similar to Protocol error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_9B_DialUpCommunicationError">
            <summary>
              Looks up a localized string similar to Error from dial-up / communication fault..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_9C_PleaseWait">
            <summary>
              Looks up a localized string similar to Please wait..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_A0_ReceiverNotReady">
            <summary>
              Looks up a localized string similar to Receiver not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_A1_RemoteStationUnresponsive">
            <summary>
              Looks up a localized string similar to Remote station does not respond..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_A3_NoConnection">
            <summary>
              Looks up a localized string similar to No connection..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_A4_GeldkarteSubmissionFail">
            <summary>
              Looks up a localized string similar to Submission of Geldkarte not possible..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B1_MemoryFull">
            <summary>
              Looks up a localized string similar to Memory full..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B2_MerchantJournalFull">
            <summary>
              Looks up a localized string similar to Merchant-Journal full..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B4_AlreadyReversed">
            <summary>
              Looks up a localized string similar to Already reversed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B5_ReversalNotPossible">
            <summary>
              Looks up a localized string similar to Reversal not possible..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B7_PreAuthorizationIncorrect">
            <summary>
              Looks up a localized string similar to Pre-authorization incorrect (Amount too high) or amount wrong..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_B8_PreAuthorizationError">
            <summary>
              Looks up a localized string similar to Error pre-authorization..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_BF_VoltageLow">
            <summary>
              Looks up a localized string similar to Voltage supply too low. (External power supply).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C0_CardLockDefective">
            <summary>
              Looks up a localized string similar to Card locking mechanism defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C1_MerchantCardLocked">
            <summary>
              Looks up a localized string similar to Merchant-card locked..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C2_DiagnosisRequired">
            <summary>
              Looks up a localized string similar to Diagnosis required..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C3_MaxAmountExceeded">
            <summary>
              Looks up a localized string similar to Maximum amount exceeded..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C4_CardProfileInvalid">
            <summary>
              Looks up a localized string similar to Card-profile invalid. New card-profiles must be loaded..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C5_UnsupportedPaymentMethod">
            <summary>
              Looks up a localized string similar to Payment method not supported..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C6_CurrencyNotApplicable">
            <summary>
              Looks up a localized string similar to Currency not applicable..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C8_AmountTooSmall">
            <summary>
              Looks up a localized string similar to Amount too small..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_C9_MaxAmountTooSmall">
            <summary>
              Looks up a localized string similar to Maximum transaction amount too small..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_CB_EuroFunctionOnly">
            <summary>
              Looks up a localized string similar to Function only allowed in EURO..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_CC_PrinterNotReady">
            <summary>
              Looks up a localized string similar to Printer not ready..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_D2_ServiceCardFunctionNotPermitted">
            <summary>
              Looks up a localized string similar to Function not permitted for service cards / bank customer cards..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_DC_CardInserted">
            <summary>
              Looks up a localized string similar to Card inserted..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_DD_CardEjectError">
            <summary>
              Looks up a localized string similar to Error during card-eject. (For motor-insertion reader).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_DE_CardInsertionError">
            <summary>
              Looks up a localized string similar to Error during card-insertion. (For motor-insertion reader).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E0_RemoteMaintenanceActivated">
            <summary>
              Looks up a localized string similar to Remote-maintenance activated..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E2_CardReaderUnresponsive">
            <summary>
              Looks up a localized string similar to Card reader does not answer. / Card reader defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E3_ShutterClosed">
            <summary>
              Looks up a localized string similar to Shutter closed..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E7_GoodsGroupNotFound">
            <summary>
              Looks up a localized string similar to Min. one goods-group not found..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E8_GoodGroupsNotLoaded">
            <summary>
              Looks up a localized string similar to No good-groups table loaded..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_E9_RestrictionCodeNotPermitted">
            <summary>
              Looks up a localized string similar to Restriction-code not permitted..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_EA_CardCodeNotPermitted">
            <summary>
              Looks up a localized string similar to Card-code not permitted. (e.g. card not activated via Diagnosis).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_EB_FunctionNotExecutable">
            <summary>
              Looks up a localized string similar to Function not executable. (PIN-algorithm unknown).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_EC_PinProcessingNotPossible">
            <summary>
              Looks up a localized string similar to PIN-processing not possible..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_ED_PinpadDefective">
            <summary>
              Looks up a localized string similar to PIN-pad defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_F0_OpenEODBatchPresent">
            <summary>
              Looks up a localized string similar to Open end-of-day batch present..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_F1_MaestroOfflineError">
            <summary>
              Looks up a localized string similar to ec-cash/Maestro offline error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_F5_OPTError">
            <summary>
              Looks up a localized string similar to OPT-error..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_F6_OPTDataNotAvailable">
            <summary>
              Looks up a localized string similar to OPT-data not available. (= OPT personalization required).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FA_OfflineTransactionError">
            <summary>
              Looks up a localized string similar to Error transmitting offline transactions. (Clearing error).
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FB_TurnoverDatasetDefective">
            <summary>
              Looks up a localized string similar to Turnover data-set defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FC_DeviceNotPresent">
            <summary>
              Looks up a localized string similar to Necessary device not present or defective..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FD_UnsupportedBaudrate">
            <summary>
              Looks up a localized string similar to Baudrate not supported..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FE_RegisterUnknown">
            <summary>
              Looks up a localized string similar to Register unknown..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_FF_SystemError">
            <summary>
              Looks up a localized string similar to System error (= other/unknown error), See TLVtags 1F16 and 1F17..
            </summary>
        </member>
        <member name="P:SPM.Resources.Strings.ZVTResponse_Unknown">
            <summary>
              Looks up a localized string similar to Unrecognized status..
            </summary>
        </member>
        <member name="T:SPM.Resources.StringsHelper">
            <summary>
            Contains utility methods relating to the Strings resource files.
            </summary>
        </member>
        <member name="M:SPM.Resources.StringsHelper.GetStringInSpecificCulture(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="stringName">The name of the string in the Strings file.</param>
            <param name="languageCultureCode">The Language Culture code, as defined in ISO-639-1 and/or "Language Culture Name" in https://msdn.microsoft.com/en-ca/library/ee825488(v=cs.20).aspx </param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.ApplicationInfo">
            <summary>
            This class provides information about the running application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.ProductName">
            <summary>
            Gets the product name of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.ProductTitle">
            <summary>
            Gets the product title of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.ProductDescription">
            <summary>
            Gets the product title of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.Location">
            <summary>
             Gets the full location, the path to the folder and the name, of the assembly.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.ParentFolder">
            <summary>
             Gets the folder in which the assembly exists.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.Version">
            <summary>
            Gets the version number of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.Company">
            <summary>
            Gets the company of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.ApplicationInfo.Copyright">
            <summary>
            Gets the copyright information of the application.
            </summary>
        </member>
        <member name="T:SPM.Utilities.AssemblyInformation">
            <summary>
             A class to provide information regarding an assembly
            </summary>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.#ctor(System.Reflection.Assembly)">
            <summary>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.#ctor(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.AssemblyAttribs(System.Reflection.Assembly)">
             <summary>
             returns string name / string value pair of all attribs
             for specified assembly
             </summary>
             <remarks>
            
             Trademark       = AssemblyTrademark string
             Debuggable      = True
             GUID            = 7FDF68D5-8C6F-44C9-B391-117B5AFB5467
             CLSCompliant    = True
             Product         = AssemblyProduct string
             Copyright       = AssemblyCopyright string
             Company         = AssemblyCompany string
             Description     = AssemblyDescription string
             Title           = AssemblyTitle string
             </remarks>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.AssemblyBuildDate(System.Reflection.Assembly,System.Boolean)">
            <summary>
            Returns DateTime this Assembly was last built. Will attempt to calculate from build number, if possible.
            If not, the actual LastWriteTime on the assembly file will be returned.
            </summary>
            <param name="a">Assembly to get build date for</param>
            <param name="forceFileDate">Don't attempt to use the build number to calculate the date</param>
            <returns>DateTime this assembly was last built</returns>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.AssemblyLastWriteTime(System.Reflection.Assembly)">
            <summary>
            exception-safe retrieval of LastWriteTime for this assembly.
            </summary>
            <returns>File.GetLastWriteTime, or DateTime.MaxValue if exception was encountered.</returns>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.AssemblyLocation">
            <summary>
            Gets the full path of the assembly, including filename.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Folder">
            <summary>
            Gets the assembly folder.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Name">
            <summary>
             Gets the name of the assembly file.
            </summary>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.FileVersionInfo">
            <summary>
            Gets the file version info.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.BuildDate">
            <summary>
            Gets the build date.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Company">
            <summary>
            Gets the company.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Copyright">
            <summary>
            Gets the copyright.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.GuidString">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Registration">
             <summary>
            
             </summary>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.ProductDescription">
            <summary>
            Gets the product description.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.ProductName">
            <summary>
            Gets the name of the product.
            </summary>
            <value>The name of the product.</value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.ProductTitle">
            <summary>
            Gets the product title.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.AssemblyInformation.Version">
            <summary>
            Gets the version.
            </summary>
            <value></value>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.ToString">
            <summary>
            Productname-ProductTitle;Location;Version.
            </summary>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.LogMe">
             <summary>
            
             </summary>
        </member>
        <member name="M:SPM.Utilities.AssemblyInformation.LogMe(System.String)">
             <summary>
            
             </summary>
             <param name="title"></param>
        </member>
        <member name="T:SPM.Utilities.AssemblyResolver">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat">
            <summary> Enumerates barcode formats known to this package.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.QR_CODE">
            <summary>QR Code 2D barcode format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.DATAMATRIX">
            <summary>DataMatrix 2D barcode format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.UPC_E">
            <summary>UPC-E 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.UPC_A">
            <summary>UPC-A 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.EAN_8">
            <summary>EAN-8 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.EAN_13">
            <summary>EAN-13 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.CODE_128">
            <summary>Code 128 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.CODE_39">
            <summary>Code 39 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.ITF">
            <summary>ITF (Interleaved Two of Five) 1D format. </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.PDF417">
            <summary>PDF417 format. </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat.valueOf(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.Binarizer">
            <summary> This class hierarchy provides a set of methods to convert luminance data to 1 bit data.
            It allows the algorithm to vary polymorphically, for example allowing a very expensive
            thresholding technique for servers and a fast one for mobile. It also permits the implementation
            to vary, e.g. a JNI version for Android and a Java fallback version for other platforms.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Binarizer.LuminanceSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Binarizer.BlackMatrix">
            <summary> Converts a 2D array of luminance data to 1 bit data. As above, assume this method is expensive
            and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or
            may not apply sharpening. Therefore, a row from this matrix may not be identical to one
            fetched using getBlackRow(), so don't mix and match between them.
            
            </summary>
            <returns> The 2D array of bits for the image (true means black).
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Binarizer.#ctor(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Binarizer.getBlackRow(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.BitArray)">
            <summary> Converts one row of luminance data to 1 bit data. May actually do the conversion, or return
            cached data. Callers should assume this method is expensive and call it as seldom as possible.
            This method is intended for decoding 1D barcodes and may choose to apply sharpening.
            For callers which only examine one row of pixels at a time, the same BitArray should be reused
            and passed in with each call for performance. However it is legal to keep more than one row
            at a time if needed.
            
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt;bitmap height.
            </param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            If used, the Binarizer will call BitArray.clear(). Always use the returned object.
            </param>
            <returns> The array of bits for this row (true means black).
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Binarizer.createBinarizer(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary> Creates a new object with the same type as this Binarizer implementation, but with pristine
            state. This is needed because Binarizer implementations may be stateful, e.g. keeping a cache
            of 1 bit data. See Effective Java for why we can't use Java's clone() method.
            
            </summary>
            <param name="source">The LuminanceSource this Binarizer will operate on.
            </param>
            <returns> A new concrete Binarizer implementation object.
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap">
            <summary> This class is the core bitmap class used by ZXing to represent 1 bit data. Reader objects
            accept a BinaryBitmap and attempt to decode it.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.Width">
            <returns> The width of the bitmap.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.Height">
            <returns> The height of the bitmap.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.BlackMatrix">
            <summary> Converts a 2D array of luminance data to 1 bit. As above, assume this method is expensive
            and do not call it repeatedly. This method is intended for decoding 2D barcodes and may or
            may not apply sharpening. Therefore, a row from this matrix may not be identical to one
            fetched using getBlackRow(), so don't mix and match between them.
            
            </summary>
            <returns> The 2D array of bits for the image (true means black).
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.CropSupported">
            <returns> Whether this bitmap can be cropped.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.RotateSupported">
            <returns> Whether this bitmap supports counter-clockwise rotation.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.#ctor(SPM.Utilities.Barcode.com.google.zxing.Binarizer)">
            <summary>
            
            </summary>
            <param name="binarizer"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.getBlackRow(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.BitArray)">
            <summary> Converts one row of luminance data to 1 bit data. May actually do the conversion, or return
            cached data. Callers should assume this method is expensive and call it as seldom as possible.
            This method is intended for decoding 1D barcodes and may choose to apply sharpening.
            
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; bitmap height.
            </param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            If used, the Binarizer will call BitArray.clear(). Always use the returned object.
            </param>
            <returns> The array of bits for this row (true means black).
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Returns a new object with cropped image data. Implementations may keep a reference to the
            original data rather than a copy. Only callable if isCropSupported() is true.
            
            </summary>
            <param name="left">The left coordinate, 0 &lt;= left &lt; getWidth().
            </param>
            <param name="top">The top coordinate, 0 &lt;= top &lt;= getHeight().
            </param>
            <param name="width">The width of the rectangle to crop.
            </param>
            <param name="height">The height of the rectangle to crop.
            </param>
            <returns> A cropped version of this object.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap.rotateCounterClockwise">
            <summary> Returns a new object with rotated image data. Only callable if isRotateSupported() is true.
            
            </summary>
            <returns> A rotated version of this object.
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.BitArray">
            <summary> <p>A simple, fast array of bits, represented compactly by an array of ints internally.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.bits">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.size">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.get_Renamed(System.Int32)">
            <param name="i">bit to get
            </param>
            <returns> true iff bit i is set
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.set_Renamed(System.Int32)">
            <summary> Sets bit i.
            
            </summary>
            <param name="i">bit to set
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.flip(System.Int32)">
            <summary> Flips bit i.
            
            </summary>
            <param name="i">bit to set
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.setBulk(System.Int32,System.Int32)">
            <summary> Sets a block of 32 bits, starting at bit i.
            
            </summary>
            <param name="i">first bit to set
            </param>
            <param name="newBits">the new value of the next 32 bits. Note again that the least-significant bit
            corresponds to bit i, the next-least-significant to i+1, and so on.
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.isRange(System.Int32,System.Int32,System.Boolean)">
            <summary> Efficient method to check if a range of bits is set, or not set.
            
            </summary>
            <param name="start">start of range, inclusive.
            </param>
            <param name="end">end of range, exclusive
            </param>
            <param name="value_Renamed"></param>
            <returns> true iff all bits are set or not set in range, according to value argument
            </returns>
            <throws>  IllegalArgumentException if end is less than or equal to start </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.getBitArray">
            <returns> underlying array of ints. The first element holds the first 32 bits, and the least
            significant bit is bit 0.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.reverse">
            <summary> Reverses all bits in the array.</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitArray.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix">
            <summary> <p>Represents a 2D matrix of bits. In function arguments below, and throughout the common
            module, x is the column position, and y is the row position. The ordering is always x, y.
            The origin is at the top-left.</p>
            
            <p>Internally the bits are represented in a 1-D array of 32-bit ints. However, each row begins
            with a new int. This is done intentionally so that we can copy out a row into a BitArray very
            efficiently.</p>
            
            <p>The ordering of bits is row-major. Within each int, the least significant bits are used first,
            meaning they represent lower x values. This is compatible with BitArray's implementation.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.Width">
            <returns> The width of the matrix
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.Height">
            <returns> The height of the matrix
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.Dimension">
            <summary> This method is for compatibility with older code. It's only logical to call if the matrix
            is square, so I'm throwing if that's not the case.
            
            </summary>
            <returns> row/column dimension of this matrix
            </returns>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.width">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.height">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.rowSize">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.bits">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="dimension"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.get_Renamed(System.Int32,System.Int32)">
            <summary> <p>Gets the requested bit, where true means black.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
            <returns> value of given bit in matrix
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.set_Renamed(System.Int32,System.Int32)">
            <summary> <p>Sets the given bit to true.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.flip(System.Int32,System.Int32)">
            <summary> <p>Flips the given bit.</p>
            
            </summary>
            <param name="x">The horizontal component (i.e. which column)
            </param>
            <param name="y">The vertical component (i.e. which row)
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.clear">
            <summary> Clears all bits (sets to false).</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.setRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Sets a square region of the bit matrix to true.</p>
            
            </summary>
            <param name="left">The horizontal position to begin at (inclusive)
            </param>
            <param name="top">The vertical position to begin at (inclusive)
            </param>
            <param name="width">The width of the region
            </param>
            <param name="height">The height of the region
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.getRow(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.BitArray)">
            <summary> A fast method to retrieve one row of data from the matrix as a BitArray.
            
            </summary>
            <param name="y">The row to retrieve
            </param>
            <param name="row">An optional caller-allocated BitArray, will be allocated if null or too small
            </param>
            <returns> The resulting BitArray - this reference should always be used even when passing
            your own row
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.BitSource">
            <summary> <p>This provides an easy abstraction to read bits at a time from a sequence of bytes, where the
            number of bits read is not often a multiple of 8.</p>
            
            <p>This class is thread-safe but not reentrant. Unless the caller modifies the bytes array
            it passed in, in which case all bets are off.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitSource.#ctor(System.SByte[])">
            <param name="bytes">bytes from which this will read bits. Bits will be read from the first byte first.
            Bits are read within a byte from most-significant to least-significant bit.
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitSource.readBits(System.Int32)">
            <param name="numBits">number of bits to read
            </param>
            <returns> int representing the bits read. The bits will appear as the least-significant
            bits of the int
            </returns>
            <throws>  IllegalArgumentException if numBits isn't in [1,32] </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.BitSource.available">
            <returns> number of bits that can be read successfully
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray">
            <summary> This class implements an array of unsigned bytes.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="size"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.#ctor(System.SByte[])">
            <summary>
            
            </summary>
            <param name="byteArray"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.at(System.Int32)">
            <summary> Access an unsigned byte at location index.</summary>
            <param name="index">The index in the array to access.
            </param>
            <returns> The unsigned value of the byte as an int.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.set_Renamed(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.size">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.appendByte(System.Int32)">
            <summary>
            
            </summary>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.reserve(System.Int32)">
            <summary>
            
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteArray.set_Renamed(System.SByte[],System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="offset"></param>
            <param name="count"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix">
            <summary> A class which wraps a 2D array of bytes. The default usage is signed. If you want to use it as a
            unsigned container, it's up to you to do byteValue &amp; 0xff at each location.
            
            JAVAPORT: The original code was a 2D array of ints, but since it only ever gets assigned
            -1, 0, and 1, I'm going to use less memory and go with bytes.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.Array">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.get_Renamed(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.set_Renamed(System.Int32,System.Int32,System.SByte)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.set_Renamed(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.clear(System.SByte)">
            <summary>
            
            </summary>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix.ToBitmap">
            <summary>
            Converts this ByteMatrix to a black and white bitmap.
            </summary>
            <returns>A black and white bitmap converted from this ByteMatrix.</returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.CharacterSetECI">
            <summary> Encapsulates a Character Set ECI, according to "Extended Channel Interpretations" 5.3.1.1
            of ISO 18004.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.CharacterSetECI.EncodingName">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.CharacterSetECI.getCharacterSetECIByValue(System.Int32)">
            <returns> {@link CharacterSetECI} representing ECI of given value, or null if it is legal but
            unsupported
            </returns>
            <throws>  IllegalArgumentException if ECI value is invalid </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.CharacterSetECI.getCharacterSetECIByName(System.String)">
            <param name="name">character set ECI encoding name
            </param>
            <returns> {@link CharacterSetECI} representing ECI for character encoding, or null if it is legal
            but unsupported
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.Collections">
            <summary> <p>This is basically a substitute for <code>java.util.Collections</code>, which is not
            present in MIDP 2.0 / CLDC 1.1.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.Collections.insertionSort(System.Collections.ArrayList,SPM.Utilities.Barcode.com.google.zxing.common.Comparator)">
            <summary> Sorts its argument (destructively) using insert sort; in the context of this package
            insertion sort is simple and efficient given its relatively small inputs.
            
            </summary>
            <param name="vector">vector to sort
            </param>
            <param name="comparator">comparator to define sort ordering
            </param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.Comparator">
            <summary> This is merely a clone of <code>Comparator</code> since it is not available in
            CLDC 1.1 / MIDP 2.0.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.Comparator.compare(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="o1"></param>
            <param name="o2"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult">
            <summary> <p>Encapsulates the result of decoding a matrix of bits. This typically
            applies to 2D barcode formats. For now it contains the raw bytes obtained,
            as well as a String interpretation of those bytes, if applicable.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult.RawBytes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult.Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult.ByteSegments">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult.ECLevel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.DecoderResult.#ctor(System.SByte[],System.String,System.Collections.ArrayList,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)">
            <summary>
            
            </summary>
            <param name="rawBytes"></param>
            <param name="text"></param>
            <param name="byteSegments"></param>
            <param name="ecLevel"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.DefaultGridSampler">
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.DefaultGridSampler.sampleGrid(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="dimension"></param>
            <param name="p1ToX"></param>
            <param name="p1ToY"></param>
            <param name="p2ToX"></param>
            <param name="p2ToY"></param>
            <param name="p3ToX"></param>
            <param name="p3ToY"></param>
            <param name="p4ToX"></param>
            <param name="p4ToY"></param>
            <param name="p1FromX"></param>
            <param name="p1FromY"></param>
            <param name="p2FromX"></param>
            <param name="p2FromY"></param>
            <param name="p3FromX"></param>
            <param name="p3FromY"></param>
            <param name="p4FromX"></param>
            <param name="p4FromY"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.DefaultGridSampler.sampleGrid(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="dimension"></param>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.DetectorResult">
            <summary> <p>Encapsulates the result of detecting a barcode in an image. This includes the raw
            matrix of black/white pixels corresponding to the barcode, and possibly points of interest
            in the image, like the location of finder patterns or corners of the barcode in the image.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DetectorResult.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.DetectorResult.Points">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.DetectorResult.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,SPM.Utilities.Barcode.com.google.zxing.ResultPoint[])">
            <summary>
            
            </summary>
            <param name="bits"></param>
            <param name="points"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.ECI">
            <summary> Superclass of classes encapsulating types ECIs, according to "Extended Channel Interpretations"
            5.3 of ISO 18004.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.ECI.Value">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.ECI.getECIByValue(System.Int32)">
            <returns> {@link ECI} representing ECI of given value, or null if it is legal but unsupported
            </returns>
            <throws>  IllegalArgumentException if ECI value is invalid </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.GlobalHistogramBinarizer">
            <summary> This Binarizer implementation uses the old ZXing global histogram approach. It is suitable
            for low-end mobile devices which don't have enough CPU or memory to use a local thresholding
            algorithm. However, because it picks a global black point, it cannot handle difficult shadows
            and gradients.
            
            Faster mobile devices and all desktop applications should probably use HybridBinarizer instead.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.GlobalHistogramBinarizer.BlackMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GlobalHistogramBinarizer.#ctor(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GlobalHistogramBinarizer.getBlackRow(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.BitArray)">
            <summary>
            
            </summary>
            <param name="y"></param>
            <param name="row"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GlobalHistogramBinarizer.createBinarizer(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler">
            <summary> Implementations of this class can, given locations of finder patterns for a QR code in an
            image, sample the right points in the image to reconstruct the QR code, accounting for
            perspective distortion. It is abstracted since it is relatively expensive and should be allowed
            to take advantage of platform-specific optimized implementations, like Sun's Java Advanced
            Imaging library, but which may not be available in other environments such as J2ME, and vice
            versa.
            
            The implementation used can be controlled by calling {@link #setGridSampler(GridSampler)}
            with an instance of a class which implements this interface.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler.Instance">
            <returns> the current implementation of {@link GridSampler}
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler.setGridSampler(SPM.Utilities.Barcode.com.google.zxing.common.GridSampler)">
            <summary> Sets the implementation of {@link GridSampler} used by the library. One global
            instance is stored, which may sound problematic. But, the implementation provided
            ought to be appropriate for the entire platform, and all uses of this library
            in the whole lifetime of the JVM. For instance, an Android activity can swap in
            an implementation that takes advantage of native platform libraries.
            
            </summary>
            <param name="newGridSampler">The platform-specific object to install.
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler.sampleGrid(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary> <p>Samples an image for a square matrix of bits of the given dimension. This is used to extract
            the black/white modules of a 2D barcode like a QR Code found in an image. Because this barcode
            may be rotated or perspective-distorted, the caller supplies four points in the source image
            that define known points in the barcode, so that the image may be sampled appropriately.</p>
            
            <p>The last eight "from" parameters are four X/Y coordinate pairs of locations of points in
            the image that define some significant points in the image to be sample. For example,
            these may be the location of finder pattern in a QR Code.</p>
            
            <p>The first eight "to" parameters are four X/Y coordinate pairs measured in the destination
            {@link BitMatrix}, from the top left, where the known points in the image given by the "from"
            parameters map to.</p>
            
            <p>These 16 parameters define the transformation needed to sample the image.</p>
            
            </summary>
            <param name="image">image to sample
            </param>
            <param name="dimension">width/height of {@link BitMatrix} to sample from image
            </param>
            <returns> {@link BitMatrix} representing a grid of points sampled from the image within a region
            defined by the "from" parameters
            </returns>
            <throws>  ReaderException if image can't be sampled, for example, if the transformation defined </throws>
            <summary>   by the given points is invalid or results in sampling outside the image boundaries
            </summary>
            <param name="p1FromX"></param>
            <param name="p1FromY"></param>
            <param name="p1ToX"></param>
            <param name="p1ToY"></param>
            <param name="p2FromX"></param>
            <param name="p2FromY"></param>
            <param name="p2ToX"></param>
            <param name="p2ToY"></param>
            <param name="p3FromX"></param>
            <param name="p3FromY"></param>
            <param name="p3ToX"></param>
            <param name="p3ToY"></param>
            <param name="p4FromX"></param>
            <param name="p4FromY"></param>
            <param name="p4ToX"></param>
            <param name="p4ToY"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler.sampleGrid(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="dimension"></param>
            <param name="transform"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.GridSampler.checkAndNudgePoints(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Single[])">
            <summary> <p>Checks a set of points that have been transformed to sample points on an image against
            the image's dimensions to see if the point are even within the image.</p>
            
            <p>This method will actually "nudge" the endpoints back onto the image if they are found to be
            barely (less than 1 pixel) off the image. This accounts for imperfect detection of finder
            patterns in an image where the QR Code runs all the way to the image border.</p>
            
            <p>For efficiency, the method will check points from either end of the line until one is found
            to be within the image. Because the set of points are assumed to be linear, this is valid.</p>
            
            </summary>
            <param name="image">image into which the points should map
            </param>
            <param name="points">actual points in x1,y1,...,xn,yn form
            </param>
            <throws>  ReaderException if an endpoint is lies outside the image boundaries </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.HybridBinarizer">
            <summary> This class implements a local thresholding algorithm, which while slower than the
            GlobalHistogramBinarizer, is fairly efficient for what it does. It is designed for
            high frequency images of barcodes with black data on white backgrounds. For this application,
            it does a much better job than a global blackpoint with severe shadows and gradients.
            However it tends to produce artifacts on lower frequency images and is therefore not
            a good general purpose binarizer for uses outside ZXing.
            
            This class extends GlobalHistogramBinarizer, using the older histogram approach for 1D readers,
            and the newer local approach for 2D readers. 1D decoding using a per-row histogram is already
            inherently local, and only fails for horizontal gradients. We can revisit that problem later,
            but for now it was not a win to use local blocks for 1D.
            
            This Binarizer is the default for the unit tests and the recommended class for library users.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.HybridBinarizer.BlackMatrix">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.HybridBinarizer.#ctor(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary>
            
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.HybridBinarizer.createBinarizer(SPM.Utilities.Barcode.com.google.zxing.LuminanceSource)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform">
            <summary> <p>This class implements a perspective transform in two dimensions. Given four source and four
            destination points, it will compute the transformation implied between them. The code is based
            directly upon section 3.4.2 of George Wolberg's "Digital Image Warping"; see pages 54-56.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.quadrilateralToQuadrilateral(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <param name="x0p"></param>
            <param name="y0p"></param>
            <param name="x1p"></param>
            <param name="y1p"></param>
            <param name="x2p"></param>
            <param name="y2p"></param>
            <param name="x3p"></param>
            <param name="y3p"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.transformPoints(System.Single[])">
            <summary>
            
            </summary>
            <param name="points"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.transformPoints(System.Single[],System.Single[])">
            <summary>
            
            </summary>
            <param name="xValues"></param>
            <param name="yValues"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.squareToQuadrilateral(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.quadrilateralToSquare(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.buildAdjoint">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform.times(SPM.Utilities.Barcode.com.google.zxing.common.PerspectiveTransform)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256">
            <summary> <p>This class contains utility methods for performing mathematical operations over
            the Galois Field GF(256). Operations use a given primitive polynomial in calculations.</p>
            
            <p>Throughout this package, elements of GF(256) are represented as an <code>int</code>
            for convenience and speed (but at the cost of memory).
            Only the bottom 8 bits are really used.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.QR_CODE_FIELD">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.DATA_MATRIX_FIELD">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.#ctor(System.Int32)">
            <summary> Create a representation of GF(256) using the given primitive polynomial.
            
            </summary>
            <param name="primitive">irreducible polynomial whose coefficients are represented by
            the bits of an int, where the least-significant bit represents the constant
            coefficient
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.buildMonomial(System.Int32,System.Int32)">
            <returns> the monomial representing coefficient * x^degree
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.addOrSubtract(System.Int32,System.Int32)">
            <summary> Implements both addition and subtraction -- they are the same in GF(256).
            
            </summary>
            <returns> sum/difference of a and b
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.exp(System.Int32)">
            <returns> 2 to the power of a in GF(256)
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.log(System.Int32)">
            <returns> base 2 log of a in GF(256)
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.inverse(System.Int32)">
            <returns> multiplicative inverse of a
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256.multiply(System.Int32,System.Int32)">
            <param name="a">
            </param>
            <param name="b">
            </param>
            <returns> product of a and b in GF(256)
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly">
            <summary> <p>Represents a polynomial whose coefficients are elements of GF(256).
            Instances of this class are immutable.</p>
            
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly.Degree">
            <returns> degree of this polynomial
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly.Zero">
            <returns> true iff this polynomial is the monomial "0"
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256,System.Int32[])">
            <param name="field">the {@link GF256} instance representing the field to use
            to perform computations
            </param>
            <param name="coefficients">coefficients as ints representing elements of GF(256), arranged
            from most significant (highest-power term) coefficient to least significant
            </param>
            <throws>  IllegalArgumentException if argument is null or empty, </throws>
            <summary> or if leading coefficient is 0 and this is not a
            constant polynomial (that is, it is not the monomial "0")
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly.getCoefficient(System.Int32)">
            <returns> coefficient of x^degree term in this polynomial
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256Poly.evaluateAt(System.Int32)">
            <returns> evaluation of this polynomial at a given point
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonDecoder">
            <summary> <p>Implements Reed-Solomon decoding, as the name implies.</p>
            
            <p>The algorithm will not be explained here, but the following references were helpful
            in creating this implementation:</p>
            
            <ul>
            <li>Bruce Maggs.
            <a href="http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps">
            "Decoding Reed-Solomon Codes"</a> (see discussion of Forney's Formula)</li>
            <li>J.I. Hall. <a href="www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf">
            "Chapter 5. Generalized Reed-Solomon Codes"</a>
            (see discussion of Euclidean algorithm)</li>
            </ul>
            
            <p>Much credit is due to William Rucklidge since portions of this code are an indirect
            port of his C++ Reed-Solomon implementation.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  William Rucklidge
            </author>
            <author>  sanfordsquires
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonDecoder.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonDecoder.decode(System.Int32[],System.Int32)">
            <summary> <p>Decodes given set of received codewords, which include both data and error-correction
            codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,
            in the input.</p>
            
            </summary>
            <param name="received">data and error-correction codewords
            </param>
            <param name="twoS">number of error-correction codewords available
            </param>
            <throws>  ReedSolomonException if decoding fails for any reason </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonEncoder">
            <summary> <p>Implements Reed-Solomon enbcoding, as the name implies.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  William Rucklidge
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonEncoder.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.GF256)">
            <summary>
            
            </summary>
            <param name="field"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonEncoder.encode(System.Int32[],System.Int32)">
            <summary>
            
            </summary>
            <param name="toEncode"></param>
            <param name="ecBytes"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonException">
            <summary> <p>Thrown when an exception occurs during Reed-Solomon decoding, such as when
            there are too many errors to correct.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.common.reedsolomon.ReedSolomonException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType">
            <summary> Encapsulates a type of hint that a caller may pass to a barcode reader to help it
            more quickly or accurately decode it. It is up to implementations to decide what,
            if anything, to do with the information that is supplied.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.OTHER">
            <summary> Unspecified, application-specific hint. Maps to an unspecified {@link Object}.</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.PURE_BARCODE">
            <summary> Image is a pure monochrome image of a barcode. Doesn't matter what it maps to;
            use {@link Boolean#TRUE}.
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.POSSIBLE_FORMATS">
            <summary> Image is known to be of one of a few possible formats.
            Maps to a {@link java.util.Vector} of {@link BarcodeFormat}s.
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.TRY_HARDER">
            <summary> Spend more time to try to find a barcode; optimize for accuracy, not speed.
            Doesn't matter what it maps to; use {@link Boolean#TRUE}.
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.ALLOWED_LENGTHS">
            <summary> Allowed lengths of encoded data -- reject anything else. Maps to an int[].</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.ASSUME_CODE_39_CHECK_DIGIT">
            <summary> Assume Code 39 codes employ a check digit. Maps to {@link Boolean}.</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.NEED_RESULT_POINT_CALLBACK">
            <summary> The caller needs to be notified via callback when a possible {@link ResultPoint}
            is found. Maps to a {@link ResultPointCallback}.
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.EncodeHintType">
            <summary> These are a set of hints that you may pass to Writers to specify their behavior.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.EncodeHintType.ERROR_CORRECTION">
            <summary> Specifies what degree of error correction to use, for example in QR Codes (type Integer).</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.EncodeHintType.CHARACTER_SET">
            <summary> Specifies what character encoding to use where applicable (type String)</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource">
            <summary> The purpose of this class hierarchy is to abstract different bitmap implementations across
            platforms into a standard interface for requesting greyscale luminance values. The interface
            only provides immutable methods; therefore crop and rotation create copies. This is to ensure
            that one Reader does not modify the original luminance source and leave it in an unknown state
            for other Readers in the chain.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.Matrix">
            <summary> Fetches luminance data for the underlying bitmap. Values should be fetched using:
            int luminance = array[y * width + x] &amp; 0xff;
            
            </summary>
            <returns> A row-major 2D array of luminance values. Do not use result.length as it may be
            larger than width * height bytes on some platforms. Do not modify the contents
            of the result.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.Width">
            <returns> The width of the bitmap.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.Height">
            <returns> The height of the bitmap.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.CropSupported">
            <returns> Whether this subclass supports cropping.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.RotateSupported">
            <returns> Whether this subclass supports counter-clockwise rotation.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.getRow(System.Int32,System.SByte[])">
            <summary> Fetches one row of luminance data from the underlying platform's bitmap. Values range from
            0 (black) to 255 (white). Because Java does not have an unsigned byte type, callers will have
            to bitwise and with 0xff for each value. It is preferable for implementations of this method
            to only fetch this row rather than the whole image, since no 2D Readers may be installed and
            getMatrix() may never be called.
            
            </summary>
            <param name="y">The row to fetch, 0 &lt;= y &lt; getHeight().
            </param>
            <param name="row">An optional preallocated array. If null or too small, it will be ignored.
            Always use the returned object, and ignore the .length of the array.
            </param>
            <returns> An array containing the luminance data.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.crop(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> Returns a new object with cropped image data. Implementations may keep a reference to the
            original data rather than a copy. Only callable if isCropSupported() is true.
            
            </summary>
            <param name="left">The left coordinate, 0 &lt;= left &lt; getWidth().
            </param>
            <param name="top">The top coordinate, 0 &lt;= top &lt;= getHeight().
            </param>
            <param name="width">The width of the rectangle to crop.
            </param>
            <param name="height">The height of the rectangle to crop.
            </param>
            <returns> A cropped version of this object.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.LuminanceSource.rotateCounterClockwise">
            <summary> Returns a new object with rotated image data. Only callable if isRotateSupported() is true.
            
            </summary>
            <returns> A rotated version of this object.
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.BitMatrixParser">
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.BitMatrixParser.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix)">
            <param name="bitMatrix">{@link BitMatrix} to parse
            </param>
            <throws>  ReaderException if dimension is not >= 21 and 1 mod 4 </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.BitMatrixParser.readFormatInformation">
            <summary> <p>Reads format information from one of its two locations within the QR Code.</p>
            
            </summary>
            <returns> {@link FormatInformation} encapsulating the QR Code's format info
            </returns>
            <throws>  ReaderException if both format information locations cannot be parsed as </throws>
            <summary> the valid encoding of format information
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.BitMatrixParser.readVersion">
            <summary> <p>Reads version information from one of its two locations within the QR Code.</p>
            
            </summary>
            <returns> {@link Version} encapsulating the QR Code's version
            </returns>
            <throws>  ReaderException if both version information locations cannot be parsed as </throws>
            <summary> the valid encoding of version information
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.BitMatrixParser.readCodewords">
            <summary> <p>Reads the bits in the {@link BitMatrix} representing the finder pattern in the
            correct order in order to reconstitute the codewords bytes contained within the
            QR Code.</p>
            
            </summary>
            <returns> bytes encoded within the QR Code
            </returns>
            <throws>  ReaderException if the exact number of bytes expected is not read </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataBlock">
            <summary> <p>Encapsulates a block of data within a QR Code. QR Codes may split their data into
            multiple blocks, each of which is a unit of data and error-correction codewords. Each
            is represented by an instance of this class.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataBlock.getDataBlocks(System.SByte[],SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)">
            <summary> <p>When QR Codes use multiple data blocks, they are actually interleaved.
            That is, the first byte of data block 1 to n is written, then the second bytes, and so on. This
            method will separate the data into original blocks.</p>
            
            </summary>
            <param name="rawCodewords">bytes as read directly from the QR Code
            </param>
            <param name="version">version of the QR Code
            </param>
            <param name="ecLevel">error-correction level of the QR Code
            </param>
            <returns> {@link DataBlock}s containing original bytes, "de-interleaved" from representation in the
            QR Code
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask">
            <summary> <p>Encapsulates data masks for the data bits in a QR code, per ISO 18004:2006 6.8. Implementations
            of this class can un-mask a raw BitMatrix. For simplicity, they will unmask the entire BitMatrix,
            including areas used for finder patterns, timing patterns, etc. These areas should be unused
            after the point they are unmasked anyway.</p>
            
            <p>Note that the diagram in section 6.8.1 is misleading since it indicates that i is column position
            and j is row position. In fact, as the text says, i is row position and j is column position.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DATA_MASKS">
            <summary> See ISO 18004:2006 6.8.1</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.unmaskBitMatrix(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32)">
            <summary> <p>Implementations of this method reverse the data masking process applied to a QR Code and
            make its bits ready to read.</p>
            
            </summary>
            <param name="bits">representation of QR Code bits
            </param>
            <param name="dimension">dimension of QR Code, represented by bits, being unmasked
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.forReference(System.Int32)">
            <param name="reference">a value between 0 and 7 indicating one of the eight possible
            data mask patterns a QR Code may use
            </param>
            <returns> {@link DataMask} encapsulating the data mask pattern
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask000">
            <summary> 000: mask bits for which (x + y) mod 2 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask001">
            <summary> 001: mask bits for which x mod 2 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask010">
            <summary> 010: mask bits for which y mod 3 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask011">
            <summary> 011: mask bits for which (x + y) mod 3 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask100">
            <summary> 100: mask bits for which (x/2 + y/3) mod 2 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask101">
            <summary> 101: mask bits for which xy mod 2 + xy mod 3 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask110">
            <summary> 110: mask bits for which (xy mod 2 + xy mod 3) mod 2 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DataMask.DataMask111">
            <summary> 111: mask bits for which ((x+y)mod 2 + xy mod 3) mod 2 == 0</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DecodedBitStreamParser">
            <summary> <p>QR Codes can encode text as bits in one of several modes, and can use multiple modes
            in one QR Code. This class decodes the bits back into text.</p>
            
            <p>See ISO 18004:2006, 6.4.3 - 6.4.7</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.DecodedBitStreamParser.ALPHANUMERIC_CHARS">
            <summary> See ISO 18004:2006, 6.4.4 Table 5</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Decoder">
            <summary> <p>The main class which implements QR Code decoding -- as opposed to locating and extracting
            the QR Code from an image.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Decoder.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Decoder.decode(System.Boolean[][])">
            <summary> <p>Convenience method that can decode a QR Code represented as a 2D array of booleans.
            "true" is taken to mean a black module.</p>
            
            </summary>
            <param name="image">booleans representing white/black QR Code modules
            </param>
            <returns> text and bytes encoded within the QR Code
            </returns>
            <throws>  ReaderException if the QR Code cannot be decoded </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Decoder.decode(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix)">
            <summary> <p>Decodes a QR Code represented as a {@link BitMatrix}. A 1 or "true" is taken to mean a black module.</p>
            
            </summary>
            <param name="bits">booleans representing white/black QR Code modules
            </param>
            <returns> text and bytes encoded within the QR Code
            </returns>
            <throws>  ReaderException if the QR Code cannot be decoded </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Decoder.correctErrors(System.SByte[],System.Int32)">
            <summary> <p>Given data and error-correction codewords received, possibly corrupted by errors, attempts to
            correct the errors in-place using Reed-Solomon error correction.</p>
            
            </summary>
            <param name="codewordBytes">data and error correction codewords
            </param>
            <param name="numDataCodewords">number of codewords that are data bytes
            </param>
            <throws>  ReaderException if error correction fails </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel">
            <summary> <p>See ISO 18004:2006, 6.5.1. This enum encapsulates the four error correction levels
            defined by the QR code standard.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.L">
            <summary> L = ~7% correction</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.M">
            <summary> M = ~15% correction</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.Q">
            <summary> Q = ~25% correction</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.H">
            <summary> H = ~30% correction</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.ordinal">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel.forBits(System.Int32)">
            <param name="bits">int containing the two bits encoding a QR Code's error correction level
            </param>
            <returns> {@link ErrorCorrectionLevel} representing the encoded error correction level
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation">
            <summary> <p>Encapsulates a QR Code's format information, including the data mask used and
            error correction level.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
            <seealso cref="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation.DataMask">
            </seealso>
            <seealso cref="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation.ErrorCorrectionLevel">
            </seealso>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation.FORMAT_INFO_DECODE_LOOKUP">
            <summary> See ISO 18004:2006, Annex C, Table C.1</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation.BITS_SET_IN_HALF_BYTE">
            <summary> Offset i holds the number of 1 bits in the binary representation of i</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.FormatInformation.decodeFormatInformation(System.Int32)">
            <param name="maskedFormatInfo">format info indicator, with mask still applied
            </param>
            <returns> information about the format it specifies, or <code>null</code>
            if doesn't seem to match any known pattern
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode">
            <summary> <p>See ISO 18004:2006, 6.4.1, Tables 2 and 3. This enum encapsulates the various modes in which
            data can be encoded to bits in the QR code standard.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.Bits">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.TERMINATOR">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.NUMERIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.ALPHANUMERIC">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.STRUCTURED_APPEND">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.BYTE">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.ECI">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.KANJI">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.FNC1_FIRST_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.FNC1_SECOND_POSITION">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.forBits(System.Int32)">
            <param name="bits">four bits encoding a QR Code data mode
            </param>
            <returns> {@link Mode} encoded by these bits
            </returns>
            <throws>  IllegalArgumentException if bits do not correspond to a known mode </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.getCharacterCountBits(SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version)">
            <param name="version">version in question
            </param>
            <returns> number of bits used, in this QR Code symbol {@link Version}, to encode the
            count of characters that will follow encoded in this {@link Mode}
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version">
            <summary> See ISO 18004:2006 Annex D
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.VersionNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.AlignmentPatternCenters">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.TotalCodewords">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.DimensionForVersion">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.VERSION_DECODE_INFO">
            <summary> See ISO 18004:2006 Annex D.
            Element i represents the raw version bits that specify version i + 7
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.getECBlocksForLevel(SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel)">
            <summary>
            
            </summary>
            <param name="ecLevel"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.getProvisionalVersionForDimension(System.Int32)">
            <summary> <p>Deduces version information purely from QR Code dimensions.</p>
            
            </summary>
            <param name="dimension">dimension in modules
            </param>
            <returns> {@link Version} for a QR Code of that dimension
            </returns>
            <throws>  ReaderException if dimension is not 1 mod 4 </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.getVersionForNumber(System.Int32)">
            <summary>
            
            </summary>
            <param name="versionNumber"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.decodeVersionInformation(System.Int32)">
            <summary>
            
            </summary>
            <param name="versionBits"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.buildFunctionPattern">
            <summary> See ISO 18004:2006 Annex E</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECBlocks">
            <summary> <p>Encapsulates a set of error-correction blocks in one symbol version. Most versions will
            use blocks of differing sizes within one version, so, this encapsulates the parameters for
            each set of blocks. It also holds the number of error-correction codewords per block since it
            will be the same across all blocks within one version.</p>
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECBlocks.ECCodewordsPerBlock">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECBlocks.NumBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECBlocks.TotalECCodewords">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECBlocks.getECBlocks">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECB">
            <summary> <p>Encapsualtes the parameters for one error-correction block in one symbol version.
            This includes the number of data codewords, and the number of times a block with these
            parameters is used consecutively in the QR code version's format.</p>
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECB.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ECB.DataCodewords">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Version.buildVersions">
            <summary> See ISO 18004:2006 6.5.1 Table 9</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPattern">
            <summary> <p>Encapsulates an alignment pattern, which are the smaller square patterns found in
            all but the simplest QR Codes.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPattern.aboutEquals(System.Single,System.Single,System.Single)">
            <summary> <p>Determines if this alignment pattern "about equals" an alignment pattern at the stated
            position and size -- meaning, it is at nearly the same center with nearly the same size.</p>
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder">
            <summary> <p>This class attempts to find alignment patterns in a QR Code. Alignment patterns look like finder
            patterns but are smaller and appear at regular intervals throughout the image.</p>
            
            <p>At the moment this only looks for the bottom-right alignment pattern.</p>
            
            <p>This is mostly a simplified copy of {@link FinderPatternFinder}. It is copied,
            pasted and stripped down here for maximum performance but does unfortunately duplicate
            some code.</p>
            
            This class is thread-safe but not reentrant. Each thread must allocate its own object.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,SPM.Utilities.Barcode.com.google.zxing.ResultPointCallback)">
            <summary> <p>Creates a finder that will look in a portion of the whole image.</p>
            
            </summary>
            <param name="image">image to search
            </param>
            <param name="startX">left column from which to start searching
            </param>
            <param name="startY">top row from which to start searching
            </param>
            <param name="width">width of region to search
            </param>
            <param name="height">height of region to search
            </param>
            <param name="moduleSize">estimated module size so far
            </param>
            <param name="resultPointCallback"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.find">
            <summary> <p>This method attempts to find the bottom-right alignment pattern in the image. It is a bit messy since
            it's pretty performance-critical and so is written to be fast foremost.</p>
            
            </summary>
            <returns> {@link AlignmentPattern} if found
            </returns>
            <throws>  ReaderException if not found </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.centerFromEnd(System.Int32[],System.Int32)">
            <summary> Given a count of black/white/black pixels just seen and an end position,
            figures the location of the center of this black/white/black run.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.foundPatternCross(System.Int32[])">
            <param name="stateCount">count of black/white/black pixels just read
            </param>
            <returns> true iff the proportions of the counts is close enough to the 1/1/1 ratios
            used by alignment patterns to be considered a match
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.crossCheckVertical(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>After a horizontal scan finds a potential alignment pattern, this method
            "cross-checks" by scanning down vertically through the center of the possible
            alignment pattern to see if the same proportion is detected.</p>
            
            </summary>
            <param name="startI">row where an alignment pattern was detected
            </param>
            <param name="centerJ">center of the section that appears to cross an alignment pattern
            </param>
            <param name="maxCount">maximum reasonable number of modules that should be
            observed in any reading state, based on the results of the horizontal scan
            </param>
            <returns> vertical center of alignment pattern, or {@link Float#NaN} if not found
            </returns>
            <param name="originalStateCountTotal"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.AlignmentPatternFinder.handlePossibleCenter(System.Int32[],System.Int32,System.Int32)">
            <summary> <p>This is called when a horizontal scan finds a possible alignment pattern. It will
            cross check with a vertical scan, and if successful, will see if this pattern had been
            found on a previous horizontal scan. If so, we consider it confirmed and conclude we have
            found the alignment pattern.</p>
            
            </summary>
            <param name="stateCount">reading state module counts from horizontal scan
            </param>
            <param name="i">row where alignment pattern may be found
            </param>
            <param name="j">end of possible alignment pattern in row
            </param>
            <returns> {@link AlignmentPattern} if we have found the same pattern twice, or null if not
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector">
            <summary> <p>Encapsulates logic that can detect a QR Code in an image, even if the QR Code
            is rotated or skewed, or partially obscured.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.ResultPointCallback">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix)">
            <summary>
            
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.detect">
            <summary> <p>Detects a QR Code in an image, simply.</p>
            
            </summary>
            <returns> {@link DetectorResult} encapsulating results of detecting a QR Code
            </returns>
            <throws>  ReaderException if no QR Code can be found </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.detect(System.Collections.Hashtable)">
            <summary> <p>Detects a QR Code in an image, simply.</p>
            
            </summary>
            <param name="hints">optional hints to detector
            </param>
            <returns> {@link DetectorResult} encapsulating results of detecting a QR Code
            </returns>
            <throws>  ReaderException if no QR Code can be found </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.processFinderPatternInfo(SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.createTransform(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,System.Int32)">
            <summary>
            
            </summary>
            <param name="topLeft"></param>
            <param name="topRight"></param>
            <param name="bottomLeft"></param>
            <param name="alignmentPattern"></param>
            <param name="dimension"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.computeDimension(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,System.Single)">
            <summary> <p>Computes the dimension (number of modules on a size) of the QR Code based on the position
            of the finder patterns and estimated module size.</p>
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.calculateModuleSize(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint)">
            <summary> <p>Computes an average estimated module size based on estimated derived from the positions
            of the three finder patterns.</p>
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.calculateModuleSizeOneWay(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint)">
            <summary> <p>Estimates module size based on two finder patterns -- it uses
            {@link #sizeOfBlackWhiteBlackRunBothWays(int, int, int, int)} to figure the
            width of each, measuring along the axis between their centers.</p>
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.sizeOfBlackWhiteBlackRunBothWays(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> See {@link #sizeOfBlackWhiteBlackRun(int, int, int, int)}; computes the total width of
            a finder pattern by looking for a black-white-black run from the center in the direction
            of another point (another finder pattern center), and in the opposite direction too.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.sizeOfBlackWhiteBlackRun(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>This method traces a line from a point in the image, in the direction towards another point.
            It begins in a black region, and keeps going until it finds white, then black, then white again.
            It reports the distance from the start to this point.</p>
            
            <p>This is used when figuring out how wide a finder pattern is, when the finder pattern
            may be skewed or rotated.</p>
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.findAlignmentInRegion(System.Single,System.Int32,System.Int32,System.Single)">
            <summary> <p>Attempts to locate an alignment pattern in a limited region of the image, which is
            guessed to contain it. This method uses {@link AlignmentPattern}.</p>
            
            </summary>
            <param name="overallEstModuleSize">estimated module size so far
            </param>
            <param name="estAlignmentX">x coordinate of center of area probably containing alignment pattern
            </param>
            <param name="estAlignmentY">y coordinate of above
            </param>
            <param name="allowanceFactor">number of pixels in all directions to search from the center
            </param>
            <returns> {@link AlignmentPattern} if found, or null otherwise
            </returns>
            <throws>  ReaderException if an unexpected error occurs during detection </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.Detector.round(System.Single)">
            <summary> Ends up being a bit faster than Math.round(). This merely rounds its argument to the nearest int,
            where x.5 rounds up.
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPattern">
            <summary> <p>Encapsulates a finder pattern, which are the three square patterns found in
            the corners of QR Codes. It also encapsulates a count of similar finder patterns,
            as a convenience to the finder's bookkeeping.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPattern.EstimatedModuleSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPattern.aboutEquals(System.Single,System.Single,System.Single)">
            <summary> <p>Determines if this finder pattern "about equals" a finder pattern at the stated
            position and size -- meaning, it is at nearly the same center with nearly the same size.</p>
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder">
            <summary> <p>This class attempts to find finder patterns in a QR Code. Finder patterns are the square
            markers at three corners of a QR Code.</p>
            
            This class is thread-safe but not reentrant. Each thread must allocate its own object.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.PossibleCenters">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.MIN_SKIP">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.MAX_MODULES">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix)">
            <summary> <p>Creates a finder that will search the image for three finder patterns.</p>
            
            </summary>
            <param name="image">image to search
            </param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.#ctor(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix,SPM.Utilities.Barcode.com.google.zxing.ResultPointCallback)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="resultPointCallback"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.centerFromEnd(System.Int32[],System.Int32)">
            <summary> Given a count of black/white/black/white/black pixels just seen and an end position,
            figures the location of the center of this run.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.foundPatternCross(System.Int32[])">
            <param name="stateCount">count of black/white/black/white/black pixels just read
            </param>
            <returns> true iff the proportions of the counts is close enough to the 1/1/3/1/1 ratios
            used by finder patterns to be considered a match
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.crossCheckVertical(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>After a horizontal scan finds a potential finder pattern, this method
            "cross-checks" by scanning down vertically through the center of the possible
            finder pattern to see if the same proportion is detected.</p>
            
            </summary>
            <param name="startI">row where a finder pattern was detected
            </param>
            <param name="centerJ">center of the section that appears to cross a finder pattern
            </param>
            <param name="maxCount">maximum reasonable number of modules that should be
            observed in any reading state, based on the results of the horizontal scan
            </param>
            <returns> vertical center of finder pattern, or {@link Float#NaN} if not found
            </returns>
            <param name="originalStateCountTotal"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.crossCheckHorizontal(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary> <p>Like {@link #crossCheckVertical(int, int, int, int)}, and in fact is basically identical,
            except it reads horizontally instead of vertically. This is used to cross-cross
            check a vertical cross check and locate the real center of the alignment pattern.</p>
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.handlePossibleCenter(System.Int32[],System.Int32,System.Int32)">
            <summary> <p>This is called when a horizontal scan finds a possible alignment pattern. It will
            cross check with a vertical scan, and if successful, will, ah, cross-cross-check
            with another horizontal scan. This is needed primarily to locate the real horizontal
            center of the pattern in cases of extreme skew.</p>
            
            If that succeeds the finder pattern location is added to a list that tracks
            the number of times each location has been nearly-matched as a finder pattern.
            Each additional find is more evidence that the location is in fact a finder
            pattern center
            
            </summary>
            <param name="stateCount">reading state module counts from horizontal scan
            </param>
            <param name="i">row where finder pattern may be found
            </param>
            <param name="j">end of possible finder pattern in row
            </param>
            <returns> true if a finder pattern candidate was found this time
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.findRowSkip">
            <returns> number of rows we could safely skip during scanning, based on the first
            two finder patterns that have been located. In some cases their position will
            allow us to infer that the third pattern must lie below a certain point farther
            down in the image.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.haveMultiplyConfirmedCenters">
            <returns> true iff we have found at least 3 finder patterns that have been detected
            at least {@link #CENTER_QUORUM} times each, and, the estimated module size of the
            candidates is "pretty similar"
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.selectBestPatterns">
            <returns> the 3 best {@link FinderPattern}s from our list of candidates. The "best" are
            those that have been detected at least {@link #CENTER_QUORUM} times, and whose module
            size differs from the average among those patterns the least
            </returns>
            <throws>  ReaderException if 3 such finder patterns do not exist </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternFinder.CenterComparator">
            <summary> <p>Orders by {@link FinderPattern#getCount()}, descending.</p></summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo">
            <summary> <p>Encapsulates information about finder patterns in an image, including the location of
            the three finder patterns, and their estimated module size.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo.BottomLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo.TopLeft">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo.TopRight">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPatternInfo.#ctor(SPM.Utilities.Barcode.com.google.zxing.qrcode.detector.FinderPattern[])">
            <summary>
            
            </summary>
            <param name="patternCenters"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector">
            <summary> JAVAPORT: This should be combined with BitArray in the future, although that class is not yet
            dynamically resizeable. This implementation is reasonable but there is a lot of function calling
            in loops I'd like to get rid of.
            
            </summary>
            <author>  satorux@google.com (Satoru Takabayashi) - creator
            </author>
            <author>  dswitkin@google.com (Daniel Switkin) - ported from C++
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.Array">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.at(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.size">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.sizeInBytes">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.appendBit(System.Int32)">
            <summary>
            
            </summary>
            <param name="bit"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.appendBits(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="value_Renamed"></param>
            <param name="numBits"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.appendBitVector(SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary>
            
            </summary>
            <param name="bits"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.xor(SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary>
            
            </summary>
            <param name="other"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder">
            <author>  satorux@google.com (Satoru Takabayashi) - creator
            </author>
            <author>  dswitkin@google.com (Daniel Switkin) - ported from C++
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode)">
            <summary>  Encode "bytes" with the error correction level "ecLevel". The encoding mode will be chosen
            internally by chooseMode(). On success, store the result in "qrCode".
            
            We recommend you to use QRCode.EC_LEVEL_L (the lowest level) for
            "getECLevel" since our primary use is to show QR code on desktop screens. We don't need very
            strong error correction for this purpose.
            
            Note that there is no way to encode bytes in MODE_KANJI. We might want to add EncodeWithMode()
            with which clients can specify the encoding mode. For now, we don't need the functionality.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,System.Collections.Hashtable,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <param name="ecLevel"></param>
            <param name="hints"></param>
            <param name="qrCode"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.getAlphanumericCode(System.Int32)">
            <returns> the code point of the table used in alphanumeric mode or
            -1 if there is no corresponding code in the table.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.chooseMode(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.chooseMode(System.String,System.String)">
            <summary> Choose the best mode by examining the content. Note that 'encoding' is used as a hint;
            if it is Shift_JIS, and the input is only double-byte Kanji, then we return {@link Mode#KANJI}.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.initQRCode(System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode)">
            <summary> Initialize "qrCode" according to "numInputBytes", "ecLevel", and "mode". On success,
            modify "qrCode".
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.terminateBits(System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary> Terminate bits as described in 8.4.8 and 8.4.9 of JISX0510:2004 (p.24).</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.getNumDataBytesAndNumECBytesForBlockID(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[],System.Int32[])">
            <summary> Get number of data bytes and number of error correction bytes for block id "blockID". Store
            the result in "numDataBytesInBlock", and "numECBytesInBlock". See table 12 in 8.5.1 of
            JISX0510:2004 (p.30)
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.interleaveWithECBytes(SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector,System.Int32,System.Int32,System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary> Interleave "bits" with corresponding error correction bytes. On success, store the result in
            "result". The interleave rule is complicated. See 8.6 of JISX0510:2004 (p.37) for details.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.appendModeInfo(SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary> Append mode info. On success, store the result in "bits".</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.appendLengthInfo(System.Int32,System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary> Append length info. On success, store the result in "bits".</summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.Encoder.appendBytes(System.String,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.Mode,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector,System.String)">
            <summary> Append "bytes" in "mode" mode (encoding) into "bits". On success, store the result in "bits".</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil">
            <author>  satorux@google.com (Satoru Takabayashi) - creator
            </author>
            <author>  dswitkin@google.com (Daniel Switkin) - ported from C++
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil.applyMaskPenaltyRule1(SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil.applyMaskPenaltyRule2(SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil.applyMaskPenaltyRule3(SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil.applyMaskPenaltyRule4(SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MaskUtil.getDataMaskBit(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="maskPattern"></param>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil">
            <author>  satorux@google.com (Satoru Takabayashi) - creator
            </author>
            <author>  dswitkin@google.com (Daniel Switkin) - ported from C++
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.clearMatrix(SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.buildMatrix(SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector,SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,System.Int32,System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="dataBits"></param>
            <param name="ecLevel"></param>
            <param name="version"></param>
            <param name="maskPattern"></param>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.embedBasicPatterns(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="version"></param>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.embedTypeInfo(SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="ecLevel"></param>
            <param name="maskPattern"></param>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.maybeEmbedVersionInfo(System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="version"></param>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.embedDataBits(SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector,System.Int32,SPM.Utilities.Barcode.com.google.zxing.common.ByteMatrix)">
            <summary>
            
            </summary>
            <param name="dataBits"></param>
            <param name="maskPattern"></param>
            <param name="matrix"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.findMSBSet(System.Int32)">
            <summary>
            
            </summary>
            <param name="value_Renamed"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.calculateBCHCode(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="value_Renamed"></param>
            <param name="poly"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.makeTypeInfoBits(SPM.Utilities.Barcode.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel,System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary>
            
            </summary>
            <param name="ecLevel"></param>
            <param name="maskPattern"></param>
            <param name="bits"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.MatrixUtil.makeVersionInfoBits(System.Int32,SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.BitVector)">
            <summary>
            
            </summary>
            <param name="version"></param>
            <param name="bits"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode">
            <author>  satorux@google.com (Satoru Takabayashi) - creator
            </author>
            <author>  dswitkin@google.com (Daniel Switkin) - ported from C++
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.Mode">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.ECLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.Version">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.MatrixWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.MaskPattern">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.NumTotalBytes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.NumDataBytes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.NumECBytes">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.NumRSBlocks">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.Matrix">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.Valid">
            <summary>
            
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.NUM_MASK_PATTERNS">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.at(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.encoder.QRCode.isValidMaskPattern(System.Int32)">
            <summary>
            
            </summary>
            <param name="maskPattern"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader">
            <summary> This implementation can detect and decode QR Codes in an image.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader.Decoder">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader.decode(SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap)">
            <summary> Locates and decodes a QR code in an image.
            
            </summary>
            <returns> a String representing the content encoded by the QR code
            </returns>
            <throws>  ReaderException if a QR code cannot be found, or cannot be decoded </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader.decode(SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap,System.Collections.Hashtable)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="hints"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader.extractPureBits(SPM.Utilities.Barcode.com.google.zxing.common.BitMatrix)">
            <summary> This method detects a barcode in a "pure" image -- that is, pure monochrome image
            which contains only an unrotated, unskewed, image of a barcode, with some white border
            around it. This is a specialized method that works exceptionally fast in this special
            case.
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeWriter">
            <summary> This object renders a QR Code as a ByteMatrix 2D array of greyscale values.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeWriter.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="contents"></param>
            <param name="format"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeWriter.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.Collections.Hashtable)">
            <summary>
            
            </summary>
            <param name="contents"></param>
            <param name="format"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="hints"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.Reader">
            <summary> Implementations of this interface can decode an image of a barcode in some format into
            the String it encodes. For example, {@link SPM.Utilities.Barcode.com.google.zxing.qrcode.QRCodeReader} can
            decode a QR code. The decoder may optionally receive hints from the caller which may help
            it decode more quickly or accurately.
            
            See {@link SPM.Utilities.Barcode.com.google.zxing.MultiFormatReader}, which attempts to determine what barcode
            format is present within the image as well, and then decodes it accordingly.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Reader.decode(SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap)">
            <summary> Locates and decodes a barcode in some format within an image.
            
            </summary>
            <param name="image">image of barcode to decode
            </param>
            <returns> String which the barcode encodes
            </returns>
            <throws>  ReaderException if the barcode cannot be located or decoded for any reason </throws>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Reader.decode(SPM.Utilities.Barcode.com.google.zxing.BinaryBitmap,System.Collections.Hashtable)">
            <summary> Locates and decodes a barcode in some format within an image. This method also accepts
            hints, each possibly associated to some data, which may help the implementation decode.
            
            </summary>
            <param name="image">image of barcode to decode
            </param>
            <param name="hints">passed as a {@link java.util.Hashtable} from {@link SPM.Utilities.Barcode.com.google.zxing.DecodeHintType}
            to arbitrary data. The
            meaning of the data depends upon the hint type. The implementation may or may not do
            anything with these hints.
            </param>
            <returns> String which the barcode encodes
            </returns>
            <throws>  ReaderException if the barcode cannot be located or decoded for any reason </throws>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.ReaderException">
            <summary> The general exception class throw when something goes wrong during decoding of a barcode.
            This includes, but is not limited to, failing checksums / error correction algorithms, being
            unable to locate finder timing patterns, and so on.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.ReaderException.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ReaderException.fillInStackTrace">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.Result">
            <summary> <p>Encapsulates the result of decoding a barcode within an image.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Result.Text">
            <returns> raw text encoded by the barcode, if applicable, otherwise <code>null</code>
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Result.RawBytes">
            <returns> raw bytes encoded by the barcode, if applicable, otherwise <code>null</code>
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Result.ResultPoints">
            <returns> points related to the barcode in the image. These are typically points
            identifying finder patterns or the corners of the barcode. The exact meaning is
            specific to the type of barcode that was decoded.
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Result.BarcodeFormat">
            <returns> {@link BarcodeFormat} representing the format of the barcode that was decoded
            </returns>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.Result.ResultMetadata">
            <returns> {@link Hashtable} mapping {@link ResultMetadataType} keys to values. May be
            <code>null</code>. This contains optional metadata about what was detected about the barcode,
            like orientation.
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Result.#ctor(System.String,System.SByte[],SPM.Utilities.Barcode.com.google.zxing.ResultPoint[],SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="rawBytes"></param>
            <param name="resultPoints"></param>
            <param name="format"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Result.putMetadata(SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType,System.Object)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="value_Renamed"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Result.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType">
            <summary> Represents some type of metadata about the result of the decoding that the decoder
            wishes to communicate back to the caller.
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType.OTHER">
            <summary> Unspecified, application-specific metadata. Maps to an unspecified {@link Object}.</summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType.ORIENTATION">
            <summary> Denotes the likely approximate orientation of the barcode in the image. This value
            is given as degrees rotated clockwise from the normal, upright orientation.
            For example a 1D barcode which was found by reading top-to-bottom would be
            said to have orientation "90". This key maps to an {@link Integer} whose
            value is in the range [0,360).
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType.BYTE_SEGMENTS">
            <summary> <p>2D barcode formats typically encode text, but allow for a sort of 'byte mode'
            which is sometimes used to encode binary data. While {@link Result} makes available
            the complete raw bytes in the barcode for these formats, it does not offer the bytes
            from the byte segments alone.</p>
            
            <p>This maps to a {@link java.util.Vector} of byte arrays corresponding to the
            raw bytes in the byte segments in the barcode, in order.</p>
            </summary>
        </member>
        <member name="F:SPM.Utilities.Barcode.com.google.zxing.ResultMetadataType.ERROR_CORRECTION_LEVEL">
            <summary> Error correction level used, if applicable. The value type depends on the
            format, but is typically a String.
            </summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.ResultPoint">
            <summary> <p>Encapsulates a point of interest in an image containing a barcode. Typically, this
            would be the location of a finder pattern or the corner of the barcode, for example.</p>
            
            </summary>
            <author>  Sean Owen
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.Y">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.#ctor(System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.Equals(System.Object)">
            <summary>
            
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.GetHashCode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.orderBestPatterns(SPM.Utilities.Barcode.com.google.zxing.ResultPoint[])">
            <summary> Orders an array of three ResultPoints in an order [A,B,C] such that AB &lt; AC and
            BC &lt; AC and the angle between BC and BA is less than 180 degrees.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.distance(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint)">
            <returns> distance between two points
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPoint.crossProductZ(SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint,SPM.Utilities.Barcode.com.google.zxing.ResultPoint)">
            <summary> Returns the z component of the cross product between vectors BC and BA.</summary>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.ResultPointCallback">
            <summary> Callback which is invoked when a possible result point (significant
            point in the barcode image such as a corner) is found.
            
            </summary>
            <seealso cref="F:SPM.Utilities.Barcode.com.google.zxing.DecodeHintType.NEED_RESULT_POINT_CALLBACK">
            </seealso>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.ResultPointCallback.foundPossibleResultPoint(SPM.Utilities.Barcode.com.google.zxing.ResultPoint)">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.Writer">
            <summary> The base class for all objects which encode/generate a barcode image.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Writer.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat,System.Int32,System.Int32)">
            <summary> Encode a barcode using the default settings.
            
            </summary>
            <param name="contents">The contents to encode in the barcode
            </param>
            <param name="format">The barcode format to generate
            </param>
            <param name="width">The preferred width in pixels
            </param>
            <param name="height">The preferred height in pixels
            </param>
            <returns> The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white)
            </returns>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.Writer.encode(System.String,SPM.Utilities.Barcode.com.google.zxing.BarcodeFormat,System.Int32,System.Int32,System.Collections.Hashtable)">
            <summary> </summary>
            <param name="contents">The contents to encode in the barcode
            </param>
            <param name="format">The barcode format to generate
            </param>
            <param name="width">The preferred width in pixels
            </param>
            <param name="height">The preferred height in pixels
            </param>
            <param name="hints">Additional parameters to supply to the encoder
            </param>
            <returns> The generated barcode as a Matrix of unsigned bytes (0 == black, 255 == white)
            </returns>
        </member>
        <member name="T:SPM.Utilities.Barcode.com.google.zxing.WriterException">
            <summary> A base class which covers the range of exceptions which may occur when encoding a barcode using
            the Writer framework.
            
            </summary>
            <author>  dswitkin@google.com (Daniel Switkin)
            </author>
            <author>www.Redivivus.in (suraj.supekar@redivivus.in) - Ported from ZXING Java Source 
            </author>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.WriterException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Barcode.com.google.zxing.WriterException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:SPM.Utilities.BitmapExtensions">
            <summary>
            Extensions to the Bitmap or Image class
            </summary>
        </member>
        <member name="M:SPM.Utilities.BitmapExtensions.ResizeBitmap(System.Drawing.Bitmap,System.Int32,System.Int32)">
            <summary>
            Resize the bitmap to the new width and heigt
            </summary>
            <param name="sourceBMP"></param>
            <param name="width"></param>
            <param name="height"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.BitmapExtensions.EmbedImageInCenter(System.Drawing.Image,System.Drawing.Image)">
            <summary>
            Embed an image in the center of the given image
            </summary>
            <param name="firstImage"></param>
            <param name="secondImage"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:SPM.Utilities.Compression">
            <summary>
            A class used for compression and decompression. The class is publicly available so that the 
            user will compress/decompress the item using FWH standards.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Compression.Compress(System.String)">
            <summary>
            Compresses the string and returns a byte array of the compressed bytes.
            </summary>
            <param name="value">The string to compress</param>
            <returns>A byte array of the compressed string</returns>
            <remarks>This procedure currently uses GZIP compression.</remarks>
        </member>
        <member name="M:SPM.Utilities.Compression.Decompress(System.Byte[])">
            <summary>
            Decompresses the byte array and returns the decompressed string.
            </summary>
            <param name="value">A byte array of compressed bytes.</param>
            <returns>A string of the byte array decompressed.</returns>
            <remarks>This procedure current expects that the byte array was compressed using GZIP algorithm.</remarks>
        </member>
        <member name="T:SPM.Utilities.Crypto">
            <summary>A class used for encryption/decryption.</summary>
        </member>
        <member name="P:SPM.Utilities.Crypto.PassPhrase">
            <summary>
            The 'Key' to encrypt or decrypt data.  The same passPhrase must be used decrypt
            data that was used to encrypt the data.
            </summary>
            <value>A common password or saying.</value>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptTextToFile(System.String,System.String)">
            <summary>
            Encrypts a string and writes it to a file.
            </summary>
            <exception cref="T:System.Security.Cryptography.CryptographicException" caption="">An error occurred while encrypting the data</exception>
            <param name="data">The data to be encrypted</param>
            <param name="fileName">The full path to the file to be decrypted.</param>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptTextToFile(System.String,System.String,SPM.Utilities.EncryptionAlgorithmConstants)">
            <summary>
            Encrypts a string and writes it to a file.
            </summary>
            <exception cref="T:System.Security.Cryptography.CryptographicException" caption="">An error occurred while encrypting the data</exception>
            <param name="data">The data to be encrypted</param>
            <param name="fileName">The full path to the file to be decrypted.</param>
            <param name="encryptionAlgorithm">The encryption algorithm to use.</param>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptTextToString(System.String)">
            <summary>
            Encrypts a string and returns the encrypted string.
            </summary>
            <param name="data">The data to be encrypted</param>
            <returns>The encrypted data as a string</returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptTextToString(System.String,SPM.Utilities.EncryptionAlgorithmConstants)">
            <summary>
            Encrypts a string and returns the encrypted string using the encryption algorithm provided.
            </summary>
            <param name="data">The data to be encrypted</param>
            <param name="encryptionAlgorithm"></param>
            <returns>The encrypted data as a string</returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptTextToStream(System.String,System.IO.Stream,SPM.Utilities.EncryptionAlgorithmConstants)">
            <summary>
            Encrypts a string and writes it to a given stream
            </summary>
            <param name="data">The data to be encrypted</param>
            <param name="outStream"></param>
            <param name="encryptionAlgorithm">The encryption algorithm to use.</param>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.EncryptDataSetToFile(System.Data.DataSet,System.String)">
            <summary>
            Encrypts the XML for a data set to a file
            </summary>
            <param name="data"></param>
            <param name="fileName"></param>
        </member>
        <member name="M:SPM.Utilities.Crypto.DecryptTextFromFile(System.String)">
            <summary>
            Decrypts a file and returns a string. The file must have been encrypted 
            using this class as well, using the 'hard-coded' keys.
            </summary>
            <param name="fileName">The full path to the file to be decrypted.</param>
            <returns>The contents of the file decrypted as a string.</returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.DecryptTextFromFile(System.String,SPM.Utilities.EncryptionAlgorithmConstants)">
            <summary>
            Decrypts a file and returns a string. The file must have been encrypted 
            using this class as well, using the 'hard-coded' keys.
            </summary>
            <param name="fileName">The full path to the file to be decrypted.</param>
            <param name="encryptionAlgorithm">The algorithm to use to decrypt the contents of the file.</param>
            <returns>The contents of the file decrypted as a string.</returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.DecryptTextFromString(System.String)">
            <summary>
            Decrypts a string and returns a string.
            </summary>
            <param name="data">The encrypted string.</param>
            <returns>The string in plain text</returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Crypto.DecryptTextFromString(System.String,SPM.Utilities.EncryptionAlgorithmConstants)">
            <summary>
            Decrypts a string and returns a string using the encrypted algorithm designated.
            </summary>
            <param name="data">The encrypted string.</param>
            <param name="encryptionAlgorithm"></param>
            <returns>The string in plain text</returns>
            <remarks></remarks>
        </member>
        <member name="T:SPM.Utilities.CryptoHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.CryptoHelper.EncryptTextToString(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.CryptoHelper.DecryptTextFromString(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.CryptoHelper.ComputeSHA1Hash(System.String)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.CultureHelper">
            <summary>
            Utilities to help with handling/generating Culture info.
            </summary>
        </member>
        <member name="M:SPM.Utilities.CultureHelper.GetCultureInfo">
            <summary>
            Returns the CultureInfo object based on the ActiveProfile's language and country.
            </summary>
            <returns>
            If the ActiveProfile's language is not valid: null. <br/>
            If the ActiveProfile's language-country combination is a valid culture: a CultureInfo containing the ActiveProfile's language and country. <br/>
            If the ActiveProfile's language-country combination is not a valid culture: a CultureInfo containing only the ActiveProfile's language.
            </returns>
        </member>
        <member name="M:SPM.Utilities.CultureHelper.GetCultureInfo(SPM.Objects.SPMProfileDS.LanguageRow)">
            <summary>
            Returns the CultureInfo object based on the <paramref name="language"/> and the ActiveProfile's country.
            </summary>
            <param name="language">The language to be specified in the CultureInfo.</param>
            <returns>
            If the <paramref name="language"/> is not valid: null. <br/>
            If the combination of the <paramref name="language"/> and the ActiveProfile's country is a valid culture: a CultureInfo containing the <paramref name="language"/> and the ActiveProfile's country. <br/>
            If the combination of the <paramref name="language"/> and the ActiveProfile's country is not a valid culture: a CultureInfo containing only the <paramref name="language"/>.
            </returns>
        </member>
        <member name="M:SPM.Utilities.CultureHelper.GetCultureInfo(SPM.Objects.SPMProfileDS.CountryRow)">
            <summary>
            Returns the CultureInfo object based on the <paramref name="country"/> and the ActiveProfile's language.
            </summary>
            <param name="country">The country to be specified in the CultureInfo.</param>
            <returns>
            If the ActiveProfile's language is not valid: null. <br/>
            If the combination of the <paramref name="country"/> and the ActiveProfile's language is a valid culture: a CultureInfo containing the <paramref name="country"/> and the ActiveProfile's language. <br/>
            If the combination of the <paramref name="country"/> and the ActiveProfile's language is not a valid culture: a CultureInfo containing only the ActiveProfile's language.
            </returns>
        </member>
        <member name="M:SPM.Utilities.CultureHelper.GetCultureInfo(SPM.Objects.SPMProfileDS.LanguageRow,SPM.Objects.SPMProfileDS.CountryRow)">
            <summary>
            Returns the CultureInfo object based on the <paramref name="language"/> and <paramref name="country"/>.
            </summary>
            <param name="language">The language to be specified in the CultureInfo.</param>
            <param name="country">The country to be specified in the CultureInfo.</param>
            <returns>
            If the <paramref name="language"/> is not valid: null. <br/>
            If the combination of the <paramref name="language"/> and <paramref name="country"/> is valid: a CultureInfo containing the <paramref name="language"/> and <paramref name="country"/>.
            If the combination of the <paramref name="language"/> and <paramref name="country"/> is not valid: a CultureInfo containing only the <paramref name="language"/>.
            </returns>
        </member>
        <member name="T:SPM.Utilities.CurrentUser">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Utilities.CurrentUser.IsOwner">
            <summary>
             Determines if the current logged on user has the name of Owner
            </summary>
        </member>
        <member name="P:SPM.Utilities.CurrentUser.IsDeveloper">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.CurrentUser.UpgradeValidationCheck">
            <summary>
            This function will check if any of the files were missing during an upgrade.
            It will rely on "c:\sd20\inst\ssver.ini" to identify the current version.
            It will use the current version number to find archived zip file located in "c:\sd20upg\priorver\busd20\XX.XX.XX.zip"
            then extract it to "c:\sd20\proqueue\".
            </summary>
        </member>
        <member name="M:SPM.Utilities.CurrentUser.CheckSS2KResolution">
            <summary>
            Checks the screen resolution.
            </summary>
        </member>
        <member name="T:SPM.Utilities.DPAPI">
            <summary>
            Encrypts and decrypts data using DPAPI functions.
            </summary>
        </member>
        <member name="M:SPM.Utilities.DPAPI.InitPrompt(SPM.Utilities.DPAPI.CRYPTPROTECT_PROMPTSTRUCT@)">
            <summary>
            Initializes empty prompt structure.
            </summary>
            <param name="ps">
            Prompt parameter (which we do not actually need).
            </param>
        </member>
        <member name="M:SPM.Utilities.DPAPI.InitBLOB(System.Byte[],SPM.Utilities.DPAPI.DATA_BLOB@)">
            <summary>
            Initializes a BLOB structure from a byte array.
            </summary>
            <param name="data">
            Original data in a byte array format.
            </param>
            <param name="blob">
            Returned blob structure.
            </param>
        </member>
        <member name="T:SPM.Utilities.DPAPI.KeyType">
            <summary>
            Flag indicating the type of key. DPAPI terminology refers to
            key types as user store or machine store.
            </summary>
        </member>
        <member name="F:SPM.Utilities.DPAPI.KeyType.UserKey">
            <summary>
            User type key
            </summary>
        </member>
        <member name="F:SPM.Utilities.DPAPI.KeyType.MachineKey">
            <summary>
            Machine type key
            </summary>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Encrypt(System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value with a user-specific key. This function does not
            specify data description and additional entropy.
            </summary>
            <param name="plainText">
            Plaintext data to be encrypted.
            </param>
            <returns>
            Encrypted value in a base64-encoded format.
            </returns>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Encrypt(SPM.Utilities.DPAPI.KeyType,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value. This function does not specify data description
            and additional entropy.
            </summary>
            <param name="keyType">
            Defines type of encryption key to use. When user key is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine key will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">
            Plaintext data to be encrypted.
            </param>
            <returns>
            Encrypted value in a base64-encoded format.
            </returns>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Encrypt(SPM.Utilities.DPAPI.KeyType,System.String,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value. This function does not specify data description.
            </summary>
            <param name="keyType">
            Defines type of encryption key to use. When user key is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine key will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">
            Plaintext data to be encrypted.
            </param>
            <param name="entropy">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <returns>
            Encrypted value in a base64-encoded format.
            </returns>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Encrypt(SPM.Utilities.DPAPI.KeyType,System.String,System.String,System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt a plaintext
            string value.
            </summary>
            <param name="keyType">
            Defines type of encryption key to use. When user key is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine key will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainText">
            Plaintext data to be encrypted.
            </param>
            <param name="entropy">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <param name="description">
            Optional description of data to be encrypted. If this value is
            specified, it will be stored along with encrypted data and
            returned as a separate value during decryption.
            </param>
            <returns>
            Encrypted value in a base64-encoded format.
            </returns>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Encrypt(SPM.Utilities.DPAPI.KeyType,System.Byte[],System.Byte[],System.String)">
            <summary>
            Calls DPAPI CryptProtectData function to encrypt an array of
            plaintext bytes.
            </summary>
            <param name="keyType">
            Defines type of encryption key to use. When user key is
            specified, any application running under the same user account
            as the one making this call, will be able to decrypt data.
            Machine key will allow any application running on the same
            computer where data were encrypted to perform decryption.
            Note: If optional entropy is specifed, it will be required
            for decryption.
            </param>
            <param name="plainTextBytes">
            Plaintext data to be encrypted.
            </param>
            <param name="entropyBytes">
            Optional entropy which - if specified - will be required to
            perform decryption.
            </param>
            <param name="description">
            Optional description of data to be encrypted. If this value is
            specified, it will be stored along with encrypted data and
            returned as a separate value during decryption.
            </param>
            <returns>
            Encrypted value.
            </returns>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Decrypt(System.String)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            This function does not use additional entropy and does not
            return data description.
            </summary>
            <param name="cipherText">
            Encrypted data formatted as a base64-encoded string.
            </param>
            <returns>
            Decrypted data returned as a UTF-8 string.
            </returns>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Decrypt(System.String,System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            This function does not use additional entropy.
            </summary>
            <param name="cipherText">
            Encrypted data formatted as a base64-encoded string.
            </param>
            <param name="description">
            Returned description of data specified during encryption.
            </param>
            <returns>
            Decrypted data returned as a UTF-8 string.
            </returns>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Decrypt(System.String,System.String,System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            </summary>
            <param name="cipherText">
            Encrypted data formatted as a base64-encoded string.
            </param>
            <param name="entropy">
            Optional entropy, which is required if it was specified during
            encryption.
            </param>
            <param name="description">
            Returned description of data specified during encryption.
            </param>
            <returns>
            Decrypted data returned as a UTF-8 string.
            </returns>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
        </member>
        <member name="M:SPM.Utilities.DPAPI.Decrypt(System.Byte[],System.Byte[],System.String@)">
            <summary>
            Calls DPAPI CryptUnprotectData to decrypt ciphertext bytes.
            </summary>
            <param name="cipherTextBytes">
            Encrypted data.
            </param>
            <param name="entropyBytes">
            Optional entropy, which is required if it was specified during
            encryption.
            </param>
            <param name="description">
            Returned description of data specified during encryption.
            </param>
            <returns>
            Decrypted data bytes.
            </returns>
            <remarks>
            When decrypting data, it is not necessary to specify which
            type of encryption key to use: user-specific or
            machine-specific; DPAPI will figure it out by looking at
            the signature of encrypted data.
            </remarks>
        </member>
        <member name="T:SPM.Utilities.EnumDescriptionAttribute">
            <summary>
            Provides a description for an enumerated type.
            </summary>
        </member>
        <member name="P:SPM.Utilities.EnumDescriptionAttribute.Description">
            <summary>
            Gets the description stored in this attribute.
            </summary>
            <value>The description stored in the attribute.</value>
        </member>
        <member name="M:SPM.Utilities.EnumDescriptionAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:SPM.Utilities.EnumDescriptionAttribute"/> class.
            </summary>
            <param name="description">The description to store in this attribute.
            </param>
        </member>
        <member name="T:SPM.Utilities.EnumTestModeOnlyAttribute">
            <summary>
            Allows for certain enum values to be used in test mode only
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:SPM.Utilities.EnumTestModeOnlyAttribute.TestModeOnly">
            <summary>
            Gets the value.
            </summary>
            <value></value>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.EnumTestModeOnlyAttribute.#ctor(System.Boolean)">
            <summary>
            Constructor
            </summary>
            <param name="testModeOnly"></param>
            <remarks></remarks>
        </member>
        <member name="T:SPM.Utilities.EnumNoteAttribute">
            <summary>
            Provides a description for an enumerated type.
            </summary>
        </member>
        <member name="P:SPM.Utilities.EnumNoteAttribute.Note">
            <summary>
            Gets the Note text stored in this attribute.
            </summary>
            <value>The Note text stored in the attribute.</value>
        </member>
        <member name="M:SPM.Utilities.EnumNoteAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:SPM.Utilities.EnumNoteAttribute"/> class.
            </summary>
            <param name="note">The Note text to store in this attribute.
            </param>
        </member>
        <member name="T:SPM.Utilities.EnumResourceNameAttribute">
            <summary>
            Provides a the resource name for the descripton for an enumerated type.
            </summary>
        </member>
        <member name="P:SPM.Utilities.EnumResourceNameAttribute.ResourceName">
            <summary>
            Gets the ResourceName stored in this attribute.
            </summary>
            <value>The ResourceName stored in the attribute.</value>
        </member>
        <member name="M:SPM.Utilities.EnumResourceNameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the
            <see cref="T:SPM.Utilities.EnumResourceNameAttribute"/> class.
            </summary>
            <param name="name">The resoure name for this enum.
            </param>
        </member>
        <member name="T:SPM.Utilities.EnumLanguageCultureCodeAttribute">
            <summary>
            Provides the Language culture code for an enumerated type.  See ISO 639-1 and "Language Culture Name" in https://msdn.microsoft.com/en-ca/library/ee825488(v=cs.20).aspx.
            </summary>
        </member>
        <member name="P:SPM.Utilities.EnumLanguageCultureCodeAttribute.LanguageCode">
            <summary>
            Gets the LanguageCode stored in this attribute. 
            </summary>
        </member>
        <member name="M:SPM.Utilities.EnumLanguageCultureCodeAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SPM.Utilities.EnumLanguageCultureCodeAttribute"/> class.
            </summary>
            <param name="languageCultureCode">The Language Culture code, as defined in ISO-639-1 and/or "Language Culture Name" in https://msdn.microsoft.com/en-ca/library/ee825488(v=cs.20).aspx </param>
        </member>
        <member name="T:SPM.Utilities.EnumHelper">
            <summary>
            Provides a static utility object of methods and properties to interact
            with enumerated types.
            </summary>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetDescription(System.Enum)">
            <summary>
            Gets the <see cref="T:SPM.Utilities.EnumDescriptionAttribute" /> of an Enum type value.
            </summary>
            <param name="value">The Enum type value.</param>
            <returns>A string containing the text of the
            <see cref="T:SPM.Utilities.EnumDescriptionAttribute"/>.</returns>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetLocalizedDescription(System.Enum)">
            <summary>
            Gets the localized enum description for enums which are expected to display strings visible to users.
            The localization keys will be should be based off the Enum value names.
            </summary>
            <param name="value">The Enum type value</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetLanguageCultureCode(System.Enum)">
            <summary>
            Gets the <see cref="T:SPM.Utilities.EnumLanguageCultureCodeAttribute"/> of an Enum type value.
            </summary>
            <param name="value">The Enum type value.</param>
            <returns>A string containing the text of the <see cref="T:SPM.Utilities.EnumLanguageCultureCodeAttribute"/>.</returns>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetEnumNote(System.Enum)">
            <summary>
            Gets the <see cref="T:SPM.Utilities.EnumNoteAttribute" /> of an Enum type value.
            </summary>
            <param name="value">The Enum type value.</param>
            <returns>A string containing the text of the
            <see cref="T:SPM.Utilities.EnumDescriptionAttribute"/>.</returns>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetEnumResourceName(System.Enum)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.GetTestModeOnly(System.Enum)">
            <summary>
            Gets the test mode only.	
            </summary>
            <param name="value">The value.</param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.EnumHelper.ToList(System.Type)">
            <summary>
            Converts the given
              type to an <see cref="T:System.Collections.Generic.IList`1" /> 
            compatible object.
            </summary>
            <param name="type">The Enum type.</param>
            <returns>An <see cref="T:System.Collections.Generic.IList`1"/> containing the enumerated
            type value and description.</returns>
        </member>
        <member name="T:SPM.Utilities.CardTypeConstants">
            <summary>
            The different Card Types in the SPM world
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Unknown">
            <summary>
            Unknown card type
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Credit">
            <summary>
            Credit Cards, this would also represent a dignature based debit card
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Debit">
            <summary>
            Debit Cards, that are PIN based
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Gift">
            <summary>
            Gift Cards, cards that have a legal tender
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Rewards">
            <summary>
            Rewards Cards, cards that carry loyalty rewards, such as points.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Mobile">
            <summary>
            Any card type to be acquired via a mobile phone.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CardTypeConstants.Coupon">
            <summary>
            A standalone coupon
            </summary>
        </member>
        <member name="T:SPM.Utilities.ContinentConstants">
            <summary>
            The continents of the world.
            </summary>
            <remarks>
            Using the abbreviations for the continents as found here: http://planetarynames.wr.usgs.gov/Abbreviations
            </remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.None">
            <summary>
            No country has been set.  This should never occur.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.NA">
            <summary>
            The North American settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.EU">
            <summary>
            The European settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.AF">
            <summary>
            The African settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.AN">
            <summary>
            The Antartica settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.AS">
            <summary>
            The Asian settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.OC">
            <summary>
            The Oceanic settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.ContinentConstants.SA">
            <summary>
            The South American settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:SPM.Utilities.CountryConstants">
            <summary>
            Designates which country settings should be used to process requests.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryConstants.None">
            <summary>
            No country has been set.  This should never occur.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.CountryConstants.US">
            <summary>
            The US settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.CountryConstants.CAD">
            <summary>
            The Canadian settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.CountryConstants.AUD">
            <summary>
            The Australian settings should be used.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.CountryConstants.Unknown">
            <summary>
            An unknown value.
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:SPM.Utilities.DeviceTypes">
            <summary>
            Designates the devices that the SPM knows about.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.Unknown">
            <summary>
             The default, initial value for the DeviceType property of a card.
            </summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.KeyboardWedge">
            <summary>A Generic Card Swipe. Could be a MagTek mini card reader or built in card reader for PAR machines, etc.</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.MagtekIPAD">
            <summary>The MagTek IPAD device</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.MagtekContactless">
            <summary>The MagTek Contactless device</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.ViVOpay4800">
            <summary>The ViVOpay 4800 Contactless reader</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.POSScanner">
             <summary>
            
             </summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.VerifoneVX820">
            <summary>Verifone VX820 Swipe/Chip/NFC Terminal</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.EuropayICT250">
            <summary>Europay Ingenico ICT 250 Semi-Integrated Credit/Debit Terminal</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.BarclaycardIPP350">
            <summary>Barclaycard Ingenico IPP350 Semi-Integrated Credit/Debit Terminal</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.PCEFTPOS">
             <summary>
            
             </summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.HoneywellBarcodeScanner">
            <summary>Honeywell Keyboard Barcode Scanner</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.PaydiantMobile">
            <summary>Paydiant mobile, typically via Vx820</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.Saturn6500">
            <summary>The OTI Saturn 6500 Device, for NexTep and NueQ kiosk.</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.GryphonBarcodeScanner">
            <summary>Gryphon 4400 OPOS Barcode Scanner</summary>
        </member>
        <member name="F:SPM.Utilities.DeviceTypes.HPBarcodeScanner">
            <summary>HP Image Scanner OPOS Barcode Scanner</summary>
        </member>
        <member name="T:SPM.Utilities.HostAPIs">
            <summary>
            Designates which API to use when communicating with the host
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.HostAPIs.Chockstone">
            <summary>
            Uses the API for the Chockstone CTP
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.HostAPIs.VP3">
            <summary>
            Uses the Native API for VP3
            </summary>
            <remarks></remarks>
        </member>
        <member name="T:SPM.Utilities.LanguageConstants">
            <summary>
            Designates the language used for the error messages and some items on the receipt.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.LanguageConstants.English">
            <summary>
            Use English, the default value.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LanguageConstants.French">
            <summary>
            Use French
            </summary>
        </member>
        <member name="F:SPM.Utilities.LanguageConstants.Spanish">
            <summary>
            Use Spanish
            </summary>
        </member>
        <member name="F:SPM.Utilities.LanguageConstants.German">
            <summary>
            Use German
            </summary>
        </member>
        <member name="T:SPM.Utilities.SkinType">
             <summary>
            
             </summary>
        </member>
        <member name="F:SPM.Utilities.SkinType.Unknown">
            <summary>
            Unknown Skin Selection.
            </summary>
        </member>
        <member name="F:SPM.Utilities.SkinType.Normal">
            <summary>
            Normal, Production-mode Subway skin.
            </summary>
        </member>
        <member name="F:SPM.Utilities.SkinType.TestMode">
            <summary>
            Test-mode Subway skin.
            </summary>
        </member>
        <member name="F:SPM.Utilities.SkinType.TDMNormal">
            <summary>
            Normal, Production-mode Taco Del Mar skin.
            </summary>
        </member>
        <member name="F:SPM.Utilities.SkinType.TDMTestMode">
            <summary>
            Test-mode Taco Del Mar skin.
            </summary>
        </member>
        <member name="T:SPM.Utilities.POSSoftwareSupported">
            <summary>
            Designates which POS software is supported.
            </summary>
        </member>
        <member name="F:SPM.Utilities.POSSoftwareSupported.SubShop2000">
            <summary>
            Subshop 2k, our legacy platform.
            </summary>
        </member>
        <member name="F:SPM.Utilities.POSSoftwareSupported.SubwayPOS">
            <summary>
            SubwayPOS, our currently supported platform.
            </summary>
        </member>
        <member name="F:SPM.Utilities.POSSoftwareSupported.Generic">
            <summary>
            Other.
            </summary>
        </member>
        <member name="T:SPM.Utilities.StoreBrandConstants">
            <summary>
            Designates which store the product is installed in
            </summary>
        </member>
        <member name="F:SPM.Utilities.StoreBrandConstants.Subway">
            <summary>
            Subway brand.
            </summary>
        </member>
        <member name="F:SPM.Utilities.StoreBrandConstants.TacoDelMar">
            <summary>
            Taco Del Mar brand.
            </summary>
        </member>
        <member name="T:SPM.Utilities.AccountTypes">
            <summary>
            Designates the type of Debit account
            </summary>
        </member>
        <member name="F:SPM.Utilities.AccountTypes.Unspecified">
            <summary>
            Account type unspecified.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AccountTypes.Chequing">
            <summary>
            Chequing / Checking account type.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AccountTypes.Savings">
            <summary>
            Savings account type.
            </summary>
        </member>
        <member name="T:SPM.Utilities.AcquireMethods">
            <summary>
            The method used to obtain information from a card.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Swipe">
            <summary>
            Card information was obtained by swiping the card through a card reader.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Manual">
            <summary>
            Card information was obtained by entering the information directly into the POS.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.NFC">
            <summary>
            Card information was obtained by using an NFC device such as MagTek Contactless device.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Scan">
            <summary>
            Card information was obtained by using a scanner.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.NFC_EMV">
            <summary>
            Card information was obtained by using an NFC device that supports EMV.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Contact_EMV">
            <summary>
            Card information was obtained using a chip insert.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Standalone">
            <summary>
            Card information was obtained by using a standalone device.
            </summary>
        </member>
        <member name="F:SPM.Utilities.AcquireMethods.Mobile">
            <summary>
            Card information was obtained by using a mobile phone.
            </summary>
        </member>
        <member name="T:SPM.Utilities.CouponStatus">
            <summary>
            Indicate the current status of a coupon.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.UNKNOWN">
             <summary>
            Coupon is in unknown state
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.ACTIVE">
             <summary>
            Coupon is active and redeemable
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.REDEEMED">
             <summary>
            Coupon was redeemed
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.REDEEM_PENDING">
             <summary>
            Coupon is pending redemption
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.EXPIRED">
             <summary>
            Coupon is expired
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.CANCELLED">
             <summary>
            Coupon is cancelled
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.REVERSAL_PENDING">
             <summary>
            Coupon is pending for reversal
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.REVERSAL_FAILED">
             <summary>
            Coupon failed reversal
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.VOID_PENDING">
             <summary>
            Coupon is pending to be voided
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.REFUND_PENDING">
             <summary>
            Coupon is pending refund
            </summary>
        </member>
        <member name="F:SPM.Utilities.CouponStatus.INVALID">
             <summary>
            Coupon is invalid
            </summary>
        </member>
        <member name="T:SPM.Utilities.CountryCode">
            <summary>
            Code representing each country.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.Germany">
            <summary>
            Germany's country code.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.UnitedKingdom">
            <summary>
            United Kingdom's country code.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.USA">
            <summary>
            USA's country code.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.Canada">
            <summary>
            Canada's contry code.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.Australia">
            <summary>
            Australia's country code.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CountryCode.Austria">
            <summary>
            Austria's country code.
            </summary>
        </member>
        <member name="T:SPM.Utilities.LoyaltyGateWays">
            <summary>
            LoyaltyGateway used for Loyalty Card functionality
            </summary>
        </member>
        <member name="F:SPM.Utilities.LoyaltyGateWays.None">
            <summary>
            No loyalty gateway.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LoyaltyGateWays.VP3">
            <summary>
            ValuePayServices
            </summary>
        </member>
        <member name="F:SPM.Utilities.LoyaltyGateWays.ThorLink">
            <summary>
            Thorlink
            </summary>
        </member>
        <member name="F:SPM.Utilities.LoyaltyGateWays.Simplicity">
            <summary>
            Simplicity
            </summary>
        </member>
        <member name="F:SPM.Utilities.LoyaltyGateWays.SnapLogic">
            <summary>
            SnapLogic
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:SPM.Utilities.LineItemTypes" -->
        <member name="F:SPM.Utilities.LineItemTypes.Merchandise">
            <summary>
            The line item is intended to communicate PLU information.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.LineItemTypes.AddGift">
            <summary>
            The line item is intended to be used to add value to a Cash Card.
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:SPM.Utilities.LineItemTypes.Tax">
            <summary>
            The line item is used to designate the amount of tax to be paid
            </summary>
            <remarks>The PLU will automatically be set to TAX with this line item type.</remarks>
        </member>
        <member name="T:SPM.Utilities.CurrencyCodes">
            <summary>
            Actively-used Currency Codes as defined in ISO 4217.  Fetched from https://en.wikipedia.org/wiki/ISO_4217 on Dec. 7, 2016. <br />
            Also contains proprietary currencies (points, tokens, etc.) outside of the Numeric-3 range of the ISO standard.
            </summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.Unknown">
            <summary>Currency unspecified or simply unrecognized.</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.Points">
            <summary>Loyalty Points</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.Tokens">
            <summary>Loyalty Tokens</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.Certificate">
            <summary>Loyalty Certificate value</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AED">
            <summary>United Arab Emirates dirham</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AFN">
            <summary>Afghan afghani</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ALL">
            <summary>Albanian lek</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AMD">
            <summary>Armenian dram</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ANG">
            <summary>Netherlands Antillean guilder</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AOA">
            <summary>Angolan kwanza</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ARS">
            <summary>Argentine peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AUD">
            <summary>Australian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AWG">
            <summary>Aruban florin</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.AZN">
            <summary>Azerbaijani manat</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BAM">
            <summary>Bosnia and Herzegovina convertible mark</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BBD">
            <summary>Barbados dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BDT">
            <summary>Bangladeshi taka</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BGN">
            <summary>Bulgarian lev</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BHD">
            <summary>Bahraini dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BIF">
            <summary>Burundian franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BMD">
            <summary>Bermudian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BND">
            <summary>Brunei dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BOB">
            <summary>Boliviano</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BOV">
            <summary>Bolivian Mvdol (funds code)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BRL">
            <summary>Brazilian real</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BSD">
            <summary>Bahamian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BTN">
            <summary>Bhutanese ngultrum</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BWP">
            <summary>Botswana pula</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BYN">
            <summary>New Belarusian ruble </summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BYR">
            <summary>Belarusian ruble </summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.BZD">
            <summary>Belize dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CAD">
            <summary>Canadian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CDF">
            <summary>Congolese franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CHE">
            <summary>WIR Euro (complementary currency)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CHF">
            <summary>Swiss franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CHW">
            <summary>WIR Franc (complementary currency)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CLF">
            <summary>Unidad de Fomento (funds code)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CLP">
            <summary>Chilean peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CNY">
            <summary>Chinese yuan</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.COP">
            <summary>Colombian peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.COU">
            <summary>Unidad de Valor Real (UVR) (funds code)[1]</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CRC">
            <summary>Costa Rican colon</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CUC">
            <summary>Cuban convertible peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CUP">
            <summary>Cuban peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CVE">
            <summary>Cape Verde escudo</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.CZK">
            <summary>Czech koruna</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.DJF">
            <summary>Djiboutian franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.DKK">
            <summary>Danish krone</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.DOP">
            <summary>Dominican peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.DZD">
            <summary>Algerian dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.EGP">
            <summary>Egyptian pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ERN">
            <summary>Eritrean nakfa</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ETB">
            <summary>Ethiopian birr</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.EUR">
            <summary>Euro</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.FJD">
            <summary>Fiji dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.FKP">
            <summary>Falkland Islands pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GBP">
            <summary>Pound sterling</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GEL">
            <summary>Georgian lari</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GHS">
            <summary>Ghanaian cedi</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GIP">
            <summary>Gibraltar pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GMD">
            <summary>Gambian dalasi</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GNF">
            <summary>Guinean franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GTQ">
            <summary>Guatemalan quetzal</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.GYD">
            <summary>Guyanese dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.HKD">
            <summary>Hong Kong dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.HNL">
            <summary>Honduran lempira</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.HRK">
            <summary>Croatian kuna</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.HTG">
            <summary>Haitian gourde</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.HUF">
            <summary>Hungarian forint</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.IDR">
            <summary>Indonesian rupiah</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ILS">
            <summary>Israeli new shekel</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.INR">
            <summary>Indian rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.IQD">
            <summary>Iraqi dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.IRR">
            <summary>Iranian rial</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ISK">
            <summary>Icelandic króna</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.JMD">
            <summary>Jamaican dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.JOD">
            <summary>Jordanian dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.JPY">
            <summary>Japanese yen</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KES">
            <summary>Kenyan shilling</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KGS">
            <summary>Kyrgyzstani som</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KHR">
            <summary>Cambodian riel</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KMF">
            <summary>Comoro franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KPW">
            <summary>North Korean won</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KRW">
            <summary>South Korean won</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KWD">
            <summary>Kuwaiti dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KYD">
            <summary>Cayman Islands dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.KZT">
            <summary>Kazakhstani tenge</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LAK">
            <summary>Lao kip</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LBP">
            <summary>Lebanese pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LKR">
            <summary>Sri Lankan rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LRD">
            <summary>Liberian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LSL">
            <summary>Lesotho loti</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.LYD">
            <summary>Libyan dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MAD">
            <summary>Moroccan dirham</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MDL">
            <summary>Moldovan leu</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MGA">
            <summary>Malagasy ariary</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MKD">
            <summary>Macedonian denar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MMK">
            <summary>Myanmar kyat</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MNT">
            <summary>Mongolian tögrög</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MOP">
            <summary>Macanese pataca</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MRO">
            <summary>Mauritanian ouguiya</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MUR">
            <summary>Mauritian rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MVR">
            <summary>Maldivian rufiyaa</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MWK">
            <summary>Malawian kwacha</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MXN">
            <summary>Mexican peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MXV">
            <summary>Mexican Unidad de Inversion (UDI) (funds code)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MYR">
            <summary>Malaysian ringgit</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.MZN">
            <summary>Mozambican metical</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NAD">
            <summary>Namibian dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NGN">
            <summary>Nigerian naira</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NIO">
            <summary>Nicaraguan córdoba</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NOK">
            <summary>Norwegian krone</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NPR">
            <summary>Nepalese rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.NZD">
            <summary>New Zealand dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.OMR">
            <summary>Omani rial</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PAB">
            <summary>Panamanian balboa</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PEN">
            <summary>Peruvian Sol</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PGK">
            <summary>Papua New Guinean kina</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PHP">
            <summary>Philippine peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PKR">
            <summary>Pakistani rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PLN">
            <summary>Polish złoty</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.PYG">
            <summary>Paraguayan guaraní</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.QAR">
            <summary>Qatari riyal</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.RON">
            <summary>Romanian leu</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.RSD">
            <summary>Serbian dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.RUB">
            <summary>Russian ruble</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.RWF">
            <summary>Rwandan franc</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SAR">
            <summary>Saudi riyal</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SBD">
            <summary>Solomon Islands dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SCR">
            <summary>Seychelles rupee</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SDG">
            <summary>Sudanese pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SEK">
            <summary>Swedish krona/kronor</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SGD">
            <summary>Singapore dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SHP">
            <summary>Saint Helena pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SLL">
            <summary>Sierra Leonean leone</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SOS">
            <summary>Somali shilling</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SRD">
            <summary>Surinamese dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SSP">
            <summary>South Sudanese pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.STD">
            <summary>São Tomé and Príncipe dobra</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SVC">
            <summary>Salvadoran colón</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SYP">
            <summary>Syrian pound</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.SZL">
            <summary>Swazi lilangeni</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.THB">
            <summary>Thai baht</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TJS">
            <summary>Tajikistani somoni</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TMT">
            <summary>Turkmenistani manat</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TND">
            <summary>Tunisian dinar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TOP">
            <summary>Tongan paʻanga</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TRY">
            <summary>Turkish lira</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TTD">
            <summary>Trinidad and Tobago dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TWD">
            <summary>New Taiwan dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.TZS">
            <summary>Tanzanian shilling</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.UAH">
            <summary>Ukrainian hryvnia</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.UGX">
            <summary>Ugandan shilling</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.USD">
            <summary>United States dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.USN">
            <summary>United States dollar (next day) (funds code)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.UYI">
            <summary>Uruguay Peso en Unidades Indexadas (URUIURUI) (funds code)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.UYU">
            <summary>Uruguayan peso</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.UZS">
            <summary>Uzbekistan som</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.VEF">
            <summary>Venezuelan bolívar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.VND">
            <summary>Vietnamese dong</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.VUV">
            <summary>Vanuatu vatu</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.WST">
            <summary>Samoan tala</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XAF">
            <summary>CFA franc BEAC</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XAG">
            <summary>Silver (one troy ounce)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XAU">
            <summary>Gold (one troy ounce)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XBA">
            <summary>European Composite Unit (EURCO) (bond market unit)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XBB">
            <summary>European Monetary Unit (E.M.U.-6) (bond market unit)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XBC">
            <summary>European Unit of Account 9 (E.U.A.-9) (bond market unit)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XBD">
            <summary>European Unit of Account 17 (E.U.A.-17) (bond market unit)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XCD">
            <summary>East Caribbean dollar</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XDR">
            <summary>Special drawing rights</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XOF">
            <summary>CFA franc BCEAO</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XPD">
            <summary>Palladium (one troy ounce)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XPF">
            <summary>CFP franc (franc Pacifique)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XPT">
            <summary>Platinum (one troy ounce)</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XSU">
            <summary>SUCRE</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XTS">
            <summary>Code reserved for testing purposes</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XUA">
            <summary>ADB Unit of Account</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.XXX">
            <summary>No currency</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.YER">
            <summary>Yemeni rial</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ZAR">
            <summary>South African rand</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ZMW">
            <summary>Zambian kwacha</summary>
        </member>
        <member name="F:SPM.Utilities.CurrencyCodes.ZWL">
            <summary>Zimbabwean dollar A/10</summary>
        </member>
        <member name="T:SPM.Utilities.Firewall">
            <summary>
            Firewall implements logic to set up the Windows firewall and routing services as required by various SPM components.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Firewall.GetMAC">
            <summary>
            The method tries to obtain MAC address of the interface that appears to be internet-facing.
            </summary>
            <returns>MAC address as a colon-delimited hex string.</returns>
        </member>
        <member name="M:SPM.Utilities.Firewall.BarclayFirewallSetup">
            <summary>
            Sets up Windwos firewall as required for the Barclay card IPP-350 for both Windows XP and 7.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Firewall.SmartPOS7FireWallSetup">
            <summary>
            Sets up Windwos firewall as required for SmartPOS for Windows 7.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Firewall.SmartPOSXpFireWallSetup">
            <summary>
            Sets up firewall as required for SmartPOS for Windows XP.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Firewall.BarclayFirewallSetup7">
            <summary>
            Sets up firewall as required for the Barclay card IPP350 for Windows 7.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Firewall.DisablePrivateIcsAllDevices">
            <summary>
            Uses WMI to set the IsIcsPrivate property to False for all network devices (including ones that aren't present).
            </summary>
        </member>
        <member name="M:SPM.Utilities.Firewall.BarclayFirewallSetupXP">
            <summary>
            Sets up firewall as required for Barclay card IPP350 for Windows XP.
            </summary>
        </member>
        <member name="T:SPM.Utilities.RSAPrivateEncryption">
            <summary>
            Class that contains the components for encrypting RSA keys
            </summary>
        </member>
        <member name="M:SPM.Utilities.RSAPrivateEncryption.PrivateEncryption(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            Encrypts a RSA private key.
            </summary>
            <param name="rsa">The rsa private key to encrypt.</param>
            <param name="data">The hash data related to the key.</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.RSAPrivateEncryption.PublicDecryption(System.Security.Cryptography.RSACryptoServiceProvider,System.Byte[])">
            <summary>
            Decrypts a RSA public key.
            </summary>
            <param name="rsa">The rsa private key.</param>
            <param name="cipherData">The data to decrypt.</param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.SPMRegistry">
            <summary>
            Handles all SPM windows registries.
            </summary>
        </member>
        <member name="M:SPM.Utilities.SPMRegistry.Instance">
            <summary>
            Returns the singleton instance of the SPMRegistry.
            </summary>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.VersionInfo">
            <summary>
            Gets or sets the registry of the SPM version information.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.SPMDirectory">
            <summary>
            Gets or sets the registry of the SPM installation url.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.SPMPath">
            <summary>
            Gets or sets the registry of the SPM dll url.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.StoreNumber">
            <summary>
            Gets or sets the registry of the store number.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.SatelliteNumber">
            <summary>
            Gets or sets the registry of the satelite number.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.TerminalID">
            <summary>
            Gets or sets the registry of the pinpad terminal id.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.SPMConfigurationManagerPath">
            <summary>
            Gets or sets the registry of the configuration manager url.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.VeriFoneSerial">
            <summary>
            Gets or sets the registry of the Verifone device serial.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.VeriFoneSerialLastUsed">
            <summary>
            Gets or sets the registry of the Verifone device serial that was last used.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.VeriFoneFirmWare">
            <summary>
            Gets or sets the registry of the Verifone firmware version.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.VeriFoneLastUse">
            <summary>
            Gets or sets the registry of the date and time of the Verifone device's last use.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.Saturn6500Serial">
            <summary>
            Gets or sets the registry of the Saturn device serial.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.Saturn6500FirmWare">
            <summary>
            Gets or sets the registry of the Saturn firmware version.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.Saturn6500LastUse">
            <summary>
            Gets or sets the registry of the date and time of the Saturn device's last use.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.MagTekSerial">
            <summary>
            Gets or sets the registry of the MagTek device serial.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.MagTekLastUse">
            <summary>
            Gets or sets the registry of the date and time of the MagTek device's last use.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.ContactlessEnable">
            <summary>
            Gets or sets the registry of whether Contactless is enabled on the current device.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.DevSetupSuccess">
            <summary>
            Gets or sets the registry of the key indicating whether device setup was successful.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.DialBackUp">
            <summary>
            Gets or sets the registry of whether Dial Backup is enabled.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.MobilePayments">
            <summary>
            Gets or sets the registry of whether MobilePayments are enabled.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SPMRegistry.SubCardClearSwipe">
            <summary>
            Gets or sets the registry of whether Subcard Clear Swipe is enabled.
            </summary>
        </member>
        <member name="M:SPM.Utilities.SPMRegistry.LogMe(System.String)">
            <summary>
            Log the contents of the class.
            </summary>
            <param name="title">Title for the log entry.</param>
        </member>
        <member name="M:SPM.Utilities.StringCompressor.CompressString(System.String)">
            <summary>
            Compresses the string.
            </summary>
            <param name="text">The text.</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.StringCompressor.DecompressString(System.String)">
            <summary>
            Decompresses the string.
            </summary>
            <param name="compressedText">The compressed text.</param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.XElementHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.XElementHelper.SafeValue(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XElementHelper.SafeValue(System.Xml.Linq.XElement,System.Double)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XElementHelper.SafeValue(System.Object,System.DateTime)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XElementHelper.SafeValue(System.Xml.Linq.XElement,System.Boolean)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.FileIO">
            <summary>
            A class to help with file input and output
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.FileIO.GetUseAssembly">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FileIO.UseAssemblyPath">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FileIO.GetFileContents(System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SPM.Utilities.FileIO.GetFileLines(System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SPM.Utilities.FileIO.SaveTextToFile(System.String,System.String)">
            <summary>
            </summary>
            <param name="text"></param>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FileIO.CreateParentFolder(System.String)">
            <summary>
            Creates the folder that is a parent to the path passed in.
            </summary>
            <param name="path"></param>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.FileIO.CreateFolder(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:SPM.Utilities.FileIO.RenameToOld(System.String)">
            <summary>
             Rename the file with the provided path to the same thing, but with a .old extension
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:SPM.Utilities.FileIO.SaveFile(System.String,System.String)">
            <summary>
            </summary>
            <param name="fromPath"></param>
            <param name="toPath"></param>
        </member>
        <member name="M:SPM.Utilities.FileIO.CopyFile(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="fromPath"></param>
            <param name="toPath"></param>
        </member>
        <member name="M:SPM.Utilities.FileIO.BuildParent(System.String)">
            <summary>
            Create the directory structure for the parent of the path provided.
            </summary>
            <param name="path">The full path to a file or folder.
            </param>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.FileIO.GetParent(System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FileIO.GetRootParent(System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FileIO.DeleteFiles(System.String,System.String)">
            <summary>
            </summary>
            <param name="path"></param>
            <param name="filesToDelete"></param>
        </member>
        <member name="T:SPM.Utilities.FTPClient">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.FTPClient.UploadStarted">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.FTPClient.UploadProgress">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.FTPClient.UploadComplete">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.FTPClient.UploadCancelled">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.FTPClient.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.FTPClient.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="hostURI"></param>
            <param name="port"> </param>
        </member>
        <member name="M:SPM.Utilities.FTPClient.#ctor(System.String,System.String,System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="hostURI"></param>
            <param name="userName"></param>
            <param name="password"></param>
            <param name="port"> </param>
        </member>
        <member name="P:SPM.Utilities.FTPClient.HostURI">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.FTPClient.UserName">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.FTPClient.Password">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.FTPClient.Port">
            <summary></summary>
        </member>
        <member name="M:SPM.Utilities.FTPClient.Abort">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.GetFileList">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.GetFileList(System.String)">
            <summary>
            
            </summary>
            <param name="searchPattern"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.Help">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.Help(System.String)">
            <summary>
            
            </summary>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.MakeFolder(System.String)">
            <summary>
            
            </summary>
            <param name="folderName"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.ChangeFolder(System.String)">
            <summary>
            
            </summary>
            <param name="folderName"></param>
        </member>
        <member name="M:SPM.Utilities.FTPClient.ChangeParentFolder">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.UploadFile(System.String)">
            <summary>
            
            </summary>
            <param name="filePath"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.Close">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.SendUsername">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.SendUsername(System.String)">
            <summary>
            
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.SendPassword">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.SendPassword(System.String)">
            <summary>
            
            </summary>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.FTPClient.SystemInfo">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.FTPException">
            <summary>
            A custom exception raised by the dialer.
            </summary>
        </member>
        <member name="M:SPM.Utilities.FTPException.#ctor">
            <summary>
            An empty constructor, the default error message will be displayed.
            </summary>
        </member>
        <member name="M:SPM.Utilities.FTPException.#ctor(System.String)">
            <summary>
            A constructor with an extra message to be displayed along with the default error message.
            </summary>
            <param name="auxMessage">A custom message to be displayed.</param>
        </member>
        <member name="M:SPM.Utilities.FTPException.#ctor(System.String,System.Exception)">
            <summary>
            A constructor to include an additional message along with an inner exception.
            </summary>
            <param name="auxMessage">A custom message to be displayed.</param>
            <param name="innerException">An exception that was caught and recorded.</param>
        </member>
        <member name="T:SPM.Utilities.HttpStatusCode">
            <summary>
            An enumeration of status codes that can be returned in HTTP header
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.OK">
            <summary>
            Everything was OK
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.Accepted">
            <summary>
            The HTTP request was accepted
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.BadRequest">
            <summary>
            The HTTP request sent was not format properly
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.Unauthorized">
            <summary>
            The client making the request is not authorized
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.NotFound">
            <summary>
            The host resource requested is not found
            </summary>
        </member>
        <member name="F:SPM.Utilities.HttpStatusCode.NotAllowed">
            <summary>
            The request made is not allowed to be made
            </summary>
        </member>
        <member name="T:SPM.Utilities.HttpHeaderHelper">
            <summary>
            An helper class that performs work on the HTTP Header returned from the host.
            </summary>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.ParseHttpHeaderHelper(System.String)">
            <summary>
            Parses the HTTP Header into components.
            </summary>
            <param name="header">The header text received in the response.</param>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.Received">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.RawHeader">
            <summary>
            The HTTP header information received from the host without any parsing
            </summary>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.GetHeaders">
            <summary>
            A string array of all of the headers received.
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.ContentLength">
            <summary>
            The value of any Content-Length header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.ContentEncoding">
            <summary>
            The value of any Content-Enc header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.ContentType">
            <summary>
            The value of any Content-Type header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.Connection">
            <summary>
            The value of any Connection header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.Server">
            <summary>
            The value of any Server header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.ServerDate">
            <summary>
            The value of any Server Date header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.DataIsCompressed">
            <summary>
            Designates whether the body of the HTTP request is compressed or not
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.StatusCode">
            <summary>
            The value of the Status Code received in the HTTP Header
            </summary>
        </member>
        <member name="P:SPM.Utilities.HttpHeaderHelper.StatusDescription">
            <summary>
            A description of the status received in the HTTP header.
            </summary>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetContentEncoding(System.String)">
            <summary>
            Parse the Content-Encoding
            </summary>
            <param name="header"></param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetStatusCode(System.String)">
            <summary>
            Parse the initial HTTP header line and determines the Status Code
            </summary>
            <param name="line">The line of the HTTP Header</param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetContentLength(System.String)">
            <summary>
            Parse the Content-Length HTTP header to obtain the value.
            </summary>
            <param name="header">The Content-Length header</param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetServer(System.String)">
            <summary>
            Parse the Server HTTP header to obtain the value
            </summary>
            <param name="line">The Server header</param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetContentType(System.String)">
            <summary>
            Parse the Content-Type HTTP Header for the value.
            </summary>
            <param name="line">The Content-Type Header</param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetDate(System.String)">
            <summary>
            Parse the Date: HTTP header for the value
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:SPM.Utilities.HttpHeaderHelper.SetConnection(System.String)">
            <summary>
            Parse the Connection HTTP header for the value
            </summary>
            <param name="line"></param>
        </member>
        <member name="T:SPM.Utilities.IniFile">
            <summary>
            Create a New INI file to store or load data
            </summary>
        </member>
        <member name="M:SPM.Utilities.IniFile.#ctor(System.String)">
            <summary>
            INIFile Constructor.
            </summary>
            <param name="iniPath"></param>
        </member>
        <member name="M:SPM.Utilities.IniFile.WriteValue(System.String,System.String,System.String)">
            <summary>
            Write Data to the INI File
            </summary>
            <param name="section"></param>
            Section name
            <param name="key"></param>
            Key Name
            <param name="value"></param>
            Value Name
        </member>
        <member name="M:SPM.Utilities.IniFile.ReadValue(System.String,System.String)">
            <summary>
            Read Data Value From the Ini File
            </summary>
            <param name="section">The name of the section</param>
            <param name="key">The name of the key</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.IniFile.DeleteKey(System.String,System.String)">
            <summary>
            Deletes the key and its value in the section.
            </summary>
            <param name="section">The name of the section</param>
            <param name="key">The name of the key</param>
        </member>
        <member name="M:SPM.Utilities.IniFile.DeleteSection(System.String)">
            <summary>
            Deletes the given section
            </summary>
            <param name="section">The name of the section</param>
        </member>
        <member name="T:SPM.Utilities.LoggingHelper">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.LoggingHelper.SendLogOperation">
            <summary></summary>
        </member>
        <member name="F:SPM.Utilities.LoggingHelper.SendLogOperation.FilesCompressedProgress">
            <summary></summary>
        </member>
        <member name="F:SPM.Utilities.LoggingHelper.SendLogOperation.FilesCompressedComplete">
            <summary></summary>
        </member>
        <member name="F:SPM.Utilities.LoggingHelper.SendLogOperation.FileTransferProgress">
            <summary></summary>
        </member>
        <member name="F:SPM.Utilities.LoggingHelper.SendLogOperation.FileTransferComplete">
            <summary></summary>
        </member>
        <member name="E:SPM.Utilities.LoggingHelper.StatusUpdate">
            <summary></summary>
        </member>
        <member name="M:SPM.Utilities.LoggingHelper.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.LoggingHelper.SendLogs">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.#ctor(SPM.Utilities.LoggingHelper.SendLogOperation)">
            <summary>
            
            </summary>
            <param name="status"></param>
        </member>
        <member name="P:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.SendLogStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.Comment">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.PercentComplete">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.LoggingHelper.LoggingHelperEventArgs.FileCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.Machine">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsSubwayPOSInstalled">
            <summary>
            Gets whether Subway POS is installed on the machine or not.
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsSubwayPOSRunning">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsSubShop2000Running">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsNueQPOSRunning">
            <summary>
            Checks to see if the NueQ POS software is running on the computer.
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsNexTepPOSRunning">
            <summary>
            Checks to see if the NexTep POS software is running on the computer.
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsAvantiKioskPOSRunning">
            <summary>
            Checks to see if the Avanti Kiosk POS software is running on the computer.
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.IsSubwayKioskPOSRunning">
            <summary>
            Checks to see if the Subway Kiosk POS software is running on the computer.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Machine.POSMainWindowHandle">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.Machine.IsSmartPOSClientRunning">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Machine.LaunchSmartPOSClient(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="arguments"></param>
            <param name="smartPOSClientPath"></param>
        </member>
        <member name="M:SPM.Utilities.Machine.LaunchSmartPOSDashboard">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.Machine.IsDesignMode">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Machine.LocalIPAddresses">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Machine.FindAvailableTCPPort(System.Int32)">
            <summary>
            
            </summary>
            <param name="startPort"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Machine.FindMACAddress">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.Machine.Is64BitProcess">
            <summary>
            Gets whether this process is 64-bit or not
            </summary>
        </member>
        <member name="P:SPM.Utilities.Machine.Is64BitOperatingSystem">
            <summary>
            Gets whether the running system is a 64-bit system or not
            </summary>
        </member>
        <member name="M:SPM.Utilities.Machine.ModuleContainsFunction(System.String,System.String)">
            <summary>
            Checks whether a module contains a method with a given method name.
            </summary>
            <param name="moduleName">The name of the module.</param>
            <param name="methodName">The method name of the function to search for.</param>
            <returns>True if contains, otherwise false.</returns>
        </member>
        <member name="P:SPM.Utilities.Machine.IsWindowsXP">
            <summary>
            Gets whether the current system is on the Windows XP OS or not.
            </summary>
        </member>
        <member name="T:SPM.Utilities.ModemHelper">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.#ctor">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.ComPortExists">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.GetPortNames">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.GetAvailModems">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.Contains(System.String)">
            <summary>
            </summary>
            <param name="portName"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.Contains(System.Int32)">
            <summary>
            </summary>
            <param name="portNumber"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.IsModem(System.String,System.String@)">
            <summary>
            </summary>
            <param name="port"></param>
            <param name="response"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.TestCommand(System.String,System.String)">
            <summary>
            </summary>
            <param name="port"></param>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.CommPort">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.DataBits">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.StopBit">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.Parity">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.Handshaking">
            <summary></summary>
        </member>
        <member name="P:SPM.Utilities.ModemHelper.IsOpen">
            <summary></summary>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.SetupComPort(System.String)">
            <summary>
            </summary>
            <param name="commPort"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.Dispose(System.Boolean)">
             <summary>
            
             </summary>
             <param name="disposing"></param>
        </member>
        <member name="M:SPM.Utilities.ModemHelper.Dispose">
             <summary>
            
             </summary>
        </member>
        <member name="T:SPM.Utilities.MyAssemblyInfo">
            <summary>
              This class provides information about the running application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.ProductName">
            <summary>
              Gets the product name of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.ProductTitle">
            <summary>
              Gets the product title of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.ProductDescription">
            <summary>
              Gets the product title of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.Location">
            <summary>
              Gets the full location, the folder and name, of the assembly.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.ParentFolder">
            <summary>
              Gets the folder in which the assembly exists.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.Version">
            <summary>
              Gets the version number of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.Company">
            <summary>
              Gets the company of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.Copyright">
            <summary>
              Gets the copyright information of the application.
            </summary>
        </member>
        <member name="P:SPM.Utilities.MyAssemblyInfo.CallingAssemblyName">
            <summary>
              Gets the product name of the application.
            </summary>
        </member>
        <member name="T:SPM.Utilities.ObjectCopier">
            <summary>
            /// Reference Article http://www.codeproject.com/KB/tips/SerializedObjectCloner.aspx 
            /// Provides a method for performing a deep copy of an object.
            /// Binary Serialization is used to perform the copy.
            /// 
            </summary>
        </member>
        <member name="M:SPM.Utilities.ObjectCopier.Clone``1(``0)">
            <summary>    
            Perform a deep Copy of the object.    
            </summary>    
            <typeparam name="T">The type of object being copied.</typeparam>    
            <param name="source">The object instance to copy.</param>    
            <returns>The copied object.</returns>    
        </member>
        <member name="M:SPM.Utilities.ObjectCopier.Clone``1(System.Collections.Generic.IList{``0})">
            <summary>
            </summary>
            <param name="listToClone"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.RegistryHelper">
            <summary>
             A class used to read/write to the registry
            </summary>
        </member>
        <member name="P:SPM.Utilities.RegistryHelper.HKeyLocalMachine">
            <summary>
            The root for HKLM
            </summary>
        </member>
        <member name="P:SPM.Utilities.RegistryHelper.HkeyClassesRoot">
            <summary>
            The root for HKey Classes Root
            </summary>
        </member>
        <member name="P:SPM.Utilities.RegistryHelper.HKeyCurrentUser">
            <summary>
            The root for HKey Current User
            </summary>
        </member>
        <member name="P:SPM.Utilities.RegistryHelper.HKeyUsers">
            <summary>
            The root for HKey Users
            </summary>
        </member>
        <member name="P:SPM.Utilities.RegistryHelper.HKeyCurrentConfig">
            <summary>
            The root for HKey Current Configuration
            </summary>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.SaveInRun(System.String,System.String)">
            <summary>
             Save an item in the Run registry
            </summary>
            <param name="valueName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.SaveInRunOnce(System.String,System.String)">
            <summary>
             Save an item in the RunOnce registry
            </summary>
            <param name="valueName">The name of the item to execute</param>
            <param name="value">The full path of the item to execute</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.DeleteFromRun(System.String)">
            <summary>
             Deletes Registry Value.
            </summary>
            <param name="valueName">The run to delete.</param>
            <returns>Whether the deletion was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSPMDirectory">
            <summary>
            Gets the value of the Directory registry Key.
            </summary>
            <returns>The value of the Directory registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSPMPath">
            <summary>
            Gets the value of the Path registry Key.
            </summary>
            <returns>The value of the Path registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSPMConfigurationManagerPath">
            <summary>
            Gets the value of the ConfigurationManagerPath registry Key.
            </summary>
            <returns>The value of the ConfigurationManagerPath registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSPMVersion">
            <summary>
            Gets the value of the SPMVersion registry Key.
            </summary>
            <returns>The value of the SPMVersion registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneDriverUninstallPath">
            <summary>
            Gets the value of the Verifone driver uninstall path registry Key.
            </summary>
            <returns>The value of the verifone driver uninstall path registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneDriverVersion">
            <summary>
            Gets the value of the verifone driver version registry Key.
            </summary>
            <returns>The value of the verifone driver version registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneSerial">
            <summary>
            Gets the value of the verifone serial registry Key.
            </summary>
            <returns>The value of the verifone serial registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneSerialLastUsed">
            <summary>
            Gets the value of the verifone serial last used registry Key.
            </summary>
            <returns>The value of the verifone serial last used registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneFirmware">
            <summary>
            Gets the value of the verifone firmware registry Key.
            </summary>
            <returns>The value of the verifone firmware registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadVeriFoneLastUse">
            <summary>
            Gets the value of the verifone last used registry Key.
            </summary>
            <returns>The value of the verifone last used registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSaturn6500Serial">
            <summary>
            Gets the value of the Saturn 6500 serial registry Key.
            </summary>
            <returns>The value of the Saturn 6500 serial registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSaturn6500Firmware">
            <summary>
            Gets the value of the Saturn 6500 firmware registry Key.
            </summary>
            <returns>The value of the Saturn 6500 firmware registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSaturn6500LastUse">
            <summary>
            Gets the value of the Saturn 6500 last used registry Key.
            </summary>
            <returns>The value of the Saturn 6500 last used registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadMagTekSerial">
            <summary>
            Gets the value of the Magtek serial registry Key.
            </summary>
            <returns>The value of the Magtek serial registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadMagTekLastUse">
            <summary>
            Gets the value of the Magtek last used registry Key.
            </summary>
            <returns>The value of the Magtek last used registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadContactlessEnable">
            <summary>
            Gets the value of the contactless enabled registry Key.
            </summary>
            <returns>The value of the contactless enabled registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadDevSetupSuccess">
            <summary>
            Gets the value of the device setup success registry Key.
            </summary>
            <returns>The value of the device setup success registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadDialBackUp">
            <summary>
            Gets the value of the dial backup registry Key.
            </summary>
            <returns>The value of the dial backup registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadMobilePayments">
            <summary>
            Gets the value of the mobile payments registry Key.
            </summary>
            <returns>The value of the mobile payments registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSubCardClearSwipe">
            <summary>
            Gets the value of the sub card clear swipe registry Key.
            </summary>
            <returns>The value of the sub card clear swipe registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSatelliteNumber">
            <summary>
            Gets the value of the satellite number registry Key.
            </summary>
            <returns>The value of the satellite number registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadTerminalID">
            <summary>
            Gets the value of the terminal id registry Key.
            </summary>
            <returns>The value of the terminal id registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadStoreNumber">
            <summary>
            Gets the value of the store number registry Key.
            </summary>
            <returns>The value of the store number registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadPceftClientName">
            <summary>
            Gets the value of the pceftpos client name registry Key.
            </summary>
            <returns>The value of the pceftpos client name registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadSubwayPOSVersion">
            <summary>
            Gets the value of the subwaypos verision registry Key.
            </summary>
            <returns>The value of the subwaypos version registry key.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSPMDirectory(System.String)">
            <summary>
            Sets the value of the SPM Directory registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSPMPath(System.String)">
            <summary>
            Sets the value of the SPM Path registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSPMConfigurationManagerPath(System.String)">
            <summary>
            Sets the value of the SPM Configuration manager path registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSPMVersion(System.String)">
            <summary>
            Sets the value of the SPM version registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteVeriFoneSerial(System.String)">
            <summary>
            Sets the value of the verifone serial registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteVeriFoneSerialLastUsed(System.String)">
            <summary>
            Sets the value of the verifone serial last used registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteVeriFoneFirmware(System.String)">
            <summary>
            Sets the value of the verifone firmware registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteVeriFoneLastUse(System.String)">
            <summary>
            Sets the value of the verifone last used registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSaturn6500Serial(System.String)">
            <summary>
            Sets the value of the saturn 6500 serial registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSaturn6500Firmware(System.String)">
            <summary>
            Sets the value of the saturn 6500 firmware registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSaturn6500LastUse(System.String)">
            <summary>
            Sets the value of the saturn 6500 last used registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteMagTekSerial(System.String)">
            <summary>
            Sets the value of the magtek serial registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteMagTekLastUse(System.String)">
            <summary>
            Sets the value of the makgetk last used registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteContactlessEnable(System.String)">
            <summary>
            Sets the value of the contactless enabkled registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteDevSetupSuccess(System.String)">
            <summary>
            Sets the value of the device setup success registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteDialBackUp(System.String)">
            <summary>
            Sets the value of the dial backup registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteMobilePayments(System.String)">
            <summary>
            Sets the value of the mobile payments registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSubCardClearSwipe(System.String)">
            <summary>
            Sets the value of the sub card clear swipe registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteSatelliteNumber(System.String)">
            <summary>
            Sets the value of the satellite nuymber registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteTerminalID(System.String)">
            <summary>
            Sets the value of the terminal id registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteStoreNumber(System.String)">
            <summary>
            Sets the value of the store number registry Key.
            </summary>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.WriteValue(Microsoft.Win32.RegistryKey,System.String,System.String,System.Object)">
            <summary>
            Writes a value to the registry iwth the given name and value.
            </summary>
            <param name="parentKey">The parent key for the new entry.</param>
            <param name="subKey">The subkey for the new entry.</param>
            <param name="valueName">The name of the new entry.</param>
            <param name="value">The value of the new entry.</param>
            <returns>Whether the write was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadValue(Microsoft.Win32.RegistryKey,System.String,System.String,System.Object@)">
            <summary>
            Reads a value from the registry.
            </summary>
            <param name="parentKey">The parent key of the registry entry.</param>
            <param name="subKey">The subkey of the registry entry.</param>
            <param name="valueName">The name of the registry entry to retrieve.</param>
            <param name="value">The value of the given registry entry.</param>
            <returns>Whether the read was successful.</returns>
            <exception cref="T:System.Exception">Exception is thrown if the key does not exist.</exception>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.ReadValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
             Read a string registry value
            </summary>
            <param name="parentKey">The parent key of the registry entry.</param>
            <param name="subKey">The subkey of the registry entry.</param>
            <param name="valueName">The name of the registry entry to retrieve.</param>
            <returns>The value of the registry key that was read.</returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.DeleteValue(Microsoft.Win32.RegistryKey,System.String,System.String)">
            <summary>
            Deletes a value from the registry.
            </summary>
            <param name="parentKey">The parent key of the registry entry.</param>
            <param name="subKey">The subkey of the registry entry.</param>
            <param name="valueName">The name of the registry entry to delete.</param>
            <returns>Whether the deletion was successful.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.DeleteUninstallKey(System.String)">
            <summary>
            Deletes the uninstall key from the registry.
            </summary>
            <param name="subKey">The subkey that contains the uninstall key.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.GetRegistrySubKey(Microsoft.Win32.RegistryKey,System.String)">
            <summary>
            Attempts to open a Registry subkey, first in the 32bit registry, and again in the 64bit registry if the subkey did not exist in the 32bit registry.
            </summary>
            <param name="parentKey32">The 32bit parent key.</param>
            <param name="subKey">The subkey to be opened.</param>
            <returns>The 32bit or 64bit Registry subkey -- the first to be found in that order. If no such subkey exists, returns null.</returns>
        </member>
        <member name="M:SPM.Utilities.RegistryHelper.GetParentKey64(Microsoft.Win32.RegistryKey)">
            <summary>
            Gets the 64bit key equivalent of a 32bit parent key
            </summary>
            <param name="parentKey32">The 32bit parent key.</param>
            <returns>The parent key equivalent from the 64bit registry hive. If this is a 32-bit machine or <paramref name="parentKey32"/> doesn't match a value in the lookup table, returns null.</returns>
        </member>
        <member name="T:SPM.Utilities.SecurityHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.SecurityHelper.IsSDKThreat">
            <summary>
            Returns true if the SDK version is installed and pointing to a production URL.
            </summary>
        </member>
        <member name="M:SPM.Utilities.SecurityHelper.IsUnsecureDevice(SPM.Objects.SPMProfileDS.CardReaderDeviceRow)">
            <summary>
            
            </summary>
            <param name="cardReader"> </param>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.SecurityHelper.IsConfigEditThreat">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SecurityHelper.ToJSON">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.SerialPortManager">
            <summary>
            Manager for serial port data
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.#ctor">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.SerialPortManager.DataRecieved">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialPortManager.CurrentSerialSettings">
            <summary>
            Gets or sets the current serial port settings
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialPortManager.IsOpen">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.WriteData(System.Byte[])">
            <summary>
            </summary>
            <param name="data"></param>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.WriteData(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
            <param name="data"></param>
            <param name="blockSize"></param>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.Open">
            <summary>
            Connects to a serial port defined through the current settings
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.Close">
            <summary>
            Closes the serial port
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.UpdateBaudRateCollection">
            <summary>
            Retrieves the current selected device's COMMPROP structure, and extracts the dwSettableBaud property
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.Dispose">
            <summary>
            Call to release the serial port
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.Dispose(System.Boolean)">
            <summary>
            Part of basic design pattern for implementing Dispose
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortManager.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SPM.Utilities.SerialDataEventArgs">
            <summary>
            EventArgs used to send bytes recieved on serial port
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialDataEventArgs.#ctor(System.Byte[])">
            <summary>
            </summary>
            <param name="dataInByteArray"></param>
        </member>
        <member name="F:SPM.Utilities.SerialDataEventArgs.Data">
            <summary>
            Byte array containing data from serial port
            </summary>
        </member>
        <member name="T:SPM.Utilities.SerialPortMonitor">
            <summary>
            
            </summary>
        </member>
        <member name="E:SPM.Utilities.SerialPortMonitor.SerialPortAdded">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortMonitor.OnSerialPortAdded(SPM.Utilities.SerialPortEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:SPM.Utilities.SerialPortMonitor.SerialPortRemoved">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortMonitor.OnSerialPortRemoved(SPM.Utilities.SerialPortEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SPM.Utilities.SerialPortMonitor.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortMonitor.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.SerialPortEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialPortEventArgs.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="portName"></param>
        </member>
        <member name="P:SPM.Utilities.SerialPortEventArgs.PortName">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.SerialSettings">
            <summary>
            Class containing properties related to a serial port 
            </summary>
        </member>
        <member name="E:SPM.Utilities.SerialSettings.PropertyChanged">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialSettings.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.PortName">
            <summary>
            The port to use (for example, COM1).
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.BaudRate">
            <summary>
            The baud rate.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.Parity">
            <summary>
            One of the Parity values.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.DataBits">
            <summary>
            The data bits value.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.StopBits">
            <summary>
            One of the StopBits values.
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.Handshake">
            <summary>
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.PortNameCollection">
            <summary>
            Available ports on the computer
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.BaudRateCollection">
            <summary>
            Available baud rates for current serial port
            </summary>
        </member>
        <member name="P:SPM.Utilities.SerialSettings.DataBitsCollection">
            <summary>
            Available databits setting
            </summary>
        </member>
        <member name="M:SPM.Utilities.SerialSettings.UpdateBaudRateCollection(System.Int32)">
            <summary>
            Updates the range of possible baud rates for device
            </summary>
            <param name="possibleBaudRates">dwSettableBaud parameter from the COMMPROP Structure</param>
            <returns>An updated list of values</returns>
        </member>
        <member name="M:SPM.Utilities.SerialSettings.SendPropertyChangedEvent(System.String)">
            <summary>
            Send a PropertyChanged event
            </summary>
            <param name="propertyName">Name of changed property</param>
        </member>
        <member name="T:SPM.Utilities.ServiceHelper">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.ServiceHelper.StartServices">
            <summary>
            Attempts to start SPM filewatcher, SBI and update services without forcing them to restart.
            </summary>
        </member>
        <member name="M:SPM.Utilities.ServiceHelper.StopServices">
            <summary>
            Attempts to stop SPM filewatcher, SBI and update services.
            </summary>
        </member>
        <member name="M:SPM.Utilities.ServiceHelper.StartServices(System.Boolean)">
            <summary>
            Attempts to start SPM filewatcher, SBI and update services.
            </summary>
            <param name="forceRestart">Specifies whether the services will be forciblly restarted.</param>
        </member>
        <member name="M:SPM.Utilities.ServiceHelper.ServiceStatus(System.String)">
            <summary>
             Attempts to stop SPM filewatcher, SBI and update services.
            </summary>
            <param name="serviceName"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.GenericEventArgs`1">
            <summary>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SPM.Utilities.GenericEventArgs`1.#ctor(`0)">
            <summary>
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:SPM.Utilities.GenericEventArgs`1.Value">
            <summary>
            </summary>
        </member>
        <member name="T:SPM.Utilities.Utility">
            <summary>
            Several utilitarian methods.
            </summary>
        </member>
        <member name="M:SPM.Utilities.Utility.StripPhoneNumber(System.String)">
            <summary>
            Parses out any non-numeric characters. This is especially useful to strip out dashes and parenthesis
            that are often included in phone numbers.
            </summary>
            <param name="value">The string to modified</param>
            <returns>The resulting string without non-numeric characters</returns>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:SPM.Utilities.Utility.StripComPort(System.String)">
            <summary>
            </summary>
            <param name="comPort"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.StripForSending(System.String)">
            <summary>
            Takes a string and strips out extraneous characters before sending through the modem.
            </summary>
            <param name="value">The string to be stripped.</param>
            <returns>The resulting string stripped of extraneous characters.</returns>
            <remarks>
            Currently the method strips out CR LF and double spaces.
            </remarks>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:SPM.Utilities.Utility.IsValidPhoneNumber(System.String,System.String)">
            <summary>
            Validate Phone Number
            </summary>
            <param name="phoneNumber">The phonenumber.</param>
            <param name="countryIsoCode">The country ISO ALPHA-2 code.</param>
            <returns>return whether or not the phone is valid</returns>
            <remarks>
            </remarks>
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArraySplit(System.Byte[],System.String)">
             <summary>
            
             </summary>
             <param name="inputBuffer"></param>
             <param name="test"></param>
             <returns></returns>
             <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:SPM.Utilities.Utility.CombineByteArrays(System.Byte[],System.Byte[])">
            <summary>
            Combines two byte arrays into one.
            </summary>
            <param name="a1">The first byte array</param>
            <param name="a2">The second byte array</param>
            <returns>The two byte arrays joined together.</returns>
            <exception cref="T:System.ArgumentNullException">
            a1 must be not null. If a2 is null then a1 will be returned.
            </exception>
        </member>
        <member name="M:SPM.Utilities.Utility.StringToByteArray(System.String)">
            <summary>
            Takes a string and converts to a byte array using ASCII encoding.
            </summary>
            <param name="value">The string to be converted.</param>
            <returns>The byte array converted from the string.</returns>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToString(System.Byte[])">
            <summary>
            Takes a byte array and converts to a string using ASCII encoding.
            </summary>
            <param name="value">The byte array to be converted.</param>
            <returns>The string converted from the byte array. If the byte array is null then
            an empty string is returned.</returns>
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToString(System.Byte[],System.Int32)">
            <summary>
             Converts a portion of a byte array to string.
            </summary>
            <param name="value">The byte array to be converted</param>
            <param name="start">The starting position, zero based, in the byte array for the conversion.</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToString(System.Byte[],System.Int32,System.Int32)">
            <summary>
            </summary>
            <param name="value"></param>
            <param name="start"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToHex(System.Byte[])">
            <summary>
            Converts a byte array to a string with HEX display.
            </summary>
            <param name="value">The byte array to convert</param>
            <returns>A string with each byte converted to hex values.</returns>
            <remarks>In order to format the output use the overloaded method <see cref="M:SPM.Utilities.Utility.ByteArrayToHex(System.Byte[],System.String)"></see>
            </remarks>
            <exception cref="T:System.ArgumentNullException" />
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToHex(System.Byte[],System.String)">
            <summary>
             Converts a byte array to a string with HEX values, using the format provided.
            </summary>
            <param name="value">The byte array to convert</param>
            <param name="format">A format string for the output e.g. "[{0}] " to place each value in square brackets
             and have a space between each value.
             </param>
            <returns>A string with each byte converted to hex values, using the formatting provided.</returns>
             <exception cref="T:System.ArgumentNullException" />
             <exception cref="T:System.FormatException"/>
        </member>
        <member name="M:SPM.Utilities.Utility.ByteArrayToHex(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Convert a portion of a byte array to a Hex string
            </summary>
            <param name="value">The byte array to convert.</param>
            <param name="start">The first byte in the array to convert.</param>
            <param name="len">The number of bytes to convert.</param>
            <returns>A string with each byte converted to hex values, no formatting.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException" />
        </member>
        <member name="M:SPM.Utilities.Utility.HexStringToByteArray(System.String)">
            <summary>
            Takes a string and converts it to a byte array. The assumption is that the string is a
            series of hex values that are delimited by square brackets.
            </summary>
            <param name="value">The string to convert</param>
            <returns>A byte array</returns>
        </member>
        <member name="M:SPM.Utilities.Utility.LongToByteArray(System.Int64)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.IntToByteArray(System.Int32)">
             <summary>
            
             </summary>
             <param name="value"></param>
             <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.GetBinaryContents(System.IO.Stream,System.Int64)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialLength">The initial buffer length</param>
        </member>
        <member name="M:SPM.Utilities.Utility.PictureBoxImageToByteArray(System.Windows.Forms.PictureBox)">
            <summary>
            </summary>
            <param name="pictBox"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.CalculateLRC(System.Byte[])">
            <summary>
            Calculate the LRC of the byte array presented
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.FileCheckSum(System.String)">
            <summary>
            Compute file checksum using Microsoft's SHA1 - returns the checksum in a hex string
            </summary>
            <param name="path"></param>
            <returns></returns>
            <remarks></remarks>
        </member>
        <member name="M:SPM.Utilities.Utility.CopyHashtable(System.Collections.Hashtable)">
            <summary>
            </summary>
            <param name="h"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.GetOSVersionName">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.IsNumeric(System.String)">
            <summary>
             only allows numeric values
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.IsAlphaNumeric(System.String)">
            <summary>
            only allows alphaNumeric values
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="P:SPM.Utilities.Utility.Epsilon">
            <summary>
            Gets the epsilon value for real number computations to consider equality
            </summary>
        </member>
        <member name="M:SPM.Utilities.Utility.WordWrap(System.String,System.Int32)">
            <summary>
            Wraps a line of text based on the width provided.
            </summary>
            <param name="line">The line of text to wrap</param>
            <param name="width">The width of the desired lines</param>
            <returns>A word wrapped version of the message.</returns>
        </member>
        <member name="M:SPM.Utilities.Utility.Sanitize(System.String,System.Int32,System.Int32,System.Char)">
            <summary>
            Sanitizes sensitive information from string with mask characters.
            </summary>
            <param name="value">The string needing to be sanitized.</param>
            <param name="width">The minimum width of string to replace.</param>
            <param name="maxMask">The maximum size of the sanitization masking.</param>
            <param name="maskChar">The character to replace the sensitive information with.</param>
            <returns>A sanitized version of the text.</returns>
        </member>
        <member name="M:SPM.Utilities.Utility.CenterText(System.String,System.Int32,System.Int32)">
            <summary>
            Method used to center a text line.
            </summary>
            <param name="text">text to be centered.</param>
            <param name="width">receipt width, default is set to be 40 characters.</param>
            <param name="offset">offset if invisible characters are prepended or appended.</param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.Utility.IndentLeft(System.String,System.Int32)">
            <summary>
            Indents text from the left side.
            </summary>
            <param name="str">The text to be indented.</param>
            <param name="num">The number of indents to use.</param>
            <returns>The indented text.</returns>
        </member>
        <member name="T:SPM.Utilities.WindowHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.WindowHelper.#ctor(System.IntPtr)">
            <summary>
            
            </summary>
            <param name="handle"></param>
        </member>
        <member name="P:SPM.Utilities.WindowHelper.Handle">
            <summary>
            
            </summary>
        </member>
        <member name="T:SPM.Utilities.RestartOptions">
            <summary>
            Specifies the type of restart options that an application can use.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.LogOff">
            <summary>
            Shuts down all processes running in the security context of the process that called the ExitWindowsEx function. Then it logs the user off.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.PowerOff">
            <summary>
            Shuts down the system and turns off the power. The system must support the power-off feature.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.Reboot">
            <summary>
            Shuts down the system and then restarts the system.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.ShutDown">
            <summary>
            Shuts down the system to a point at which it is safe to turn off the power. All file buffers have been flushed to disk, and all running processes have stopped. If the system supports the power-off feature, the power is also turned off.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.Suspend">
            <summary>
            Suspends the system.
            </summary>
        </member>
        <member name="F:SPM.Utilities.RestartOptions.Hibernate">
            <summary>
            Hibernates the system.
            </summary>
        </member>
        <member name="T:SPM.Utilities.LUID">
            <summary>
            An LUID is a 64-bit value guaranteed to be unique only on the system on which it was generated. The uniqueness of a locally unique identifier (LUID) is guaranteed only until the system is restarted.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LUID.LowPart">
            <summary>
            The low order part of the 64 bit value.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LUID.HighPart">
            <summary>
            The high order part of the 64 bit value.
            </summary>
        </member>
        <member name="T:SPM.Utilities.LUID_AND_ATTRIBUTES">
            <summary>
            The LUID_AND_ATTRIBUTES structure represents a locally unique identifier (LUID) and its attributes.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LUID_AND_ATTRIBUTES.pLuid">
            <summary>
            Specifies an LUID value.
            </summary>
        </member>
        <member name="F:SPM.Utilities.LUID_AND_ATTRIBUTES.Attributes">
            <summary>
            Specifies attributes of the LUID. This value contains up to 32 one-bit flags. Its meaning is dependent on the definition and use of the LUID.
            </summary>
        </member>
        <member name="T:SPM.Utilities.TOKEN_PRIVILEGES">
            <summary>
            The TOKEN_PRIVILEGES structure contains information about a set of privileges for an access token.
            </summary>
        </member>
        <member name="F:SPM.Utilities.TOKEN_PRIVILEGES.PrivilegeCount">
            <summary>
            Specifies the number of entries in the Privileges array.
            </summary>
        </member>
        <member name="F:SPM.Utilities.TOKEN_PRIVILEGES.Privileges">
            <summary>
            Specifies an array of LUID_AND_ATTRIBUTES structures. Each structure contains the LUID and attributes of a privilege.
            </summary>
        </member>
        <member name="T:SPM.Utilities.WindowsController">
            <summary>
            Implements methods to exit Windows.
            </summary>
        </member>
        <member name="F:SPM.Utilities.WindowsController.TOKEN_ADJUST_PRIVILEGES">
            <summary>Required to enable or disable the privileges in an access token.</summary>
        </member>
        <member name="F:SPM.Utilities.WindowsController.TOKEN_QUERY">
            <summary>Required to query an access token.</summary>
        </member>
        <member name="F:SPM.Utilities.WindowsController.SE_PRIVILEGE_ENABLED">
            <summary>The privilege is enabled.</summary>
        </member>
        <member name="F:SPM.Utilities.WindowsController.FORMAT_MESSAGE_FROM_SYSTEM">
            <summary>Specifies that the function should search the system message-table resource(s) for the requested message.</summary>
        </member>
        <member name="F:SPM.Utilities.WindowsController.EWX_FORCE">
            <summary>Forces processes to terminate. When this flag is set, the system does not send the WM_QUERYENDSESSION and WM_ENDSESSION messages. This can cause the applications to lose data. Therefore, you should only use this flag in an emergency.</summary>
        </member>
        <member name="M:SPM.Utilities.WindowsController.LoadLibrary(System.String)">
            <summary>
            The LoadLibrary function maps the specified executable module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">Pointer to a null-terminated string that names the executable module (either a .dll or .exe file). The name specified is the file name of the module and is not related to the name stored in the library module itself, as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.SetSuspendState(System.Int32,System.Int32,System.Int32)">
            <summary>
            The SetSuspendState function suspends the system by shutting power down. Depending on the Hibernate parameter, the system either enters a suspend (sleep) state or hibernation (S4). If the ForceFlag parameter is TRUE, the system suspends operation immediately; if it is FALSE, the system requests permission from all applications and device drivers before doing so.
            </summary>
            <param name="Hibernate">Specifies the state of the system. If TRUE, the system hibernates. If FALSE, the system is suspended.</param>
            <param name="ForceCritical">Forced suspension. If TRUE, the function broadcasts a PBT_APMSUSPEND event to each application and driver, then immediately suspends operation. If FALSE, the function broadcasts a PBT_APMQUERYSUSPEND event to each application to request permission to suspend operation.</param>
            <param name="DisableWakeEvent">If TRUE, the system disables all wake events. If FALSE, any system wake events remain enabled.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.OpenProcessToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="ProcessHandle">Handle to the process whose access token is opened.</param>
            <param name="DesiredAccess">Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access-control list (DACL) to determine which accesses are granted or denied.</param>
            <param name="TokenHandle">Pointer to a handle identifying the newly-opened access token when the function returns.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.LookupPrivilegeValue(System.String,System.String,SPM.Utilities.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
            </summary>
            <param name="lpSystemName">Pointer to a null-terminated string specifying the name of the system on which the privilege name is looked up. If a null string is specified, the function attempts to find the privilege name on the local system.</param>
            <param name="lpName">Pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege".</param>
            <param name="lpLuid">Pointer to a variable that receives the locally unique identifier by which the privilege is known on the system, specified by the lpSystemName parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.AdjustTokenPrivileges(System.IntPtr,System.Int32,SPM.Utilities.TOKEN_PRIVILEGES@,System.Int32,SPM.Utilities.TOKEN_PRIVILEGES@,System.Int32@)">
            <summary>
            The AdjustTokenPrivileges function enables or disables privileges in the specified access token. Enabling or disabling privileges in an access token requires TOKEN_ADJUST_PRIVILEGES access.
            </summary>
            <param name="TokenHandle">Handle to the access token that contains the privileges to be modified. The handle must have TOKEN_ADJUST_PRIVILEGES access to the token. If the PreviousState parameter is not NULL, the handle must also have TOKEN_QUERY access.</param>
            <param name="DisableAllPrivileges">Specifies whether the function disables all of the token's privileges. If this value is TRUE, the function disables all privileges and ignores the NewState parameter. If it is FALSE, the function modifies privileges based on the information pointed to by the NewState parameter.</param>
            <param name="NewState">Pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes. If the DisableAllPrivileges parameter is FALSE, AdjustTokenPrivileges enables or disables these privileges for the token. If you set the SE_PRIVILEGE_ENABLED attribute for a privilege, the function enables that privilege; otherwise, it disables the privilege. If DisableAllPrivileges is TRUE, the function ignores this parameter.</param>
            <param name="BufferLength">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be zero if the PreviousState parameter is NULL.</param>
            <param name="PreviousState">Pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies. This parameter can be NULL.</param>
            <param name="ReturnLength">Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be NULL if PreviousState is NULL.</param>
            <returns>If the function succeeds, the return value is nonzero. To determine whether the function adjusted all of the specified privileges, call Marshal.GetLastWin32Error.</returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            The ExitWindowsEx function either logs off the current user, shuts down the system, or shuts down and restarts the system. It sends the WM_QUERYENDSESSION message to all applications to determine if they can be terminated.
            </summary>
            <param name="uFlags">Specifies the type of shutdown.</param>
            <param name="dwReserved">This parameter is ignored.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.FormatMessage(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            The FormatMessage function formats a message string. The function requires a message definition as input. The message definition can come from a buffer passed into the function. It can come from a message table resource in an already-loaded module. Or the caller can ask the function to search the system's message table resource(s) for the message definition. The function finds the message definition in a message table resource based on a message identifier and a language identifier. The function copies the formatted message text to an output buffer, processing any embedded insert sequences if requested.
            </summary>
            <param name="dwFlags">Specifies aspects of the formatting process and how to interpret the lpSource parameter. The low-order byte of dwFlags specifies how the function handles line breaks in the output buffer. The low-order byte can also specify the maximum width of a formatted output line.</param>
            <param name="lpSource">Specifies the location of the message definition. The type of this parameter depends upon the settings in the dwFlags parameter.</param>
            <param name="dwMessageId">Specifies the message identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="dwLanguageId">Specifies the language identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="lpBuffer">Pointer to a buffer for the formatted (and null-terminated) message. If dwFlags includes FORMAT_MESSAGE_ALLOCATE_BUFFER, the function allocates a buffer using the LocalAlloc function, and places the pointer to the buffer at the address specified in lpBuffer.</param>
            <param name="nSize">If the FORMAT_MESSAGE_ALLOCATE_BUFFER flag is not set, this parameter specifies the maximum number of TCHARs that can be stored in the output buffer. If FORMAT_MESSAGE_ALLOCATE_BUFFER is set, this parameter specifies the minimum number of TCHARs to allocate for an output buffer. For ANSI text, this is the number of bytes; for Unicode text, this is the number of characters.</param>
            <param name="Arguments">Pointer to an array of values that are used as insert values in the formatted message. A %1 in the format string indicates the first value in the Arguments array; a %2 indicates the second argument; and so on.</param>
            <returns>If the function succeeds, the return value is the number of TCHARs stored in the output buffer, excluding the terminating null character.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.ExitWindows(SPM.Utilities.RestartOptions,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:SPM.Utilities.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:SPM.Utilities.WindowsController.ExitWindows(System.Int32,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <remarks>This method cannot hibernate or suspend the system.</remarks>
            <exception cref="T:SPM.Utilities.PrivilegeException">There was an error while requesting a required privilege.</exception>
        </member>
        <member name="M:SPM.Utilities.WindowsController.EnableToken(System.String)">
            <summary>
            Tries to enable the specified privilege.
            </summary>
            <param name="privilege">The privilege to enable.</param>
            <exception cref="T:SPM.Utilities.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <remarks>Thanks to Michael S. Muegel for notifying us about a bug in this code.</remarks>
        </member>
        <member name="M:SPM.Utilities.WindowsController.SuspendSystem(System.Boolean,System.Boolean)">
            <summary>
            Suspends or hibernates the system.
            </summary>
            <param name="hibernate">True if the system has to hibernate, false if the system has to be suspended.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:SPM.Utilities.WindowsController.CheckEntryPoint(System.String,System.String)">
            <summary>
            Checks whether a specified method exists on the local computer.
            </summary>
            <param name="library">The library that holds the method.</param>
            <param name="method">The entry point of the requested method.</param>
            <returns>True if the specified method is present, false otherwise.</returns>
        </member>
        <member name="M:SPM.Utilities.WindowsController.FormatError(System.Int32)">
            <summary>
            Formats an error number into an error message.
            </summary>
            <param name="number">The error number to convert.</param>
            <returns>A string representation of the specified error number.</returns>
        </member>
        <member name="T:SPM.Utilities.PrivilegeException">
            <summary>
            The exception that is thrown when an error occures when requesting a specific privilege.
            </summary>
        </member>
        <member name="M:SPM.Utilities.PrivilegeException.#ctor">
            <summary>
            Initializes a new instance of the PrivilegeException class.
            </summary>
        </member>
        <member name="M:SPM.Utilities.PrivilegeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrivilegeException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:SPM.Utilities.WMIConnection">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.WMIConnection.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.WMIConnection.ConnectionScope">
            <summary>
            
            </summary>
        </member>
        <member name="P:SPM.Utilities.WMIConnection.ConnectionOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Utilities.WMIConnection.GetPropertyValues(System.String,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            
            </summary>
            <param name="query"></param>
            <param name="propertyList"></param>
        </member>
        <member name="M:SPM.Utilities.WMIConnection.GetConnectionOptions">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.WMIConnection.GetConnectionScope(System.String,System.Management.ConnectionOptions)">
            <summary>
            
            </summary>
            <param name="machineName"></param>
            <param name="options"></param>
            <returns></returns>
        </member>
        <member name="T:SPM.Utilities.WriteLogEventArgs">
            <summary>
            A helper class to construct event arguments for the WriteLog event.
            </summary>
        </member>
        <member name="M:SPM.Utilities.WriteLogEventArgs.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:SPM.Utilities.WriteLogEventArgs.#ctor(Gurock.SmartInspect.Level,System.String,System.String)">
            <summary>
            Constructor used to send a simple text message.
            </summary>
            <param name="level">A suggested logging level for the client to use.</param>
            <param name="title">The title of the event.</param>
            <param name="message">The message of the event.</param>
        </member>
        <member name="M:SPM.Utilities.WriteLogEventArgs.#ctor(Gurock.SmartInspect.Level,System.String,System.String,System.Object)">
            <summary>
            Constructor used to send a more complicated log message. The client will need to 
            evaluate the 'logMethod' and determine the appropriate way to log or display the data.
            </summary>
            <param name="level">A suggested logging level for the client to use.</param>
            <param name="logMethod">The name of the Gurock SmartInspect log method to use.</param>
            <param name="title">The title of the event.</param>
            <param name="data">The data to be logged. The client will need to type cast the data
            depending on the logMethod used. The client must be aware of the various logMethods and how to 
            use the data for display.
            </param>
        </member>
        <member name="M:SPM.Utilities.WriteLogEventArgs.#ctor(Gurock.SmartInspect.Level,System.String,System.String,System.String)">
            <summary>
            Constructor used to send a more complicated log message. The client will need to 
            evaluate the 'logMethod' and determine the appropriate way to log or display the data.
            </summary>
            <param name="level">A suggested logging level for the client to use.</param>
            <param name="logMethod">The name of the custom method to be used.</param>
            <param name="title">The title of the event.</param>
            <param name="message">The message to be logged.</param>
        </member>
        <member name="P:SPM.Utilities.WriteLogEventArgs.LoggingLevel">
            <summary>
            The level at which the item should be logged.
            </summary>
        </member>
        <member name="P:SPM.Utilities.WriteLogEventArgs.LogMethod">
            <summary>
            The Gurock SmartInspect logging method that is suggested to use.
            </summary>
        </member>
        <member name="P:SPM.Utilities.WriteLogEventArgs.Title">
            <summary>
            The title of the log message, if any.
            </summary>
        </member>
        <member name="P:SPM.Utilities.WriteLogEventArgs.Message">
            <summary>
            The message to be logged, in most circumstance. If this is empty, check the data property
            for the information to be logged.
            </summary>
        </member>
        <member name="P:SPM.Utilities.WriteLogEventArgs.Data">
            <summary>
            If not a string message then the data that should be logged.
            </summary>
        </member>
        <member name="T:SPM.Utilities.XMLHelper">
            <summary>
            </summary>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.GetElement(System.Xml.XmlDocument@,System.String)">
            <summary>
            </summary>
            <param name="doc"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.GetElement(System.Xml.XmlElement@,System.String)">
            <summary>
            </summary>
            <param name="elem"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.ReplaceInvalidXmlChars(System.String)">
            <summary>
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SanitizeXmlString(System.String)">
            <summary>
            Remove illegal XML characters from a string.
            </summary>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.IsLegalXmlChar(System.Int32)">
            <summary>
            Whether a given character is allowed by XML 1.0.
            </summary>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SerializeObject``1(System.Object)">
            <summary>
            </summary>
            <param name="obj"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.DeserializeObject``1(System.String)">
            <summary>
            </summary>
            <param name="xml"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.WriteObject``1(System.Object)">
             <summary>
            
             </summary>
             <param name="obj"></param>
             <typeparam name="T"></typeparam>
             <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.ReadObject``1(System.String)">
             <summary>
            
             </summary>
             <param name="xml"></param>
             <typeparam name="T"></typeparam>
             <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.LoadSettings``1(System.String)">
            <summary>
            </summary>
            <param name="filename"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.LoadSettings``1(System.String,System.Boolean)">
            <summary>
            </summary>
            <param name="filename"></param>
            <param name="readEncrypted"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SaveSettings``1(System.String,System.Object)">
             <summary>
            
             </summary>
             <param name="filename"></param>
             <param name="obj"></param>
             <typeparam name="T"></typeparam>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SaveSettings``1(System.String,System.Object,System.Boolean)">
            <summary>
            </summary>
            <param name="filename"></param>
            <param name="obj"></param>
            <param name="useWcf"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SaveSettings``1(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            </summary>
            <param name="filename"></param>
            <param name="obj"></param>
            <param name="useWcf"></param>
            <param name="saveEncrypted"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.LoadFile``1(System.String)">
            <summary>
            </summary>
            <param name="filename"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.SaveFile``1(System.String,``0)">
            <summary>
            </summary>
            <param name="filename"></param>
            <param name="instance"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:SPM.Utilities.XMLHelper.RemoveUnprintableCharacters(System.String)">
             <summary>
            
             </summary>
             <param name="data"></param>
             <returns></returns>
        </member>
        <member name="T:SPM.Utilities.ZipStorer">
            <summary>
            Unique class for compression/decompression file. Represents a Zip file.
            </summary>
        </member>
        <member name="T:SPM.Utilities.ZipStorer.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:SPM.Utilities.ZipStorer.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:SPM.Utilities.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:SPM.Utilities.ZipStorer.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Create(System.String,System.String)">
            <summary>
            Method to create a new storage file
            </summary>
            <param name="_filename">Full path of Zip file to create</param>
            <param name="_comment">General comment for Zip file</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Create(System.IO.Stream,System.String)">
            <summary>
            Method to create a new zip storage in a stream
            </summary>
            <param name="_stream"></param>
            <param name="_comment"></param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="_filename">Full path of Zip file to open</param>
            <param name="_access">File access mode as used in FileStream constructor</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="_stream">Already opened stream with zip contents</param>
            <param name="_access">File access mode for stream operations</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.AddFile(SPM.Utilities.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of file to add to Zip storage</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_comment">Comment for stored file</param>        
        </member>
        <member name="M:SPM.Utilities.ZipStorer.AddStream(SPM.Utilities.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_source">Stream object containing the data to store in Zip</param>
            <param name="_modTime">Modification time of the data to store</param>
            <param name="_comment">Comment for stored file</param>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Close">
            <summary>
            Updates central directory (if pertinent) and close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.ReadCentralDir">
            <summary>
            Read all the file records in the central directory 
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.ExtractFile(SPM.Utilities.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_filename">Name of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.ExtractFile(SPM.Utilities.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.RemoveEntries(SPM.Utilities.ZipStorer@,System.Collections.Generic.List{SPM.Utilities.ZipStorer.ZipFileEntry})">
            <summary>
            Removes one of many files in storage. It creates a new Zip file.
            </summary>
            <param name="_zip">Reference to the current Zip object</param>
            <param name="_zfes">List of Entries to remove from storage</param>
            <returns>True if success, false if not</returns>
            <remarks>This method only works for storage of type FileStream</remarks>
        </member>
        <member name="M:SPM.Utilities.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream
            </summary>
        </member>
        <member name="T:SPM.Diagnostics.Process">
            <summary>
             This static class provides common diagnostic methods for a process.
            </summary>
        </member>
        <member name="M:SPM.Diagnostics.Process.IsProcessRunning(System.String)">
            <summary>
             Returns true if the named process is running, false otherwise.
            </summary>
            <param name="processName"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.Diagnostics.Process.PrevInstance">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Diagnostics.Process.PrevInstanceCount">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:SPM.Diagnostics.Process.LogAllProcesses">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.Diagnostics.Process.DoEventsFor(System.Double)">
            <summary>
            This will perform DoEvents for a specific period of time
            </summary>
            <param name="milliseconds"></param>
        </member>
        <member name="T:SPM.WindowsForms.CustomMessageBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.ShowDialog(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="heading"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.ShowDialog(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="heading"></param>
            <param name="explanation"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.ShowDialog(System.String,System.String,System.Windows.Forms.MessageBoxButtons)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="heading"></param>
            <param name="buttons"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.ShowDialog(System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="heading"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.ShowDialog(System.String,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            
            </summary>
            <param name="title"></param>
            <param name="heading"></param>
            <param name="explanation"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
            <returns></returns>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.#ctor(System.String,System.String,System.String,System.Windows.Forms.MessageBoxButtons,System.Windows.Forms.MessageBoxIcon)">
            <summary>
            
            </summary>
            <param name="explanation"></param>
            <param name="buttons"></param>
            <param name="icon"></param>
            <param name="title"></param>
            <param name="heading"></param>
        </member>
        <member name="F:SPM.WindowsForms.CustomMessageBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:SPM.WindowsForms.CustomMessageBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:SPMCommon.Configuration.IConfiguration">
            <summary>
            The interface that all configurable items will have.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.AssemblyLocation">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.BuildDate">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.Company">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.Copyright">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.ProductName">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.ProductTitle">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.ProductDescription">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.Version">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.IConfiguration.FileVersionInfo">
            <summary>
            </summary>
        </member>
        <member name="M:SPMCommon.Configuration.IConfiguration.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:SPMCommon.Configuration.SPM2011Profiles">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.SPM2011Profiles.Instance">
            <summary>
            </summary>
        </member>
        <member name="F:SPMCommon.Configuration.SPM2011Profiles.ProfilesFileName">
            <summary>
            </summary>
        </member>
        <member name="F:SPMCommon.Configuration.SPM2011Profiles.ProfilesFileFullpath">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.SPM2011Profiles.Profiles">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.SPM2011Profiles.SelectedKey">
            <summary>
            </summary>
        </member>
        <member name="P:SPMCommon.Configuration.SPM2011Profiles.SelectedItem">
            <summary>
            </summary>
        </member>
        <member name="M:SPMCommon.Configuration.SPM2011Profiles.FindByKey(System.Int32)">
            <summary>
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:SPMCommon.Configuration.SPM2011Profiles.LogMe">
            <summary>
            </summary>
        </member>
        <member name="M:SPMCommon.Configuration.SPM2011Profiles.LogMe(System.String)">
            <summary>
            </summary>
            <param name="title"></param>
        </member>
        <member name="T:SupportClass">
            <summary>
            Contains conversion support elements such as classes, interfaces and static methods.
            </summary>
        </member>
        <member name="M:SupportClass.ToByteArray(System.SByte[])">
            <summary>
            Converts an array of sbytes to an array of bytes
            </summary>
            <param name="sbyteArray">The array of sbytes to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:SupportClass.ToByteArray(System.String)">
            <summary>
            Converts a string to an array of bytes
            </summary>
            <param name="sourceString">The string to be converted</param>
            <returns>The new array of bytes</returns>
        </member>
        <member name="M:SupportClass.ToByteArray(System.Object[])">
            <summary>
            Converts a array of object-type instances to a byte-type array.
            </summary>
            <param name="tempObjectArray">Array to convert.</param>
            <returns>An array of byte type elements.</returns>
        </member>
        <member name="M:SupportClass.URShift(System.Int32,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:SupportClass.URShift(System.Int32,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:SupportClass.URShift(System.Int64,System.Int32)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:SupportClass.URShift(System.Int64,System.Int64)">
            <summary>
            Performs an unsigned bitwise right shift with the specified number
            </summary>
            <param name="number">Number to operate on</param>
            <param name="bits">Ammount of bits to shift</param>
            <returns>The resulting number from the shift operation</returns>
        </member>
        <member name="M:SupportClass.Identity(System.Int64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:SupportClass.Identity(System.UInt64)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:SupportClass.Identity(System.Single)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:SupportClass.Identity(System.Double)">
            <summary>
            This method returns the literal value received
            </summary>
            <param name="literal">The literal to return</param>
            <returns>The received value</returns>
        </member>
        <member name="M:SupportClass.GetCharsFromString(System.String,System.Int32,System.Int32,System.Char[],System.Int32)">
            <summary>
            Copies an array of chars obtained from a String into a specified array of chars
            </summary>
            <param name="sourceString">The String to get the chars from</param>
            <param name="sourceStart">Position of the String to start getting the chars</param>
            <param name="sourceEnd">Position of the String to end getting the chars</param>
            <param name="destinationArray">Array to return the chars</param>
            <param name="destinationStart">Position of the destination array of chars to start storing the chars</param>
            <returns>An array of chars</returns>
        </member>
        <member name="M:SupportClass.SetCapacity(System.Collections.ArrayList,System.Int32)">
            <summary>
            Sets the capacity for the specified ArrayList
            </summary>
            <param name="vector">The ArrayList which capacity will be set</param>
            <param name="newCapacity">The new capacity value</param>
        </member>
        <member name="M:SupportClass.ToSByteArray(System.Byte[])">
            <summary>
            Receives a byte array and returns it transformed in an sbyte array
            </summary>
            <param name="byteArray">Byte array to process</param>
            <returns>The transformed array</returns>
        </member>
    </members>
</doc>
